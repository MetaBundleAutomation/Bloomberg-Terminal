{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n_c = NewsFeedContainer;\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = NewsFeedHeader;\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n_c4 = NewsItemList;\nconst NewsItem = styled.div`\n  display: flex;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  border-left: 4px solid ${props => props.highlighted ? 'var(--accent-color)' : props.sentiment > 0.3 ? 'var(--positive-color)' : props.sentiment < -0.3 ? 'var(--negative-color)' : 'var(--neutral-color)'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c5 = NewsItem;\nconst NewsContent = styled.div`\n  flex: 1;\n`;\n_c6 = NewsContent;\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  color: var(--text-color);\n`;\n_c7 = NewsTitle;\nconst NewsSource = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.8rem;\n  color: #aaa;\n`;\n_c8 = NewsSource;\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 80px;\n`;\n_c9 = NewsMeta;\nconst NewsDate = styled.div`\n  font-size: 0.8rem;\n  color: #aaa;\n`;\n_c10 = NewsDate;\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  background-color: ${props => props.sentiment > 0.3 ? 'rgba(76, 175, 80, 0.2)' : props.sentiment < -0.3 ? 'rgba(244, 67, 54, 0.2)' : 'rgba(158, 158, 158, 0.2)'};\n  color: ${props => props.sentiment > 0.3 ? 'var(--positive-color)' : props.sentiment < -0.3 ? 'var(--negative-color)' : 'var(--neutral-color)'};\n`;\n\n// Mock data - this would come from your API\n_c11 = SentimentBadge;\nconst generateMockNewsData = (symbol = 'GENERAL') => {\n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  const newsSources = [\"Bloomberg\", \"CNBC\", \"Financial Times\", \"Wall Street Journal\", \"Reuters\"];\n\n  // Generate news titles based on the symbol\n  const symbolName = symbol === 'GENERAL' ? 'Markets' : symbol;\n  const positiveEvents = [`${symbolName} Surges on Strong Earnings Report`, `Analysts Upgrade ${symbolName} Following Product Announcement`, `${symbolName} Gains as Sector Shows Growth`, `New Partnership Boosts ${symbolName} Shares`, `${symbolName} Rallies Amid Positive Economic Data`];\n  const negativeEvents = [`${symbolName} Drops After Missing Quarterly Expectations`, `Regulatory Concerns Weigh on ${symbolName}`, `${symbolName} Falls as Competitors Gain Market Share`, `Investors Cautious About ${symbolName}'s Growth Prospects`, `${symbolName} Declines Following Industry Downturn`];\n  const neutralEvents = [`${symbolName} Holds Steady Ahead of Earnings`, `Analysts Maintain Neutral Stance on ${symbolName}`, `${symbolName} Shows Mixed Signals in Volatile Market`, `Investors Await More Clarity on ${symbolName}'s Strategy`, `${symbolName} Trades Sideways on Low Volume`];\n\n  // General market news that might affect any symbol\n  const marketEvents = [\"Federal Reserve Signals Potential Rate Hike\", \"Inflation Concerns Weigh on Markets\", \"Global Supply Chain Issues Begin to Ease\", \"Economic Growth Exceeds Expectations\", \"Market Volatility Increases Amid Geopolitical Tensions\"];\n\n  // Generate news items\n  const newsCount = 5 + symbolSeed % 5; // 5-9 news items\n  const data = [];\n  const today = new Date();\n  for (let i = 0; i < newsCount; i++) {\n    // Date within the last 10 days\n    const daysAgo = Math.floor(Math.random() * 10);\n    const date = new Date(today);\n    date.setDate(date.getDate() - daysAgo);\n\n    // Sentiment based on symbol and day\n    const sentimentBase = (symbolSeed + i) % 10 / 10; // 0 to 0.9\n    const sentiment = sentimentBase * 2 - 1 + (Math.random() * 0.4 - 0.2); // -1 to 1 with some randomness\n\n    // Select news title based on sentiment\n    let title;\n    let isSymbolSpecific = Math.random() > 0.3; // 70% symbol-specific news, 30% general market news\n\n    if (!isSymbolSpecific) {\n      title = marketEvents[Math.floor(Math.random() * marketEvents.length)];\n    } else if (sentiment > 0.3) {\n      title = positiveEvents[Math.floor(Math.random() * positiveEvents.length)];\n    } else if (sentiment < -0.3) {\n      title = negativeEvents[Math.floor(Math.random() * negativeEvents.length)];\n    } else {\n      title = neutralEvents[Math.floor(Math.random() * neutralEvents.length)];\n    }\n    data.push({\n      id: i + 1,\n      title,\n      source: newsSources[Math.floor(Math.random() * newsSources.length)],\n      date: date.toISOString().split('T')[0],\n      sentiment,\n      summary: `This is a mock summary about ${isSymbolSpecific ? symbolName : 'the market'} on ${date.toISOString().split('T')[0]}.`,\n      isSymbolSpecific\n    });\n  }\n\n  // Sort by date (newest first)\n  return data.sort((a, b) => new Date(b.date) - new Date(a.date));\n};\nconst NewsFeed = ({\n  onNewsClick,\n  symbol = 'GENERAL',\n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  useEffect(() => {\n    const fetchNews = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/news?symbol=${apiSymbol}`);\n        setNewsData(response.data);\n        setFilteredNewsData(response.data); // Initialize filtered data with all news\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to fetch news from API. Using mock data instead.');\n\n        // Fallback to mock data if API fails\n        const mockData = generateMockNewsData(symbol);\n        setNewsData(mockData);\n        setFilteredNewsData(mockData); // Initialize filtered data with all news\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNews();\n  }, [symbol, dataSource]);\n\n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    console.log(\"Filtering news with:\", {\n      selectedDate,\n      selectedDateRange\n    });\n    let filtered = [...newsData];\n    if (selectedDate) {\n      console.log(\"Filtering for specific date:\", selectedDate);\n      filtered = newsData.filter(news => news.date === selectedDate);\n    } else if (selectedDateRange) {\n      console.log(\"Filtering for date range:\", selectedDateRange);\n      const {\n        startDate,\n        endDate\n      } = selectedDateRange;\n      filtered = newsData.filter(news => {\n        const newsDate = new Date(news.date);\n        return newsDate >= new Date(startDate) && newsDate <= new Date(endDate);\n      });\n    }\n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n\n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  const handleNewsClick = newsItem => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  const getSentimentLabel = sentiment => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n\n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      return `Market News from ${selectedDateRange.startDate} to ${selectedDateRange.endDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NewsFeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NewsFeedHeader, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: [getNewsTitle(), \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), (selectedDate || selectedDateRange) && filteredNewsData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: 'var(--text-secondary)'\n      },\n      children: [\"No news articles found for the selected \", selectedDate ? 'date' : 'date range', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewsItemList, {\n      children: filteredNewsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"KHj9q+piZ5m81sxhJKCg3lr6/50=\");\n_c12 = NewsFeed;\nexport default NewsFeed;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"NewsFeedContainer\");\n$RefreshReg$(_c2, \"NewsFeedHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NewsItemList\");\n$RefreshReg$(_c5, \"NewsItem\");\n$RefreshReg$(_c6, \"NewsContent\");\n$RefreshReg$(_c7, \"NewsTitle\");\n$RefreshReg$(_c8, \"NewsSource\");\n$RefreshReg$(_c9, \"NewsMeta\");\n$RefreshReg$(_c10, \"NewsDate\");\n$RefreshReg$(_c11, \"SentimentBadge\");\n$RefreshReg$(_c12, \"NewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","NewsFeedContainer","div","_c","NewsFeedHeader","_c2","Title","h3","_c3","NewsItemList","_c4","NewsItem","props","highlighted","sentiment","_c5","NewsContent","_c6","NewsTitle","h4","_c7","NewsSource","_c8","NewsMeta","_c9","NewsDate","_c10","SentimentBadge","_c11","generateMockNewsData","symbol","symbolSeed","split","reduce","acc","char","charCodeAt","newsSources","symbolName","positiveEvents","negativeEvents","neutralEvents","marketEvents","newsCount","data","today","Date","i","daysAgo","Math","floor","random","date","setDate","getDate","sentimentBase","title","isSymbolSpecific","length","push","id","source","toISOString","summary","sort","a","b","NewsFeed","onNewsClick","dataSource","selectedDate","selectedDateRange","_s","newsData","setNewsData","filteredNewsData","setFilteredNewsData","loading","setLoading","error","setError","newsRefs","fetchNews","apiSymbol","response","get","err","console","mockData","log","filtered","filter","news","startDate","endDate","newsDate","setTimeout","matchingNews","find","current","scrollIntoView","behavior","block","handleNewsClick","newsItem","getSentimentLabel","getNewsTitle","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","padding","textAlign","map","onClick","ref","el","_c12","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/NewsFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  background-color: ${props => \n    props.highlighted \n      ? 'var(--highlight-background)' \n      : 'transparent'\n  };\n  border-left: 4px solid ${props => \n    props.highlighted \n      ? 'var(--accent-color)' \n      : props.sentiment > 0.3 \n        ? 'var(--positive-color)' \n        : props.sentiment < -0.3 \n          ? 'var(--negative-color)' \n          : 'var(--neutral-color)'\n  };\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst NewsContent = styled.div`\n  flex: 1;\n`;\n\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  color: var(--text-color);\n`;\n\nconst NewsSource = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.8rem;\n  color: #aaa;\n`;\n\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 80px;\n`;\n\nconst NewsDate = styled.div`\n  font-size: 0.8rem;\n  color: #aaa;\n`;\n\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  background-color: ${props => \n    props.sentiment > 0.3 ? 'rgba(76, 175, 80, 0.2)' : \n    props.sentiment < -0.3 ? 'rgba(244, 67, 54, 0.2)' : \n    'rgba(158, 158, 158, 0.2)'};\n  color: ${props => \n    props.sentiment > 0.3 ? 'var(--positive-color)' : \n    props.sentiment < -0.3 ? 'var(--negative-color)' : \n    'var(--neutral-color)'};\n`;\n\n// Mock data - this would come from your API\nconst generateMockNewsData = (symbol = 'GENERAL') => {\n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  \n  const newsSources = [\"Bloomberg\", \"CNBC\", \"Financial Times\", \"Wall Street Journal\", \"Reuters\"];\n  \n  // Generate news titles based on the symbol\n  const symbolName = symbol === 'GENERAL' ? 'Markets' : symbol;\n  \n  const positiveEvents = [\n    `${symbolName} Surges on Strong Earnings Report`,\n    `Analysts Upgrade ${symbolName} Following Product Announcement`,\n    `${symbolName} Gains as Sector Shows Growth`,\n    `New Partnership Boosts ${symbolName} Shares`,\n    `${symbolName} Rallies Amid Positive Economic Data`\n  ];\n  \n  const negativeEvents = [\n    `${symbolName} Drops After Missing Quarterly Expectations`,\n    `Regulatory Concerns Weigh on ${symbolName}`,\n    `${symbolName} Falls as Competitors Gain Market Share`,\n    `Investors Cautious About ${symbolName}'s Growth Prospects`,\n    `${symbolName} Declines Following Industry Downturn`\n  ];\n  \n  const neutralEvents = [\n    `${symbolName} Holds Steady Ahead of Earnings`,\n    `Analysts Maintain Neutral Stance on ${symbolName}`,\n    `${symbolName} Shows Mixed Signals in Volatile Market`,\n    `Investors Await More Clarity on ${symbolName}'s Strategy`,\n    `${symbolName} Trades Sideways on Low Volume`\n  ];\n  \n  // General market news that might affect any symbol\n  const marketEvents = [\n    \"Federal Reserve Signals Potential Rate Hike\",\n    \"Inflation Concerns Weigh on Markets\",\n    \"Global Supply Chain Issues Begin to Ease\",\n    \"Economic Growth Exceeds Expectations\",\n    \"Market Volatility Increases Amid Geopolitical Tensions\"\n  ];\n  \n  // Generate news items\n  const newsCount = 5 + (symbolSeed % 5); // 5-9 news items\n  const data = [];\n  \n  const today = new Date();\n  \n  for (let i = 0; i < newsCount; i++) {\n    // Date within the last 10 days\n    const daysAgo = Math.floor(Math.random() * 10);\n    const date = new Date(today);\n    date.setDate(date.getDate() - daysAgo);\n    \n    // Sentiment based on symbol and day\n    const sentimentBase = ((symbolSeed + i) % 10) / 10; // 0 to 0.9\n    const sentiment = (sentimentBase * 2 - 1) + (Math.random() * 0.4 - 0.2); // -1 to 1 with some randomness\n    \n    // Select news title based on sentiment\n    let title;\n    let isSymbolSpecific = Math.random() > 0.3; // 70% symbol-specific news, 30% general market news\n    \n    if (!isSymbolSpecific) {\n      title = marketEvents[Math.floor(Math.random() * marketEvents.length)];\n    } else if (sentiment > 0.3) {\n      title = positiveEvents[Math.floor(Math.random() * positiveEvents.length)];\n    } else if (sentiment < -0.3) {\n      title = negativeEvents[Math.floor(Math.random() * negativeEvents.length)];\n    } else {\n      title = neutralEvents[Math.floor(Math.random() * neutralEvents.length)];\n    }\n    \n    data.push({\n      id: i + 1,\n      title,\n      source: newsSources[Math.floor(Math.random() * newsSources.length)],\n      date: date.toISOString().split('T')[0],\n      sentiment,\n      summary: `This is a mock summary about ${isSymbolSpecific ? symbolName : 'the market'} on ${date.toISOString().split('T')[0]}.`,\n      isSymbolSpecific\n    });\n  }\n  \n  // Sort by date (newest first)\n  return data.sort((a, b) => new Date(b.date) - new Date(a.date));\n};\n\nconst NewsFeed = ({ \n  onNewsClick, \n  symbol = 'GENERAL', \n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  \n  useEffect(() => {\n    const fetchNews = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/news?symbol=${apiSymbol}`);\n        setNewsData(response.data);\n        setFilteredNewsData(response.data); // Initialize filtered data with all news\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to fetch news from API. Using mock data instead.');\n        \n        // Fallback to mock data if API fails\n        const mockData = generateMockNewsData(symbol);\n        setNewsData(mockData);\n        setFilteredNewsData(mockData); // Initialize filtered data with all news\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchNews();\n  }, [symbol, dataSource]);\n  \n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    \n    console.log(\"Filtering news with:\", { selectedDate, selectedDateRange });\n    \n    let filtered = [...newsData];\n    \n    if (selectedDate) {\n      console.log(\"Filtering for specific date:\", selectedDate);\n      filtered = newsData.filter(news => news.date === selectedDate);\n    } else if (selectedDateRange) {\n      console.log(\"Filtering for date range:\", selectedDateRange);\n      const { startDate, endDate } = selectedDateRange;\n      filtered = newsData.filter(news => {\n        const newsDate = new Date(news.date);\n        return newsDate >= new Date(startDate) && newsDate <= new Date(endDate);\n      });\n    }\n    \n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n    \n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({ \n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  \n  const handleNewsClick = (newsItem) => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  \n  const getSentimentLabel = (sentiment) => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n  \n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      return `Market News from ${selectedDateRange.startDate} to ${selectedDateRange.endDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  \n  return (\n    <NewsFeedContainer>\n      <NewsFeedHeader>\n        <Title>{getNewsTitle()} {loading && '(Loading...)'}</Title>\n      </NewsFeedHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      {(selectedDate || selectedDateRange) && filteredNewsData.length === 0 && (\n        <div style={{ padding: '20px', textAlign: 'center', color: 'var(--text-secondary)' }}>\n          No news articles found for the selected {selectedDate ? 'date' : 'date range'}.\n        </div>\n      )}\n      \n      <NewsItemList>\n        {filteredNewsData.map(news => (\n          <NewsItem \n            key={news.id} \n            sentiment={news.sentiment}\n            onClick={() => handleNewsClick(news)}\n            ref={el => newsRefs.current[news.id] = el}\n            highlighted={selectedDate === news.date}\n          >\n            <NewsContent>\n              <NewsTitle>{news.title}</NewsTitle>\n              <NewsSource>\n                <span>{news.source}</span>\n              </NewsSource>\n            </NewsContent>\n            <NewsMeta>\n              <NewsDate>{news.date}</NewsDate>\n              <SentimentBadge sentiment={news.sentiment}>\n                {getSentimentLabel(news.sentiment)}\n              </SentimentBadge>\n            </NewsMeta>\n          </NewsItem>\n        ))}\n      </NewsItemList>\n    </NewsFeedContainer>\n  );\n};\n\nexport default NewsFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}