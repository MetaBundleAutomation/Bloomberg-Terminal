{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ResponsiveContainer, ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Scatter, ReferenceLine } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n`;\n_c = TimelineContainer;\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = TimelineHeader;\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-color);\n`;\n_c3 = Title;\nconst Controls = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n_c4 = Controls;\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n`;\n\n// Mock data - this would come from your API\n_c5 = Button;\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n\n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  let basePrice = 100 + symbolSeed % 200; // Different starting price based on symbol\n  let trend = symbolSeed % 10 / 10; // Different trend direction based on symbol\n\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n\n    // Generate price movement influenced by the symbol and day\n    const dayInfluence = Math.sin(i * (symbolSeed % 5) / 10) * 5;\n    const randomFactor = Math.random() * 10 - 5;\n    const priceChange = (randomFactor + dayInfluence + trend) * (1 + symbolSeed % 5 / 10);\n    basePrice += priceChange;\n    const price = Math.max(50, basePrice); // Ensure price doesn't go too low\n    const volume = Math.random() * 1000000 * (1 + symbolSeed % 3 / 5);\n    const sentiment = Math.random() * 2 - 1; // -1 to 1\n\n    // Generate some news events randomly, but more likely on big price changes\n    const priceChangeThreshold = Math.abs(priceChange) > 3 ? 0.5 : 0.8;\n    const hasNews = Math.random() > priceChangeThreshold;\n    const newsCount = hasNews ? Math.floor(Math.random() * 3) + 1 : 0;\n    data.push({\n      date: date.toISOString().split('T')[0],\n      price,\n      volume,\n      sentiment,\n      newsCount,\n      news: hasNews ? {\n        id: `news-${symbol}-${i}`,\n        title: `${Math.abs(priceChange) > 3 ? 'Major' : 'Minor'} Movement in ${symbol}`,\n        sentiment: sentiment\n      } : null\n    });\n  }\n  return data;\n};\nconst Timeline = ({\n  dataSource,\n  symbol\n}) => {\n  _s();\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Get days based on selected time range\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n\n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/timeline?days=${days}&symbol=${apiSymbol}`);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to fetch data from API. Using mock data instead.');\n\n        // Fallback to mock data if API fails\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        setData(generateMockData(days, symbol || 'GENERAL'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [timeRange, dataSource, symbol]);\n  const handleTimeRangeChange = range => {\n    setTimeRange(range);\n  };\n\n  // Custom tooltip to show news and sentiment\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      const dataPoint = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        style: {\n          backgroundColor: '#333',\n          padding: '10px',\n          border: '1px solid #444',\n          borderRadius: '4px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [\"Price: $\", dataPoint.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"volume\",\n          children: [\"Volume: \", dataPoint.volume.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sentiment\",\n          style: {\n            color: dataPoint.sentiment > 0 ? 'var(--positive-color)' : dataPoint.sentiment < 0 ? 'var(--negative-color)' : 'var(--neutral-color)'\n          },\n          children: [\"Sentiment: \", dataPoint.sentiment.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), dataPoint.newsCount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"news\",\n          children: [\"News Events: \", dataPoint.newsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(TimelineContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TimelineHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Market Timeline \", symbol && `- ${symbol}`, \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1W',\n          onClick: () => handleTimeRangeChange('1W'),\n          children: \"1W\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1M',\n          onClick: () => handleTimeRangeChange('1M'),\n          children: \"1M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '3M',\n          onClick: () => handleTimeRangeChange('3M'),\n          children: \"3M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1Y',\n          onClick: () => handleTimeRangeChange('1Y'),\n          children: \"1Y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#444\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          scale: \"auto\",\n          tick: {\n            fill: 'var(--text-color)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\",\n          orientation: \"left\",\n          tick: {\n            fill: 'var(--text-color)'\n          },\n          domain: ['auto', 'auto']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\",\n          tick: {\n            fill: 'var(--text-color)'\n          },\n          domain: [-1, 1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"left\",\n          dataKey: \"volume\",\n          fill: \"rgba(33, 150, 243, 0.3)\",\n          barSize: 20,\n          name: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          yAxisId: \"left\",\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#ff9800\",\n          dot: false,\n          name: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          yAxisId: \"right\",\n          type: \"monotone\",\n          dataKey: \"sentiment\",\n          stroke: \"#4caf50\",\n          dot: false,\n          name: \"Sentiment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n          yAxisId: \"left\",\n          dataKey: \"price\",\n          data: data.filter(d => d.newsCount > 0),\n          fill: \"#f44336\",\n          name: \"News Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          yAxisId: \"right\",\n          y: 0,\n          stroke: \"#666\",\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"aKv8U27NKyzG9AKL/mLpIHvLIiA=\");\n_c6 = Timeline;\nexport default Timeline;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"TimelineContainer\");\n$RefreshReg$(_c2, \"TimelineHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","styled","ResponsiveContainer","ComposedChart","Line","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Scatter","ReferenceLine","axios","jsxDEV","_jsxDEV","TimelineContainer","div","_c","TimelineHeader","_c2","Title","h3","_c3","Controls","_c4","Button","button","props","active","_c5","generateMockData","days","symbol","data","startDate","Date","setDate","getDate","symbolSeed","split","reduce","acc","char","charCodeAt","basePrice","trend","i","date","dayInfluence","Math","sin","randomFactor","random","priceChange","price","max","volume","sentiment","priceChangeThreshold","abs","hasNews","newsCount","floor","push","toISOString","news","id","title","Timeline","dataSource","_s","timeRange","setTimeRange","setData","loading","setLoading","error","setError","fetchData","apiSymbol","response","get","err","console","handleTimeRangeChange","range","CustomTooltip","payload","label","length","dataPoint","className","style","backgroundColor","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","toLocaleString","color","onClick","marginBottom","width","height","margin","top","right","bottom","left","strokeDasharray","stroke","dataKey","scale","tick","fill","yAxisId","orientation","domain","content","barSize","name","type","dot","filter","d","y","_c6","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { \n  ResponsiveContainer, \n  ComposedChart, \n  Line, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend,\n  Scatter,\n  ReferenceLine\n} from 'recharts';\nimport axios from 'axios';\n\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n`;\n\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-color);\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n`;\n\n// Mock data - this would come from your API\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n  \n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  \n  let basePrice = 100 + (symbolSeed % 200); // Different starting price based on symbol\n  let trend = (symbolSeed % 10) / 10; // Different trend direction based on symbol\n  \n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    \n    // Generate price movement influenced by the symbol and day\n    const dayInfluence = Math.sin(i * (symbolSeed % 5) / 10) * 5;\n    const randomFactor = Math.random() * 10 - 5;\n    const priceChange = (randomFactor + dayInfluence + trend) * (1 + (symbolSeed % 5) / 10);\n    \n    basePrice += priceChange;\n    \n    const price = Math.max(50, basePrice); // Ensure price doesn't go too low\n    const volume = Math.random() * 1000000 * (1 + (symbolSeed % 3) / 5);\n    const sentiment = Math.random() * 2 - 1; // -1 to 1\n    \n    // Generate some news events randomly, but more likely on big price changes\n    const priceChangeThreshold = Math.abs(priceChange) > 3 ? 0.5 : 0.8;\n    const hasNews = Math.random() > priceChangeThreshold;\n    const newsCount = hasNews ? Math.floor(Math.random() * 3) + 1 : 0;\n    \n    data.push({\n      date: date.toISOString().split('T')[0],\n      price,\n      volume,\n      sentiment,\n      newsCount,\n      news: hasNews ? {\n        id: `news-${symbol}-${i}`,\n        title: `${Math.abs(priceChange) > 3 ? 'Major' : 'Minor'} Movement in ${symbol}`,\n        sentiment: sentiment\n      } : null\n    });\n  }\n  \n  return data;\n};\n\nconst Timeline = ({ dataSource, symbol }) => {\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Get days based on selected time range\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        \n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/timeline?days=${days}&symbol=${apiSymbol}`);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to fetch data from API. Using mock data instead.');\n        \n        // Fallback to mock data if API fails\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        setData(generateMockData(days, symbol || 'GENERAL'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [timeRange, dataSource, symbol]);\n  \n  const handleTimeRangeChange = (range) => {\n    setTimeRange(range);\n  };\n  \n  // Custom tooltip to show news and sentiment\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const dataPoint = payload[0].payload;\n      \n      return (\n        <div className=\"custom-tooltip\" style={{ \n          backgroundColor: '#333', \n          padding: '10px', \n          border: '1px solid #444',\n          borderRadius: '4px'\n        }}>\n          <p className=\"date\">{label}</p>\n          <p className=\"price\">Price: ${dataPoint.price.toFixed(2)}</p>\n          <p className=\"volume\">Volume: {dataPoint.volume.toLocaleString()}</p>\n          <p className=\"sentiment\" style={{ \n            color: dataPoint.sentiment > 0 ? 'var(--positive-color)' : \n                  dataPoint.sentiment < 0 ? 'var(--negative-color)' : 'var(--neutral-color)'\n          }}>\n            Sentiment: {dataPoint.sentiment.toFixed(2)}\n          </p>\n          {dataPoint.newsCount > 0 && (\n            <p className=\"news\">News Events: {dataPoint.newsCount}</p>\n          )}\n        </div>\n      );\n    }\n    \n    return null;\n  };\n  \n  return (\n    <TimelineContainer>\n      <TimelineHeader>\n        <Title>Market Timeline {symbol && `- ${symbol}`} {loading && '(Loading...)'}</Title>\n        <Controls>\n          <Button active={timeRange === '1W'} onClick={() => handleTimeRangeChange('1W')}>1W</Button>\n          <Button active={timeRange === '1M'} onClick={() => handleTimeRangeChange('1M')}>1M</Button>\n          <Button active={timeRange === '3M'} onClick={() => handleTimeRangeChange('3M')}>3M</Button>\n          <Button active={timeRange === '1Y'} onClick={() => handleTimeRangeChange('1Y')}>1Y</Button>\n        </Controls>\n      </TimelineHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ComposedChart\n          data={data}\n          margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n          <XAxis \n            dataKey=\"date\" \n            scale=\"auto\" \n            tick={{ fill: 'var(--text-color)' }}\n          />\n          <YAxis \n            yAxisId=\"left\" \n            orientation=\"left\" \n            tick={{ fill: 'var(--text-color)' }}\n            domain={['auto', 'auto']}\n          />\n          <YAxis \n            yAxisId=\"right\" \n            orientation=\"right\" \n            tick={{ fill: 'var(--text-color)' }}\n            domain={[-1, 1]}\n          />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend />\n          <Bar \n            yAxisId=\"left\" \n            dataKey=\"volume\" \n            fill=\"rgba(33, 150, 243, 0.3)\" \n            barSize={20} \n            name=\"Volume\"\n          />\n          <Line \n            yAxisId=\"left\" \n            type=\"monotone\" \n            dataKey=\"price\" \n            stroke=\"#ff9800\" \n            dot={false} \n            name=\"Price\"\n          />\n          <Line \n            yAxisId=\"right\" \n            type=\"monotone\" \n            dataKey=\"sentiment\" \n            stroke=\"#4caf50\" \n            dot={false} \n            name=\"Sentiment\"\n          />\n          <Scatter \n            yAxisId=\"left\" \n            dataKey=\"price\" \n            data={data.filter(d => d.newsCount > 0)} \n            fill=\"#f44336\" \n            name=\"News Events\"\n          />\n          <ReferenceLine \n            yAxisId=\"right\" \n            y={0} \n            stroke=\"#666\" \n            strokeDasharray=\"3 3\" \n          />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}