{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n_c = NewsFeedContainer;\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = NewsFeedHeader;\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n_c4 = NewsItemList;\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c5 = NewsItem;\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n_c6 = NewsContent;\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n_c7 = NewsTitle;\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c8 = NewsSource;\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n_c9 = NewsMeta;\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c10 = NewsDate;\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n  if (props.sentiment > 0.3) return 'var(--positive-color)';\n  if (props.sentiment < -0.3) return 'var(--negative-color)';\n  return 'var(--neutral-color)';\n}};\n  color: white;\n`;\n_c11 = SentimentBadge;\nconst NewsFeed = ({\n  onNewsClick,\n  symbol = 'GENERAL',\n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n\n  // Fetch news data from the API\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        let endpoint;\n\n        // Use different endpoints based on whether we have a date range or not\n        if (selectedDateRange) {\n          // Use the date range specific endpoint\n          endpoint = `http://localhost:8001/api/news/date-range?symbol=${symbol || 'GENERAL'}&start_date=${selectedDateRange.startDate}&end_date=${selectedDateRange.endDate || selectedDateRange.displayEndDate}`;\n          console.log('Fetching date range news data from:', endpoint);\n        } else {\n          // Use the standard news endpoint\n          const days = dataSource === 'historical' ? 365 : 30;\n          endpoint = `http://localhost:8001/api/news?symbol=${symbol || 'GENERAL'}&days=${days}`;\n\n          // If we have a selected date but not a range, we could add that to the query\n          // but we'll filter client-side instead for flexibility\n          console.log('Fetching news data from:', endpoint);\n        }\n        const response = await axios.get(endpoint);\n        console.log('News data received:', response.data);\n        setNewsData(response.data);\n\n        // Initialize filtered data with all news or filtered news\n        if (selectedDate || selectedDateRange) {\n          filterNewsData(response.data, selectedDate, selectedDateRange);\n        } else {\n          setFilteredNewsData(response.data);\n        }\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to load news data. Please try again later.');\n        setNewsData([]);\n        setFilteredNewsData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNewsData();\n  }, [symbol, dataSource, selectedDateRange]);\n\n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", {\n      date,\n      dateRange,\n      dataLength: data.length\n    });\n    let filtered = [...data];\n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      // For point selection, use exact date matching\n      filtered = data.filter(news => {\n        // Use the date field directly (we've formatted it as YYYY-MM-DD in our API)\n        return news.date === date;\n      });\n      console.log(`Found ${filtered.length} news items for date ${date}`);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n\n      // Extract start and end dates from the dateRange object\n      let startDate = dateRange.startDate;\n      let endDate = dateRange.endDate;\n\n      // If displayEndDate is provided (for UI display), use that instead\n      if (dateRange.displayEndDate) {\n        endDate = dateRange.displayEndDate;\n      }\n      console.log(`Using date range from ${startDate} to ${endDate}`);\n\n      // Filter news items within the range\n      filtered = data.filter(news => {\n        // Use the date field directly (we've formatted it as YYYY-MM-DD in our API)\n        const newsDate = news.date;\n\n        // Debug\n        console.log(`Checking news date: ${newsDate} against range ${startDate} to ${endDate}`);\n\n        // Simple string comparison works for YYYY-MM-DD format\n        return newsDate >= startDate && newsDate <= endDate;\n      });\n      console.log(`Found ${filtered.length} news items in range ${startDate} to ${endDate}`);\n    }\n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n\n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    console.log(\"Selection changed, filtering news with:\", {\n      selectedDate,\n      selectedDateRange\n    });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n\n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  const handleNewsClick = newsItem => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  const getSentimentLabel = sentiment => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n\n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      // For display, use the original end date (before we adjusted it to the next day)\n      const displayEndDate = selectedDateRange.displayEndDate || selectedDateRange.endDate;\n      return `Market News from ${selectedDateRange.startDate} to ${displayEndDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NewsFeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NewsFeedHeader, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: [getNewsTitle(), \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), (selectedDate || selectedDateRange) && filteredNewsData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: 'var(--text-secondary)'\n      },\n      children: [\"No news articles found for the selected \", selectedDate ? 'date' : 'date range', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewsItemList, {\n      children: filteredNewsData.length > 0 ? filteredNewsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), news.display_date && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u2022 \", news.display_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this)) : !selectedDate && !selectedDateRange ? newsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), news.display_date && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u2022 \", news.display_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"KHj9q+piZ5m81sxhJKCg3lr6/50=\");\n_c12 = NewsFeed;\nexport default NewsFeed;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"NewsFeedContainer\");\n$RefreshReg$(_c2, \"NewsFeedHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NewsItemList\");\n$RefreshReg$(_c5, \"NewsItem\");\n$RefreshReg$(_c6, \"NewsContent\");\n$RefreshReg$(_c7, \"NewsTitle\");\n$RefreshReg$(_c8, \"NewsSource\");\n$RefreshReg$(_c9, \"NewsMeta\");\n$RefreshReg$(_c10, \"NewsDate\");\n$RefreshReg$(_c11, \"SentimentBadge\");\n$RefreshReg$(_c12, \"NewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","NewsFeedContainer","div","_c","NewsFeedHeader","_c2","Title","h3","_c3","NewsItemList","_c4","NewsItem","props","highlighted","_c5","NewsContent","_c6","NewsTitle","h4","_c7","NewsSource","_c8","NewsMeta","_c9","NewsDate","_c10","SentimentBadge","sentiment","_c11","NewsFeed","onNewsClick","symbol","dataSource","selectedDate","selectedDateRange","_s","newsData","setNewsData","filteredNewsData","setFilteredNewsData","loading","setLoading","error","setError","newsRefs","fetchNewsData","endpoint","startDate","endDate","displayEndDate","console","log","days","response","get","data","filterNewsData","err","date","dateRange","dataLength","length","filtered","filter","news","newsDate","setTimeout","matchingNews","find","current","id","scrollIntoView","behavior","block","handleNewsClick","newsItem","getSentimentLabel","getNewsTitle","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","padding","textAlign","map","onClick","ref","el","title","source","display_date","_c12","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/NewsFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    if (props.sentiment > 0.3) return 'var(--positive-color)';\n    if (props.sentiment < -0.3) return 'var(--negative-color)';\n    return 'var(--neutral-color)';\n  }};\n  color: white;\n`;\n\nconst NewsFeed = ({ \n  onNewsClick, \n  symbol = 'GENERAL', \n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  \n  // Fetch news data from the API\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        let endpoint;\n        \n        // Use different endpoints based on whether we have a date range or not\n        if (selectedDateRange) {\n          // Use the date range specific endpoint\n          endpoint = `http://localhost:8001/api/news/date-range?symbol=${symbol || 'GENERAL'}&start_date=${selectedDateRange.startDate}&end_date=${selectedDateRange.endDate || selectedDateRange.displayEndDate}`;\n          console.log('Fetching date range news data from:', endpoint);\n        } else {\n          // Use the standard news endpoint\n          const days = dataSource === 'historical' ? 365 : 30;\n          endpoint = `http://localhost:8001/api/news?symbol=${symbol || 'GENERAL'}&days=${days}`;\n          \n          // If we have a selected date but not a range, we could add that to the query\n          // but we'll filter client-side instead for flexibility\n          console.log('Fetching news data from:', endpoint);\n        }\n        \n        const response = await axios.get(endpoint);\n        console.log('News data received:', response.data);\n        setNewsData(response.data);\n        \n        // Initialize filtered data with all news or filtered news\n        if (selectedDate || selectedDateRange) {\n          filterNewsData(response.data, selectedDate, selectedDateRange);\n        } else {\n          setFilteredNewsData(response.data);\n        }\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to load news data. Please try again later.');\n        setNewsData([]);\n        setFilteredNewsData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchNewsData();\n  }, [symbol, dataSource, selectedDateRange]);\n  \n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", { date, dateRange, dataLength: data.length });\n    \n    let filtered = [...data];\n    \n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      // For point selection, use exact date matching\n      filtered = data.filter(news => {\n        // Use the date field directly (we've formatted it as YYYY-MM-DD in our API)\n        return news.date === date;\n      });\n      console.log(`Found ${filtered.length} news items for date ${date}`);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      \n      // Extract start and end dates from the dateRange object\n      let startDate = dateRange.startDate;\n      let endDate = dateRange.endDate;\n      \n      // If displayEndDate is provided (for UI display), use that instead\n      if (dateRange.displayEndDate) {\n        endDate = dateRange.displayEndDate;\n      }\n      \n      console.log(`Using date range from ${startDate} to ${endDate}`);\n      \n      // Filter news items within the range\n      filtered = data.filter(news => {\n        // Use the date field directly (we've formatted it as YYYY-MM-DD in our API)\n        const newsDate = news.date;\n        \n        // Debug\n        console.log(`Checking news date: ${newsDate} against range ${startDate} to ${endDate}`);\n        \n        // Simple string comparison works for YYYY-MM-DD format\n        return newsDate >= startDate && newsDate <= endDate;\n      });\n      \n      console.log(`Found ${filtered.length} news items in range ${startDate} to ${endDate}`);\n    }\n    \n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n  \n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    \n    console.log(\"Selection changed, filtering news with:\", { selectedDate, selectedDateRange });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n    \n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({ \n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  \n  const handleNewsClick = (newsItem) => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  \n  const getSentimentLabel = (sentiment) => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n  \n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      // For display, use the original end date (before we adjusted it to the next day)\n      const displayEndDate = selectedDateRange.displayEndDate || selectedDateRange.endDate;\n      \n      return `Market News from ${selectedDateRange.startDate} to ${displayEndDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  \n  return (\n    <NewsFeedContainer>\n      <NewsFeedHeader>\n        <Title>{getNewsTitle()} {loading && '(Loading...)'}</Title>\n      </NewsFeedHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      {(selectedDate || selectedDateRange) && filteredNewsData.length === 0 && (\n        <div style={{ padding: '20px', textAlign: 'center', color: 'var(--text-secondary)' }}>\n          No news articles found for the selected {selectedDate ? 'date' : 'date range'}.\n        </div>\n      )}\n      \n      <NewsItemList>\n        {filteredNewsData.length > 0 ? (\n          filteredNewsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                  {news.display_date && <span> • {news.display_date}</span>}\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : !selectedDate && !selectedDateRange ? (\n          newsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                  {news.display_date && <span> • {news.display_date}</span>}\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : null}\n      </NewsItemList>\n    </NewsFeedContainer>\n  );\n};\n\nexport default NewsFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}