{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { ResponsiveContainer, ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Scatter, ReferenceLine, ReferenceArea } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n_c = TimelineContainer;\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = TimelineHeader;\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c4 = Controls;\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c5 = Button;\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c6 = SelectionControls;\nconst SelectionModeButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c7 = SelectionModeButton;\nconst ClearButton = styled.button`\n  background-color: var(--button-background);\n  color: var(--button-text);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: var(--button-hover-background);\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c8 = ClearButton;\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n`;\n_c9 = ChartContainer;\nconst SelectionInfo = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n  color: var(--text-secondary);\n`;\n_c10 = SelectionInfo;\nconst Timeline = ({\n  dataSource,\n  symbol,\n  onDateSelect,\n  onDateRangeSelect\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [rangeStart, setRangeStart] = useState(null);\n  const [rangeEnd, setRangeEnd] = useState(null);\n  const [rangeSelectionInProgress, setRangeSelectionInProgress] = useState(false);\n  const [hoveredDate, setHoveredDate] = useState(null);\n  const [timeRange, setTimeRange] = useState('1M'); // Default to 1 month\n  const chartRef = useRef(null);\n\n  // Fetch data from the API\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Calculate days based on timeRange\n        let days = 30; // Default to 1 month\n\n        switch (timeRange) {\n          case '1W':\n            days = 7;\n            break;\n          case '1M':\n            days = 30;\n            break;\n          case '3M':\n            days = 90;\n            break;\n          case '1Y':\n            days = 365;\n            break;\n          default:\n            days = 30;\n        }\n\n        // Use the correct API endpoint format from the backend\n        const endpoint = `http://localhost:8001/api/timeline?symbol=${symbol || 'GENERAL'}&days=${days}`;\n        console.log('Fetching timeline data from:', endpoint);\n        const response = await axios.get(endpoint);\n        console.log('Timeline data received:', response.data);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to load timeline data. Please try again later.');\n\n        // Fallback to empty array\n        setData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [dataSource, symbol, timeRange]);\n\n  // Handle time range change\n  const handleTimeRangeChange = useCallback(range => {\n    setTimeRange(range);\n\n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle point selection\n  const handlePointSelection = useCallback(date => {\n    console.log('Point selection:', date);\n    setSelectedDate(date);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n\n    // Instead of calling onDateSelect, create a date range that covers the full day\n    // This ensures both point and range selections use the same filtering mechanism\n    if (onDateRangeSelect) {\n      // Create a range that covers the entire day (from the selected date to the next day)\n      const startDate = date;\n\n      // Calculate the next day by parsing the date and adding one day\n      const currentDate = new Date(date);\n      const nextDate = new Date(currentDate);\n      nextDate.setDate(nextDate.getDate() + 1);\n      const endDate = nextDate.toISOString().split('T')[0];\n      console.log(`Converting point selection to range: ${startDate} to ${endDate}`);\n      onDateRangeSelect({\n        startDate,\n        endDate\n      });\n    }\n\n    // Still call onDateSelect for other UI updates\n    if (onDateSelect) {\n      onDateSelect(date);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle first click of range selection\n  const handleRangeStart = useCallback(date => {\n    console.log('Range selection start:', date);\n    setSelectedDate(null);\n    setRangeStart(date);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(true);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle second click of range selection\n  const handleRangeEnd = useCallback(date => {\n    console.log('Range selection end:', date);\n\n    // Determine the correct start and end dates\n    const start = new Date(rangeStart);\n    const end = new Date(date);\n    let startDate, endDate;\n    if (start <= end) {\n      startDate = rangeStart;\n      endDate = date;\n    } else {\n      startDate = date;\n      endDate = rangeStart;\n    }\n    setRangeEnd(date);\n    setRangeSelectionInProgress(false);\n    if (onDateRangeSelect) {\n      // For consistency with point selection, ensure we're using the full days\n      // Start date should be 00:00 of that day (which is the default for date strings)\n      // End date should be the next day at 00:00 to include the entire end date\n      const endDateObj = new Date(endDate);\n      const nextDay = new Date(endDateObj);\n      nextDay.setDate(nextDay.getDate() + 1);\n      const adjustedEndDate = nextDay.toISOString().split('T')[0];\n      console.log(`Range selection adjusted: ${startDate} to ${adjustedEndDate}`);\n      onDateRangeSelect({\n        startDate,\n        endDate: adjustedEndDate\n      });\n    }\n  }, [rangeStart, onDateRangeSelect]);\n\n  // Handle mouse move during range selection\n  const handleMouseMove = useCallback(e => {\n    if (!rangeSelectionInProgress || !chartRef.current) return;\n    try {\n      // Get chart dimensions\n      const chartRect = chartRef.current.getBoundingClientRect();\n      const chartX = e.clientX - chartRect.left;\n      const chartWidth = chartRect.width;\n\n      // Calculate position as percentage of chart width\n      if (chartWidth > 0) {\n        const positionPercent = Math.max(0, Math.min(1, chartX / chartWidth));\n        const dateIndex = Math.floor(positionPercent * data.length);\n        const clampedIndex = Math.max(0, Math.min(data.length - 1, dateIndex));\n        const hoverDate = data[clampedIndex].date;\n        setHoveredDate(hoverDate);\n      }\n    } catch (err) {\n      console.error(\"Error during range selection:\", err);\n    }\n  }, [data, rangeSelectionInProgress]);\n\n  // Set up event listeners for mouse move\n  useEffect(() => {\n    if (!rangeSelectionInProgress) return;\n\n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = e => {\n      e.preventDefault();\n      return false;\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [rangeSelectionInProgress, handleMouseMove]);\n\n  // Handle chart click\n  const handleChartClick = useCallback(event => {\n    if (!event || !event.activeLabel) return;\n    const clickedDate = event.activeLabel;\n    console.log('Chart clicked:', clickedDate, 'Mode:', selectionMode, 'In progress:', rangeSelectionInProgress);\n    if (selectionMode === 'point') {\n      handlePointSelection(clickedDate);\n    } else if (selectionMode === 'range') {\n      if (rangeSelectionInProgress) {\n        handleRangeEnd(clickedDate);\n      } else {\n        handleRangeStart(clickedDate);\n      }\n    }\n  }, [selectionMode, rangeSelectionInProgress, handlePointSelection, handleRangeStart, handleRangeEnd]);\n\n  // Handle selection mode change\n  const handleSelectionModeChange = useCallback(mode => {\n    setSelectionMode(mode);\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle clear selection\n  const handleClearSelection = useCallback(() => {\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Get reference area coordinates for visualization\n  const getReferenceAreaCoordinates = useCallback(() => {\n    if (!rangeStart || !rangeEnd) return null;\n    const dateA = new Date(rangeStart);\n    const dateB = new Date(rangeEnd);\n    if (dateA <= dateB) {\n      return {\n        x1: rangeStart,\n        x2: rangeEnd\n      };\n    } else {\n      return {\n        x1: rangeEnd,\n        x2: rangeStart\n      };\n    }\n  }, [rangeStart, rangeEnd]);\n\n  // Get temporary reference area during selection\n  const getTemporaryReferenceArea = useCallback(() => {\n    if (!rangeSelectionInProgress || !rangeStart || !hoveredDate) return null;\n    const dateA = new Date(rangeStart);\n    const dateB = new Date(hoveredDate);\n    if (dateA <= dateB) {\n      return {\n        x1: rangeStart,\n        x2: hoveredDate\n      };\n    } else {\n      return {\n        x1: hoveredDate,\n        x2: rangeStart\n      };\n    }\n  }, [rangeSelectionInProgress, rangeStart, hoveredDate]);\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading timeline data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TimelineContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TimelineHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Market Timeline \", symbol && `- ${symbol}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1W',\n          onClick: () => handleTimeRangeChange('1W'),\n          children: \"1W\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1M',\n          onClick: () => handleTimeRangeChange('1M'),\n          children: \"1M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '3M',\n          onClick: () => handleTimeRangeChange('3M'),\n          children: \"3M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1Y',\n          onClick: () => handleTimeRangeChange('1Y'),\n          children: \"1Y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectionControls, {\n          children: [/*#__PURE__*/_jsxDEV(SelectionModeButton, {\n            active: selectionMode === 'point',\n            onClick: () => handleSelectionModeChange('point'),\n            children: \"Point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectionModeButton, {\n            active: selectionMode === 'range',\n            onClick: () => handleSelectionModeChange('range'),\n            children: \"Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n            onClick: handleClearSelection,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n      ref: chartRef,\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n          data: data,\n          margin: {\n            top: 10,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          onClick: handleChartClick,\n          onMouseMove: e => {\n            if (rangeSelectionInProgress) {\n              handleMouseMove(e.nativeEvent);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"rgba(255,255,255,0.1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"left\",\n            domain: ['auto', 'auto'],\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            },\n            label: {\n              value: 'Price / Sentiment',\n              angle: -90,\n              position: 'insideLeft',\n              fill: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"right\",\n            orientation: \"right\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            },\n            label: {\n              value: 'Volume',\n              angle: 90,\n              position: 'insideRight',\n              fill: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: 'var(--tooltip-background)',\n              borderColor: 'var(--border-color)',\n              color: 'var(--text-primary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            wrapperStyle: {\n              color: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"volume\",\n            fill: \"rgba(100, 100, 255, 0.3)\",\n            name: \"Volume\",\n            yAxisId: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#8884d8\",\n            name: \"Price\",\n            strokeWidth: 2,\n            dot: false,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"sentiment\",\n            stroke: \"#82ca9d\",\n            name: \"Sentiment\",\n            strokeWidth: 2,\n            dot: false,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            dataKey: \"newsCount\",\n            fill: \"#ff7300\",\n            name: \"News Events\",\n            yAxisId: \"left\",\n            shape: props => {\n              const {\n                cx,\n                cy\n              } = props;\n              return props.payload.newsCount > 0 ? /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: cx,\n                cy: cy,\n                r: 4,\n                fill: \"#ff7300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this) : null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), selectedDate && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n            x: selectedDate,\n            stroke: \"#ff7300\",\n            strokeWidth: 2,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), rangeSelectionInProgress && rangeStart && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n            x: rangeStart,\n            stroke: \"#ff7300\",\n            strokeWidth: 2,\n            strokeDasharray: \"5 5\",\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), rangeSelectionInProgress && rangeStart && hoveredDate && getTemporaryReferenceArea() && /*#__PURE__*/_jsxDEV(ReferenceArea, {\n            ...getTemporaryReferenceArea(),\n            fill: \"#ff7300\",\n            fillOpacity: 0.2,\n            stroke: \"#ff7300\",\n            strokeWidth: 1,\n            strokeDasharray: \"3 3\",\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), rangeStart && rangeEnd && !rangeSelectionInProgress && getReferenceAreaCoordinates() && /*#__PURE__*/_jsxDEV(ReferenceArea, {\n            ...getReferenceAreaCoordinates(),\n            fill: \"#ff7300\",\n            fillOpacity: 0.3,\n            stroke: \"#ff7300\",\n            strokeWidth: 1,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectionInfo, {\n      children: [selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 11\n      }, this), rangeStart && rangeEnd && getReferenceAreaCoordinates() && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected Range: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: getReferenceAreaCoordinates().x1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 29\n        }, this), \" to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: getReferenceAreaCoordinates().x2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"1GvNCJFISX2VNGPXBySc1CS+fqw=\");\n_c11 = Timeline;\nexport default Timeline;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"TimelineContainer\");\n$RefreshReg$(_c2, \"TimelineHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"SelectionControls\");\n$RefreshReg$(_c7, \"SelectionModeButton\");\n$RefreshReg$(_c8, \"ClearButton\");\n$RefreshReg$(_c9, \"ChartContainer\");\n$RefreshReg$(_c10, \"SelectionInfo\");\n$RefreshReg$(_c11, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","styled","ResponsiveContainer","ComposedChart","Line","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Scatter","ReferenceLine","ReferenceArea","axios","jsxDEV","_jsxDEV","TimelineContainer","div","_c","TimelineHeader","_c2","Title","h3","_c3","Controls","_c4","Button","button","props","active","_c5","SelectionControls","_c6","SelectionModeButton","_c7","ClearButton","_c8","ChartContainer","_c9","SelectionInfo","_c10","Timeline","dataSource","symbol","onDateSelect","onDateRangeSelect","_s","data","setData","loading","setLoading","error","setError","selectedDate","setSelectedDate","selectionMode","setSelectionMode","rangeStart","setRangeStart","rangeEnd","setRangeEnd","rangeSelectionInProgress","setRangeSelectionInProgress","hoveredDate","setHoveredDate","timeRange","setTimeRange","chartRef","fetchData","days","endpoint","console","log","response","get","err","handleTimeRangeChange","range","handlePointSelection","date","startDate","currentDate","Date","nextDate","setDate","getDate","endDate","toISOString","split","handleRangeStart","handleRangeEnd","start","end","endDateObj","nextDay","adjustedEndDate","handleMouseMove","e","current","chartRect","getBoundingClientRect","chartX","clientX","left","chartWidth","width","positionPercent","Math","max","min","dateIndex","floor","length","clampedIndex","hoverDate","preventDefaultSelection","preventDefault","document","addEventListener","removeEventListener","handleChartClick","event","activeLabel","clickedDate","handleSelectionModeChange","mode","handleClearSelection","getReferenceAreaCoordinates","dateA","dateB","x1","x2","getTemporaryReferenceArea","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","height","margin","top","right","bottom","onMouseMove","nativeEvent","strokeDasharray","stroke","dataKey","tick","fill","tickLine","yAxisId","domain","label","value","angle","position","orientation","contentStyle","backgroundColor","borderColor","color","wrapperStyle","name","type","strokeWidth","dot","shape","cx","cy","payload","newsCount","r","x","fillOpacity","_c11","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { \n  ResponsiveContainer, \n  ComposedChart, \n  Line, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend,\n  Scatter,\n  ReferenceLine,\n  ReferenceArea\n} from 'recharts';\nimport axios from 'axios';\n\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-primary);\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SelectionModeButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst ClearButton = styled.button`\n  background-color: var(--button-background);\n  color: var(--button-text);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: var(--button-hover-background);\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n`;\n\nconst SelectionInfo = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n  color: var(--text-secondary);\n`;\n\nconst Timeline = ({ dataSource, symbol, onDateSelect, onDateRangeSelect }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [rangeStart, setRangeStart] = useState(null);\n  const [rangeEnd, setRangeEnd] = useState(null);\n  const [rangeSelectionInProgress, setRangeSelectionInProgress] = useState(false);\n  const [hoveredDate, setHoveredDate] = useState(null);\n  const [timeRange, setTimeRange] = useState('1M'); // Default to 1 month\n  const chartRef = useRef(null);\n  \n  // Fetch data from the API\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Calculate days based on timeRange\n        let days = 30; // Default to 1 month\n        \n        switch (timeRange) {\n          case '1W':\n            days = 7;\n            break;\n          case '1M':\n            days = 30;\n            break;\n          case '3M':\n            days = 90;\n            break;\n          case '1Y':\n            days = 365;\n            break;\n          default:\n            days = 30;\n        }\n        \n        // Use the correct API endpoint format from the backend\n        const endpoint = `http://localhost:8001/api/timeline?symbol=${symbol || 'GENERAL'}&days=${days}`;\n        console.log('Fetching timeline data from:', endpoint);\n        \n        const response = await axios.get(endpoint);\n        console.log('Timeline data received:', response.data);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to load timeline data. Please try again later.');\n        \n        // Fallback to empty array\n        setData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [dataSource, symbol, timeRange]);\n  \n  // Handle time range change\n  const handleTimeRangeChange = useCallback((range) => {\n    setTimeRange(range);\n    \n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle point selection\n  const handlePointSelection = useCallback((date) => {\n    console.log('Point selection:', date);\n    setSelectedDate(date);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    // Instead of calling onDateSelect, create a date range that covers the full day\n    // This ensures both point and range selections use the same filtering mechanism\n    if (onDateRangeSelect) {\n      // Create a range that covers the entire day (from the selected date to the next day)\n      const startDate = date;\n      \n      // Calculate the next day by parsing the date and adding one day\n      const currentDate = new Date(date);\n      const nextDate = new Date(currentDate);\n      nextDate.setDate(nextDate.getDate() + 1);\n      const endDate = nextDate.toISOString().split('T')[0];\n      \n      console.log(`Converting point selection to range: ${startDate} to ${endDate}`);\n      onDateRangeSelect({ startDate, endDate });\n    }\n    \n    // Still call onDateSelect for other UI updates\n    if (onDateSelect) {\n      onDateSelect(date);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle first click of range selection\n  const handleRangeStart = useCallback((date) => {\n    console.log('Range selection start:', date);\n    setSelectedDate(null);\n    setRangeStart(date);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(true);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle second click of range selection\n  const handleRangeEnd = useCallback((date) => {\n    console.log('Range selection end:', date);\n    \n    // Determine the correct start and end dates\n    const start = new Date(rangeStart);\n    const end = new Date(date);\n    \n    let startDate, endDate;\n    \n    if (start <= end) {\n      startDate = rangeStart;\n      endDate = date;\n    } else {\n      startDate = date;\n      endDate = rangeStart;\n    }\n    \n    setRangeEnd(date);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateRangeSelect) {\n      // For consistency with point selection, ensure we're using the full days\n      // Start date should be 00:00 of that day (which is the default for date strings)\n      // End date should be the next day at 00:00 to include the entire end date\n      const endDateObj = new Date(endDate);\n      const nextDay = new Date(endDateObj);\n      nextDay.setDate(nextDay.getDate() + 1);\n      const adjustedEndDate = nextDay.toISOString().split('T')[0];\n      \n      console.log(`Range selection adjusted: ${startDate} to ${adjustedEndDate}`);\n      onDateRangeSelect({ startDate, endDate: adjustedEndDate });\n    }\n  }, [rangeStart, onDateRangeSelect]);\n  \n  // Handle mouse move during range selection\n  const handleMouseMove = useCallback((e) => {\n    if (!rangeSelectionInProgress || !chartRef.current) return;\n    \n    try {\n      // Get chart dimensions\n      const chartRect = chartRef.current.getBoundingClientRect();\n      const chartX = e.clientX - chartRect.left;\n      const chartWidth = chartRect.width;\n      \n      // Calculate position as percentage of chart width\n      if (chartWidth > 0) {\n        const positionPercent = Math.max(0, Math.min(1, chartX / chartWidth));\n        const dateIndex = Math.floor(positionPercent * data.length);\n        const clampedIndex = Math.max(0, Math.min(data.length - 1, dateIndex));\n        const hoverDate = data[clampedIndex].date;\n        setHoveredDate(hoverDate);\n      }\n    } catch (err) {\n      console.error(\"Error during range selection:\", err);\n    }\n  }, [data, rangeSelectionInProgress]);\n  \n  // Set up event listeners for mouse move\n  useEffect(() => {\n    if (!rangeSelectionInProgress) return;\n    \n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = (e) => {\n      e.preventDefault();\n      return false;\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    \n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [rangeSelectionInProgress, handleMouseMove]);\n  \n  // Handle chart click\n  const handleChartClick = useCallback((event) => {\n    if (!event || !event.activeLabel) return;\n    \n    const clickedDate = event.activeLabel;\n    console.log('Chart clicked:', clickedDate, 'Mode:', selectionMode, 'In progress:', rangeSelectionInProgress);\n    \n    if (selectionMode === 'point') {\n      handlePointSelection(clickedDate);\n    } else if (selectionMode === 'range') {\n      if (rangeSelectionInProgress) {\n        handleRangeEnd(clickedDate);\n      } else {\n        handleRangeStart(clickedDate);\n      }\n    }\n  }, [selectionMode, rangeSelectionInProgress, handlePointSelection, handleRangeStart, handleRangeEnd]);\n  \n  // Handle selection mode change\n  const handleSelectionModeChange = useCallback((mode) => {\n    setSelectionMode(mode);\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle clear selection\n  const handleClearSelection = useCallback(() => {\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Get reference area coordinates for visualization\n  const getReferenceAreaCoordinates = useCallback(() => {\n    if (!rangeStart || !rangeEnd) return null;\n    \n    const dateA = new Date(rangeStart);\n    const dateB = new Date(rangeEnd);\n    \n    if (dateA <= dateB) {\n      return { x1: rangeStart, x2: rangeEnd };\n    } else {\n      return { x1: rangeEnd, x2: rangeStart };\n    }\n  }, [rangeStart, rangeEnd]);\n  \n  // Get temporary reference area during selection\n  const getTemporaryReferenceArea = useCallback(() => {\n    if (!rangeSelectionInProgress || !rangeStart || !hoveredDate) return null;\n    \n    const dateA = new Date(rangeStart);\n    const dateB = new Date(hoveredDate);\n    \n    if (dateA <= dateB) {\n      return { x1: rangeStart, x2: hoveredDate };\n    } else {\n      return { x1: hoveredDate, x2: rangeStart };\n    }\n  }, [rangeSelectionInProgress, rangeStart, hoveredDate]);\n  \n  // Render loading state\n  if (loading) {\n    return <div>Loading timeline data...</div>;\n  }\n  \n  // Render error state\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n  \n  return (\n    <TimelineContainer>\n      <TimelineHeader>\n        <Title>Market Timeline {symbol && `- ${symbol}`}</Title>\n        <Controls>\n          <Button \n            active={timeRange === '1W'} \n            onClick={() => handleTimeRangeChange('1W')}\n          >\n            1W\n          </Button>\n          <Button \n            active={timeRange === '1M'} \n            onClick={() => handleTimeRangeChange('1M')}\n          >\n            1M\n          </Button>\n          <Button \n            active={timeRange === '3M'} \n            onClick={() => handleTimeRangeChange('3M')}\n          >\n            3M\n          </Button>\n          <Button \n            active={timeRange === '1Y'} \n            onClick={() => handleTimeRangeChange('1Y')}\n          >\n            1Y\n          </Button>\n          <SelectionControls>\n            <SelectionModeButton \n              active={selectionMode === 'point'} \n              onClick={() => handleSelectionModeChange('point')}\n            >\n              Point\n            </SelectionModeButton>\n            <SelectionModeButton \n              active={selectionMode === 'range'} \n              onClick={() => handleSelectionModeChange('range')}\n            >\n              Range\n            </SelectionModeButton>\n            <ClearButton onClick={handleClearSelection}>\n              Clear\n            </ClearButton>\n          </SelectionControls>\n        </Controls>\n      </TimelineHeader>\n      \n      <ChartContainer ref={chartRef}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ComposedChart\n            data={data}\n            margin={{ top: 10, right: 30, left: 20, bottom: 5 }}\n            onClick={handleChartClick}\n            onMouseMove={(e) => {\n              if (rangeSelectionInProgress) {\n                handleMouseMove(e.nativeEvent);\n              }\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\n            <XAxis \n              dataKey=\"date\" \n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n            />\n            <YAxis \n              yAxisId=\"left\"\n              domain={['auto', 'auto']}\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Price / Sentiment', \n                angle: -90, \n                position: 'insideLeft',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <YAxis \n              yAxisId=\"right\"\n              orientation=\"right\"\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Volume', \n                angle: 90, \n                position: 'insideRight',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <Tooltip \n              contentStyle={{ \n                backgroundColor: 'var(--tooltip-background)',\n                borderColor: 'var(--border-color)',\n                color: 'var(--text-primary)'\n              }}\n            />\n            <Legend \n              wrapperStyle={{ \n                color: 'var(--text-secondary)'\n              }} \n            />\n            <Bar \n              dataKey=\"volume\" \n              fill=\"rgba(100, 100, 255, 0.3)\" \n              name=\"Volume\"\n              yAxisId=\"right\" \n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"price\" \n              stroke=\"#8884d8\" \n              name=\"Price\"\n              strokeWidth={2}\n              dot={false}\n              yAxisId=\"left\" \n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"sentiment\" \n              stroke=\"#82ca9d\" \n              name=\"Sentiment\"\n              strokeWidth={2}\n              dot={false}\n              yAxisId=\"left\" \n            />\n            <Scatter \n              dataKey=\"newsCount\" \n              fill=\"#ff7300\" \n              name=\"News Events\"\n              yAxisId=\"left\"\n              shape={(props) => {\n                const { cx, cy } = props;\n                return props.payload.newsCount > 0 ? (\n                  <circle cx={cx} cy={cy} r={4} fill=\"#ff7300\" />\n                ) : null;\n              }}\n            />\n            \n            {/* Point selection indicator */}\n            {selectedDate && (\n              <ReferenceLine \n                x={selectedDate} \n                stroke=\"#ff7300\" \n                strokeWidth={2}\n                yAxisId=\"left\"\n              />\n            )}\n            \n            {/* Range selection first point indicator */}\n            {rangeSelectionInProgress && rangeStart && (\n              <ReferenceLine \n                x={rangeStart} \n                stroke=\"#ff7300\" \n                strokeWidth={2}\n                strokeDasharray=\"5 5\"\n                yAxisId=\"left\"\n              />\n            )}\n            \n            {/* Range selection in progress indicator */}\n            {rangeSelectionInProgress && rangeStart && hoveredDate && getTemporaryReferenceArea() && (\n              <ReferenceArea \n                {...getTemporaryReferenceArea()}\n                fill=\"#ff7300\" \n                fillOpacity={0.2} \n                stroke=\"#ff7300\"\n                strokeWidth={1}\n                strokeDasharray=\"3 3\"\n                yAxisId=\"left\"\n              />\n            )}\n            \n            {/* Final range selection indicator */}\n            {rangeStart && rangeEnd && !rangeSelectionInProgress && getReferenceAreaCoordinates() && (\n              <ReferenceArea \n                {...getReferenceAreaCoordinates()}\n                fill=\"#ff7300\" \n                fillOpacity={0.3} \n                stroke=\"#ff7300\"\n                strokeWidth={1}\n                yAxisId=\"left\"\n              />\n            )}\n          </ComposedChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n      \n      <SelectionInfo>\n        {selectedDate && (\n          <div>Selected Date: <strong>{selectedDate}</strong></div>\n        )}\n        {rangeStart && rangeEnd && getReferenceAreaCoordinates() && (\n          <div>\n            Selected Range: <strong>{getReferenceAreaCoordinates().x1}</strong> to <strong>{getReferenceAreaCoordinates().x2}</strong>\n          </div>\n        )}\n      </SelectionInfo>\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SACEC,mBAAmB,EACnBC,aAAa,EACbC,IAAI,EACJC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,OAAO,EACPC,aAAa,EACbC,aAAa,QACR,UAAU;AACjB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGhB,MAAM,CAACiB,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,iBAAiB;AAYvB,MAAMG,cAAc,GAAGnB,MAAM,CAACiB,GAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,cAAc;AAOpB,MAAME,KAAK,GAAGrB,MAAM,CAACsB,EAAE;AACvB;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,KAAK;AAKX,MAAMG,QAAQ,GAAGxB,MAAM,CAACiB,GAAG;AAC3B;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAJID,QAAQ;AAMd,MAAME,MAAM,GAAG1B,MAAM,CAAC2B,MAAM;AAC5B,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,sBAAsB,GAAG,wBAAwB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,sBAAsB,GAAG,MAAM;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAlBIJ,MAAM;AAoBZ,MAAMK,iBAAiB,GAAG/B,MAAM,CAACiB,GAAG;AACpC;AACA;AACA;AACA,CAAC;AAACe,GAAA,GAJID,iBAAiB;AAMvB,MAAME,mBAAmB,GAAGjC,MAAM,CAAC2B,MAAM;AACzC,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,qBAAqB,GAAG,0BAA0B;AAChG,WAAWD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,2BAA2B,GAAG,oBAAoB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,qBAAqB,GAAG,gCAAgC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAlBID,mBAAmB;AAoBzB,MAAME,WAAW,GAAGnC,MAAM,CAAC2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAnBID,WAAW;AAqBjB,MAAME,cAAc,GAAGrC,MAAM,CAACiB,GAAG;AACjC;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GAJID,cAAc;AAMpB,MAAME,aAAa,GAAGvC,MAAM,CAACiB,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAACuB,IAAA,GAJID,aAAa;AAMnB,MAAME,QAAQ,GAAGA,CAAC;EAAEC,UAAU;EAAEC,MAAM;EAAEC,YAAY;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqD,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuD,KAAK,EAAEC,QAAQ,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyD,YAAY,EAAEC,eAAe,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2D,aAAa,EAAEC,gBAAgB,CAAC,GAAG5D,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC6D,UAAU,EAAEC,aAAa,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC+D,QAAQ,EAAEC,WAAW,CAAC,GAAGhE,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiE,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EAC/E,MAAM,CAACmE,WAAW,EAAEC,cAAc,CAAC,GAAGpE,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqE,SAAS,EAAEC,YAAY,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAMuE,QAAQ,GAAGrE,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMuE,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BlB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF;QACA,IAAIiB,IAAI,GAAG,EAAE,CAAC,CAAC;;QAEf,QAAQJ,SAAS;UACf,KAAK,IAAI;YACPI,IAAI,GAAG,CAAC;YACR;UACF,KAAK,IAAI;YACPA,IAAI,GAAG,EAAE;YACT;UACF,KAAK,IAAI;YACPA,IAAI,GAAG,EAAE;YACT;UACF,KAAK,IAAI;YACPA,IAAI,GAAG,GAAG;YACV;UACF;YACEA,IAAI,GAAG,EAAE;QACb;;QAEA;QACA,MAAMC,QAAQ,GAAG,6CAA6C3B,MAAM,IAAI,SAAS,SAAS0B,IAAI,EAAE;QAChGE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC;QAErD,MAAMG,QAAQ,GAAG,MAAM5D,KAAK,CAAC6D,GAAG,CAACJ,QAAQ,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,QAAQ,CAAC1B,IAAI,CAAC;QACrDC,OAAO,CAACyB,QAAQ,CAAC1B,IAAI,CAAC;MACxB,CAAC,CAAC,OAAO4B,GAAG,EAAE;QACZJ,OAAO,CAACpB,KAAK,CAAC,+BAA+B,EAAEwB,GAAG,CAAC;QACnDvB,QAAQ,CAAC,uDAAuD,CAAC;;QAEjE;QACAJ,OAAO,CAAC,EAAE,CAAC;MACb,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDkB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAAC1B,UAAU,EAAEC,MAAM,EAAEsB,SAAS,CAAC,CAAC;;EAEnC;EACA,MAAMW,qBAAqB,GAAG7E,WAAW,CAAE8E,KAAK,IAAK;IACnDX,YAAY,CAACW,KAAK,CAAC;;IAEnB;IACAvB,eAAe,CAAC,IAAI,CAAC;IACrBI,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAAC,IAAI,CAAC;IACjBE,2BAA2B,CAAC,KAAK,CAAC;IAElC,IAAIlB,YAAY,EAAE;MAChBA,YAAY,CAAC,IAAI,CAAC;IACpB;IAEA,IAAIC,iBAAiB,EAAE;MACrBA,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,CAACD,YAAY,EAAEC,iBAAiB,CAAC,CAAC;;EAErC;EACA,MAAMiC,oBAAoB,GAAG/E,WAAW,CAAEgF,IAAI,IAAK;IACjDR,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEO,IAAI,CAAC;IACrCzB,eAAe,CAACyB,IAAI,CAAC;IACrBrB,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAAC,IAAI,CAAC;IACjBE,2BAA2B,CAAC,KAAK,CAAC;;IAElC;IACA;IACA,IAAIjB,iBAAiB,EAAE;MACrB;MACA,MAAMmC,SAAS,GAAGD,IAAI;;MAEtB;MACA,MAAME,WAAW,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC;MAClC,MAAMI,QAAQ,GAAG,IAAID,IAAI,CAACD,WAAW,CAAC;MACtCE,QAAQ,CAACC,OAAO,CAACD,QAAQ,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MACxC,MAAMC,OAAO,GAAGH,QAAQ,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEpDjB,OAAO,CAACC,GAAG,CAAC,wCAAwCQ,SAAS,OAAOM,OAAO,EAAE,CAAC;MAC9EzC,iBAAiB,CAAC;QAAEmC,SAAS;QAAEM;MAAQ,CAAC,CAAC;IAC3C;;IAEA;IACA,IAAI1C,YAAY,EAAE;MAChBA,YAAY,CAACmC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACnC,YAAY,EAAEC,iBAAiB,CAAC,CAAC;;EAErC;EACA,MAAM4C,gBAAgB,GAAG1F,WAAW,CAAEgF,IAAI,IAAK;IAC7CR,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEO,IAAI,CAAC;IAC3CzB,eAAe,CAAC,IAAI,CAAC;IACrBI,aAAa,CAACqB,IAAI,CAAC;IACnBnB,WAAW,CAAC,IAAI,CAAC;IACjBE,2BAA2B,CAAC,IAAI,CAAC;IAEjC,IAAIlB,YAAY,EAAE;MAChBA,YAAY,CAAC,IAAI,CAAC;IACpB;IAEA,IAAIC,iBAAiB,EAAE;MACrBA,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,CAACD,YAAY,EAAEC,iBAAiB,CAAC,CAAC;;EAErC;EACA,MAAM6C,cAAc,GAAG3F,WAAW,CAAEgF,IAAI,IAAK;IAC3CR,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,IAAI,CAAC;;IAEzC;IACA,MAAMY,KAAK,GAAG,IAAIT,IAAI,CAACzB,UAAU,CAAC;IAClC,MAAMmC,GAAG,GAAG,IAAIV,IAAI,CAACH,IAAI,CAAC;IAE1B,IAAIC,SAAS,EAAEM,OAAO;IAEtB,IAAIK,KAAK,IAAIC,GAAG,EAAE;MAChBZ,SAAS,GAAGvB,UAAU;MACtB6B,OAAO,GAAGP,IAAI;IAChB,CAAC,MAAM;MACLC,SAAS,GAAGD,IAAI;MAChBO,OAAO,GAAG7B,UAAU;IACtB;IAEAG,WAAW,CAACmB,IAAI,CAAC;IACjBjB,2BAA2B,CAAC,KAAK,CAAC;IAElC,IAAIjB,iBAAiB,EAAE;MACrB;MACA;MACA;MACA,MAAMgD,UAAU,GAAG,IAAIX,IAAI,CAACI,OAAO,CAAC;MACpC,MAAMQ,OAAO,GAAG,IAAIZ,IAAI,CAACW,UAAU,CAAC;MACpCC,OAAO,CAACV,OAAO,CAACU,OAAO,CAACT,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MACtC,MAAMU,eAAe,GAAGD,OAAO,CAACP,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAE3DjB,OAAO,CAACC,GAAG,CAAC,6BAA6BQ,SAAS,OAAOe,eAAe,EAAE,CAAC;MAC3ElD,iBAAiB,CAAC;QAAEmC,SAAS;QAAEM,OAAO,EAAES;MAAgB,CAAC,CAAC;IAC5D;EACF,CAAC,EAAE,CAACtC,UAAU,EAAEZ,iBAAiB,CAAC,CAAC;;EAEnC;EACA,MAAMmD,eAAe,GAAGjG,WAAW,CAAEkG,CAAC,IAAK;IACzC,IAAI,CAACpC,wBAAwB,IAAI,CAACM,QAAQ,CAAC+B,OAAO,EAAE;IAEpD,IAAI;MACF;MACA,MAAMC,SAAS,GAAGhC,QAAQ,CAAC+B,OAAO,CAACE,qBAAqB,CAAC,CAAC;MAC1D,MAAMC,MAAM,GAAGJ,CAAC,CAACK,OAAO,GAAGH,SAAS,CAACI,IAAI;MACzC,MAAMC,UAAU,GAAGL,SAAS,CAACM,KAAK;;MAElC;MACA,IAAID,UAAU,GAAG,CAAC,EAAE;QAClB,MAAME,eAAe,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EAAER,MAAM,GAAGG,UAAU,CAAC,CAAC;QACrE,MAAMM,SAAS,GAAGH,IAAI,CAACI,KAAK,CAACL,eAAe,GAAG3D,IAAI,CAACiE,MAAM,CAAC;QAC3D,MAAMC,YAAY,GAAGN,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC9D,IAAI,CAACiE,MAAM,GAAG,CAAC,EAAEF,SAAS,CAAC,CAAC;QACtE,MAAMI,SAAS,GAAGnE,IAAI,CAACkE,YAAY,CAAC,CAAClC,IAAI;QACzCf,cAAc,CAACkD,SAAS,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOvC,GAAG,EAAE;MACZJ,OAAO,CAACpB,KAAK,CAAC,+BAA+B,EAAEwB,GAAG,CAAC;IACrD;EACF,CAAC,EAAE,CAAC5B,IAAI,EAAEc,wBAAwB,CAAC,CAAC;;EAEpC;EACAhE,SAAS,CAAC,MAAM;IACd,IAAI,CAACgE,wBAAwB,EAAE;;IAE/B;IACA,MAAMsD,uBAAuB,GAAIlB,CAAC,IAAK;MACrCA,CAAC,CAACmB,cAAc,CAAC,CAAC;MAClB,OAAO,KAAK;IACd,CAAC;IAEDC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEtB,eAAe,CAAC;IACvDqB,QAAQ,CAACC,gBAAgB,CAAC,aAAa,EAAEH,uBAAuB,CAAC;IAEjE,OAAO,MAAM;MACXE,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEvB,eAAe,CAAC;MAC1DqB,QAAQ,CAACE,mBAAmB,CAAC,aAAa,EAAEJ,uBAAuB,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,CAACtD,wBAAwB,EAAEmC,eAAe,CAAC,CAAC;;EAE/C;EACA,MAAMwB,gBAAgB,GAAGzH,WAAW,CAAE0H,KAAK,IAAK;IAC9C,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,WAAW,EAAE;IAElC,MAAMC,WAAW,GAAGF,KAAK,CAACC,WAAW;IACrCnD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEmD,WAAW,EAAE,OAAO,EAAEpE,aAAa,EAAE,cAAc,EAAEM,wBAAwB,CAAC;IAE5G,IAAIN,aAAa,KAAK,OAAO,EAAE;MAC7BuB,oBAAoB,CAAC6C,WAAW,CAAC;IACnC,CAAC,MAAM,IAAIpE,aAAa,KAAK,OAAO,EAAE;MACpC,IAAIM,wBAAwB,EAAE;QAC5B6B,cAAc,CAACiC,WAAW,CAAC;MAC7B,CAAC,MAAM;QACLlC,gBAAgB,CAACkC,WAAW,CAAC;MAC/B;IACF;EACF,CAAC,EAAE,CAACpE,aAAa,EAAEM,wBAAwB,EAAEiB,oBAAoB,EAAEW,gBAAgB,EAAEC,cAAc,CAAC,CAAC;;EAErG;EACA,MAAMkC,yBAAyB,GAAG7H,WAAW,CAAE8H,IAAI,IAAK;IACtDrE,gBAAgB,CAACqE,IAAI,CAAC;IACtBvE,eAAe,CAAC,IAAI,CAAC;IACrBI,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAAC,IAAI,CAAC;IACjBE,2BAA2B,CAAC,KAAK,CAAC;IAElC,IAAIlB,YAAY,EAAE;MAChBA,YAAY,CAAC,IAAI,CAAC;IACpB;IAEA,IAAIC,iBAAiB,EAAE;MACrBA,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,CAACD,YAAY,EAAEC,iBAAiB,CAAC,CAAC;;EAErC;EACA,MAAMiF,oBAAoB,GAAG/H,WAAW,CAAC,MAAM;IAC7CuD,eAAe,CAAC,IAAI,CAAC;IACrBI,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAAC,IAAI,CAAC;IACjBE,2BAA2B,CAAC,KAAK,CAAC;IAElC,IAAIlB,YAAY,EAAE;MAChBA,YAAY,CAAC,IAAI,CAAC;IACpB;IAEA,IAAIC,iBAAiB,EAAE;MACrBA,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,CAACD,YAAY,EAAEC,iBAAiB,CAAC,CAAC;;EAErC;EACA,MAAMkF,2BAA2B,GAAGhI,WAAW,CAAC,MAAM;IACpD,IAAI,CAAC0D,UAAU,IAAI,CAACE,QAAQ,EAAE,OAAO,IAAI;IAEzC,MAAMqE,KAAK,GAAG,IAAI9C,IAAI,CAACzB,UAAU,CAAC;IAClC,MAAMwE,KAAK,GAAG,IAAI/C,IAAI,CAACvB,QAAQ,CAAC;IAEhC,IAAIqE,KAAK,IAAIC,KAAK,EAAE;MAClB,OAAO;QAAEC,EAAE,EAAEzE,UAAU;QAAE0E,EAAE,EAAExE;MAAS,CAAC;IACzC,CAAC,MAAM;MACL,OAAO;QAAEuE,EAAE,EAAEvE,QAAQ;QAAEwE,EAAE,EAAE1E;MAAW,CAAC;IACzC;EACF,CAAC,EAAE,CAACA,UAAU,EAAEE,QAAQ,CAAC,CAAC;;EAE1B;EACA,MAAMyE,yBAAyB,GAAGrI,WAAW,CAAC,MAAM;IAClD,IAAI,CAAC8D,wBAAwB,IAAI,CAACJ,UAAU,IAAI,CAACM,WAAW,EAAE,OAAO,IAAI;IAEzE,MAAMiE,KAAK,GAAG,IAAI9C,IAAI,CAACzB,UAAU,CAAC;IAClC,MAAMwE,KAAK,GAAG,IAAI/C,IAAI,CAACnB,WAAW,CAAC;IAEnC,IAAIiE,KAAK,IAAIC,KAAK,EAAE;MAClB,OAAO;QAAEC,EAAE,EAAEzE,UAAU;QAAE0E,EAAE,EAAEpE;MAAY,CAAC;IAC5C,CAAC,MAAM;MACL,OAAO;QAAEmE,EAAE,EAAEnE,WAAW;QAAEoE,EAAE,EAAE1E;MAAW,CAAC;IAC5C;EACF,CAAC,EAAE,CAACI,wBAAwB,EAAEJ,UAAU,EAAEM,WAAW,CAAC,CAAC;;EAEvD;EACA,IAAId,OAAO,EAAE;IACX,oBAAOlC,OAAA;MAAAsH,QAAA,EAAK;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5C;;EAEA;EACA,IAAItF,KAAK,EAAE;IACT,oBAAOpC,OAAA;MAAAsH,QAAA,GAAK,SAAO,EAAClF,KAAK;IAAA;MAAAmF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACE1H,OAAA,CAACC,iBAAiB;IAAAqH,QAAA,gBAChBtH,OAAA,CAACI,cAAc;MAAAkH,QAAA,gBACbtH,OAAA,CAACM,KAAK;QAAAgH,QAAA,GAAC,kBAAgB,EAAC1F,MAAM,IAAI,KAAKA,MAAM,EAAE;MAAA;QAAA2F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxD1H,OAAA,CAACS,QAAQ;QAAA6G,QAAA,gBACPtH,OAAA,CAACW,MAAM;UACLG,MAAM,EAAEoC,SAAS,KAAK,IAAK;UAC3ByE,OAAO,EAAEA,CAAA,KAAM9D,qBAAqB,CAAC,IAAI,CAAE;UAAAyD,QAAA,EAC5C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1H,OAAA,CAACW,MAAM;UACLG,MAAM,EAAEoC,SAAS,KAAK,IAAK;UAC3ByE,OAAO,EAAEA,CAAA,KAAM9D,qBAAqB,CAAC,IAAI,CAAE;UAAAyD,QAAA,EAC5C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1H,OAAA,CAACW,MAAM;UACLG,MAAM,EAAEoC,SAAS,KAAK,IAAK;UAC3ByE,OAAO,EAAEA,CAAA,KAAM9D,qBAAqB,CAAC,IAAI,CAAE;UAAAyD,QAAA,EAC5C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1H,OAAA,CAACW,MAAM;UACLG,MAAM,EAAEoC,SAAS,KAAK,IAAK;UAC3ByE,OAAO,EAAEA,CAAA,KAAM9D,qBAAqB,CAAC,IAAI,CAAE;UAAAyD,QAAA,EAC5C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1H,OAAA,CAACgB,iBAAiB;UAAAsG,QAAA,gBAChBtH,OAAA,CAACkB,mBAAmB;YAClBJ,MAAM,EAAE0B,aAAa,KAAK,OAAQ;YAClCmF,OAAO,EAAEA,CAAA,KAAMd,yBAAyB,CAAC,OAAO,CAAE;YAAAS,QAAA,EACnD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAAC,eACtB1H,OAAA,CAACkB,mBAAmB;YAClBJ,MAAM,EAAE0B,aAAa,KAAK,OAAQ;YAClCmF,OAAO,EAAEA,CAAA,KAAMd,yBAAyB,CAAC,OAAO,CAAE;YAAAS,QAAA,EACnD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAAC,eACtB1H,OAAA,CAACoB,WAAW;YAACuG,OAAO,EAAEZ,oBAAqB;YAAAO,QAAA,EAAC;UAE5C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEjB1H,OAAA,CAACsB,cAAc;MAACsG,GAAG,EAAExE,QAAS;MAAAkE,QAAA,eAC5BtH,OAAA,CAACd,mBAAmB;QAACwG,KAAK,EAAC,MAAM;QAACmC,MAAM,EAAC,MAAM;QAAAP,QAAA,eAC7CtH,OAAA,CAACb,aAAa;UACZ6C,IAAI,EAAEA,IAAK;UACX8F,MAAM,EAAE;YAAEC,GAAG,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAExC,IAAI,EAAE,EAAE;YAAEyC,MAAM,EAAE;UAAE,CAAE;UACpDN,OAAO,EAAElB,gBAAiB;UAC1ByB,WAAW,EAAGhD,CAAC,IAAK;YAClB,IAAIpC,wBAAwB,EAAE;cAC5BmC,eAAe,CAACC,CAAC,CAACiD,WAAW,CAAC;YAChC;UACF,CAAE;UAAAb,QAAA,gBAEFtH,OAAA,CAACR,aAAa;YAAC4I,eAAe,EAAC,KAAK;YAACC,MAAM,EAAC;UAAuB;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtE1H,OAAA,CAACV,KAAK;YACJgJ,OAAO,EAAC,MAAM;YACdC,IAAI,EAAE;cAAEC,IAAI,EAAE;YAAwB,CAAE;YACxCC,QAAQ,EAAE;cAAEJ,MAAM,EAAE;YAAwB;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACF1H,OAAA,CAACT,KAAK;YACJmJ,OAAO,EAAC,MAAM;YACdC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAE;YACzBJ,IAAI,EAAE;cAAEC,IAAI,EAAE;YAAwB,CAAE;YACxCC,QAAQ,EAAE;cAAEJ,MAAM,EAAE;YAAwB,CAAE;YAC9CO,KAAK,EAAE;cACLC,KAAK,EAAE,mBAAmB;cAC1BC,KAAK,EAAE,CAAC,EAAE;cACVC,QAAQ,EAAE,YAAY;cACtBP,IAAI,EAAE;YACR;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF1H,OAAA,CAACT,KAAK;YACJmJ,OAAO,EAAC,OAAO;YACfM,WAAW,EAAC,OAAO;YACnBT,IAAI,EAAE;cAAEC,IAAI,EAAE;YAAwB,CAAE;YACxCC,QAAQ,EAAE;cAAEJ,MAAM,EAAE;YAAwB,CAAE;YAC9CO,KAAK,EAAE;cACLC,KAAK,EAAE,QAAQ;cACfC,KAAK,EAAE,EAAE;cACTC,QAAQ,EAAE,aAAa;cACvBP,IAAI,EAAE;YACR;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF1H,OAAA,CAACP,OAAO;YACNwJ,YAAY,EAAE;cACZC,eAAe,EAAE,2BAA2B;cAC5CC,WAAW,EAAE,qBAAqB;cAClCC,KAAK,EAAE;YACT;UAAE;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF1H,OAAA,CAACN,MAAM;YACL2J,YAAY,EAAE;cACZD,KAAK,EAAE;YACT;UAAE;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF1H,OAAA,CAACX,GAAG;YACFiJ,OAAO,EAAC,QAAQ;YAChBE,IAAI,EAAC,0BAA0B;YAC/Bc,IAAI,EAAC,QAAQ;YACbZ,OAAO,EAAC;UAAO;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACF1H,OAAA,CAACZ,IAAI;YACHmK,IAAI,EAAC,UAAU;YACfjB,OAAO,EAAC,OAAO;YACfD,MAAM,EAAC,SAAS;YAChBiB,IAAI,EAAC,OAAO;YACZE,WAAW,EAAE,CAAE;YACfC,GAAG,EAAE,KAAM;YACXf,OAAO,EAAC;UAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACF1H,OAAA,CAACZ,IAAI;YACHmK,IAAI,EAAC,UAAU;YACfjB,OAAO,EAAC,WAAW;YACnBD,MAAM,EAAC,SAAS;YAChBiB,IAAI,EAAC,WAAW;YAChBE,WAAW,EAAE,CAAE;YACfC,GAAG,EAAE,KAAM;YACXf,OAAO,EAAC;UAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACF1H,OAAA,CAACL,OAAO;YACN2I,OAAO,EAAC,WAAW;YACnBE,IAAI,EAAC,SAAS;YACdc,IAAI,EAAC,aAAa;YAClBZ,OAAO,EAAC,MAAM;YACdgB,KAAK,EAAG7I,KAAK,IAAK;cAChB,MAAM;gBAAE8I,EAAE;gBAAEC;cAAG,CAAC,GAAG/I,KAAK;cACxB,OAAOA,KAAK,CAACgJ,OAAO,CAACC,SAAS,GAAG,CAAC,gBAChC9J,OAAA;gBAAQ2J,EAAE,EAAEA,EAAG;gBAACC,EAAE,EAAEA,EAAG;gBAACG,CAAC,EAAE,CAAE;gBAACvB,IAAI,EAAC;cAAS;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,GAC7C,IAAI;YACV;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGDpF,YAAY,iBACXtC,OAAA,CAACJ,aAAa;YACZoK,CAAC,EAAE1H,YAAa;YAChB+F,MAAM,EAAC,SAAS;YAChBmB,WAAW,EAAE,CAAE;YACfd,OAAO,EAAC;UAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACF,EAGA5E,wBAAwB,IAAIJ,UAAU,iBACrC1C,OAAA,CAACJ,aAAa;YACZoK,CAAC,EAAEtH,UAAW;YACd2F,MAAM,EAAC,SAAS;YAChBmB,WAAW,EAAE,CAAE;YACfpB,eAAe,EAAC,KAAK;YACrBM,OAAO,EAAC;UAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACF,EAGA5E,wBAAwB,IAAIJ,UAAU,IAAIM,WAAW,IAAIqE,yBAAyB,CAAC,CAAC,iBACnFrH,OAAA,CAACH,aAAa;YAAA,GACRwH,yBAAyB,CAAC,CAAC;YAC/BmB,IAAI,EAAC,SAAS;YACdyB,WAAW,EAAE,GAAI;YACjB5B,MAAM,EAAC,SAAS;YAChBmB,WAAW,EAAE,CAAE;YACfpB,eAAe,EAAC,KAAK;YACrBM,OAAO,EAAC;UAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACF,EAGAhF,UAAU,IAAIE,QAAQ,IAAI,CAACE,wBAAwB,IAAIkE,2BAA2B,CAAC,CAAC,iBACnFhH,OAAA,CAACH,aAAa;YAAA,GACRmH,2BAA2B,CAAC,CAAC;YACjCwB,IAAI,EAAC,SAAS;YACdyB,WAAW,EAAE,GAAI;YACjB5B,MAAM,EAAC,SAAS;YAChBmB,WAAW,EAAE,CAAE;YACfd,OAAO,EAAC;UAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAEjB1H,OAAA,CAACwB,aAAa;MAAA8F,QAAA,GACXhF,YAAY,iBACXtC,OAAA;QAAAsH,QAAA,GAAK,iBAAe,eAAAtH,OAAA;UAAAsH,QAAA,EAAShF;QAAY;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACzD,EACAhF,UAAU,IAAIE,QAAQ,IAAIoE,2BAA2B,CAAC,CAAC,iBACtDhH,OAAA;QAAAsH,QAAA,GAAK,kBACa,eAAAtH,OAAA;UAAAsH,QAAA,EAASN,2BAA2B,CAAC,CAAC,CAACG;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,QAAI,eAAA1H,OAAA;UAAAsH,QAAA,EAASN,2BAA2B,CAAC,CAAC,CAACI;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAExB,CAAC;AAAC3F,EAAA,CA9eIL,QAAQ;AAAAwI,IAAA,GAARxI,QAAQ;AAgfd,eAAeA,QAAQ;AAAC,IAAAvB,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAK,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,IAAA,EAAAyI,IAAA;AAAAC,YAAA,CAAAhK,EAAA;AAAAgK,YAAA,CAAA9J,GAAA;AAAA8J,YAAA,CAAA3J,GAAA;AAAA2J,YAAA,CAAAzJ,GAAA;AAAAyJ,YAAA,CAAApJ,GAAA;AAAAoJ,YAAA,CAAAlJ,GAAA;AAAAkJ,YAAA,CAAAhJ,GAAA;AAAAgJ,YAAA,CAAA9I,GAAA;AAAA8I,YAAA,CAAA5I,GAAA;AAAA4I,YAAA,CAAA1I,IAAA;AAAA0I,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}