{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import axios from'axios';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const NewsFeedContainer=styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;const NewsFeedHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;const Title=styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;const NewsItemList=styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;const NewsItem=styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props=>props.highlighted?'var(--highlight-background)':'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;const NewsContent=styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;const NewsTitle=styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;const NewsSource=styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;const NewsMeta=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;const NewsDate=styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;const SentimentBadge=styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props=>{if(props.sentiment>0.3)return'var(--positive-color)';if(props.sentiment<-0.3)return'var(--negative-color)';return'var(--neutral-color)';}};\n  color: white;\n`;const NewsFeed=_ref=>{let{onNewsClick,symbol='GENERAL',dataSource,selectedDate=null,selectedDateRange=null}=_ref;const[newsData,setNewsData]=useState([]);const[filteredNewsData,setFilteredNewsData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const newsRefs=useRef({});// Fetch news data from the API\nuseEffect(()=>{const fetchNewsData=async()=>{setLoading(true);setError(null);try{// Use the correct API endpoint format from the backend\nconst endpoint=`http://localhost:8001/api/news?symbol=${symbol||'GENERAL'}&days=30`;console.log('Fetching news data from:',endpoint);const response=await axios.get(endpoint);console.log('News data received:',response.data);setNewsData(response.data);// Initialize filtered data with all news\nfilterNewsData(response.data,selectedDate,selectedDateRange);}catch(err){console.error('Error fetching news data:',err);setError('Failed to load news data. Please try again later.');setNewsData([]);setFilteredNewsData([]);}finally{setLoading(false);}};fetchNewsData();},[symbol,dataSource]);// Helper function to filter news data\nconst filterNewsData=(data,date,dateRange)=>{console.log(\"Filtering news data:\",{date,dateRange,dataLength:data.length});let filtered=[...data];if(date){console.log(\"Filtering for specific date:\",date);// For point selection, use exact date matching\nfiltered=data.filter(news=>{// Extract just the date part for comparison (no time)\nconst newsDateStr=news.date.split('T')[0];return newsDateStr===date;});console.log(`Found ${filtered.length} news items for date ${date}`);}else if(dateRange){console.log(\"Filtering for date range:\",dateRange);const{startDate,endDate,displayEndDate}=dateRange;// Extract just the date part for comparison (no time)\n// We want to include all news from startDate up to and including displayEndDate\n// This is a string comparison which is more reliable than Date objects for this case\nfiltered=data.filter(news=>{const newsDateStr=news.date.split('T')[0];// Debug log for each news item\nif(newsDateStr==='2025-04-06'){console.log(`News from 2025-04-06 being checked`);console.log(`- Start date: ${startDate}`);console.log(`- Display end date: ${displayEndDate}`);console.log(`- Is >= start: ${newsDateStr>=startDate}`);console.log(`- Is <= display end: ${newsDateStr<=displayEndDate}`);}// Simple string comparison - include if news date is between start and display end (inclusive)\nreturn newsDateStr>=startDate&&newsDateStr<=displayEndDate;});console.log(`Filtering between ${startDate} and ${displayEndDate} (inclusive)`);console.log(`Found ${filtered.length} news items in range`);}console.log(\"Filtered news count:\",filtered.length);setFilteredNewsData(filtered);};// Filter news based on selected date/range\nuseEffect(()=>{if(!newsData.length)return;console.log(\"Selection changed, filtering news with:\",{selectedDate,selectedDateRange});filterNewsData(newsData,selectedDate,selectedDateRange);// Scroll to the first news item that matches the selected date\nif(selectedDate){setTimeout(()=>{const matchingNews=newsData.find(news=>news.date===selectedDate);if(matchingNews&&newsRefs.current[matchingNews.id]){newsRefs.current[matchingNews.id].scrollIntoView({behavior:'smooth',block:'start'});}},100);}},[newsData,selectedDate,selectedDateRange]);const handleNewsClick=newsItem=>{if(onNewsClick){onNewsClick(newsItem);}};const getSentimentLabel=sentiment=>{if(sentiment>0.3)return'Positive';if(sentiment<-0.3)return'Negative';return'Neutral';};// Get title based on current selection\nconst getNewsTitle=()=>{if(selectedDate){return`Market News for ${selectedDate}`;}else if(selectedDateRange){// For display, use the original end date (before we adjusted it to the next day)\nconst displayEndDate=selectedDateRange.displayEndDate||selectedDateRange.endDate;return`Market News from ${selectedDateRange.startDate} to ${displayEndDate}`;}else{return`Market News ${symbol!=='GENERAL'?`for ${symbol}`:''}`;}};return/*#__PURE__*/_jsxs(NewsFeedContainer,{children:[/*#__PURE__*/_jsx(NewsFeedHeader,{children:/*#__PURE__*/_jsxs(Title,{children:[getNewsTitle(),\" \",loading&&'(Loading...)']})}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'orange',marginBottom:'10px'},children:error}),(selectedDate||selectedDateRange)&&filteredNewsData.length===0&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',textAlign:'center',color:'var(--text-secondary)'},children:[\"No news articles found for the selected \",selectedDate?'date':'date range',\".\"]}),/*#__PURE__*/_jsx(NewsItemList,{children:filteredNewsData.length>0?filteredNewsData.map(news=>/*#__PURE__*/_jsxs(NewsItem,{sentiment:news.sentiment,onClick:()=>handleNewsClick(news),ref:el=>newsRefs.current[news.id]=el,highlighted:selectedDate===news.date,children:[/*#__PURE__*/_jsxs(NewsContent,{children:[/*#__PURE__*/_jsx(NewsTitle,{children:news.title}),/*#__PURE__*/_jsx(NewsSource,{children:/*#__PURE__*/_jsx(\"span\",{children:news.source})})]}),/*#__PURE__*/_jsxs(NewsMeta,{children:[/*#__PURE__*/_jsx(NewsDate,{children:news.date}),/*#__PURE__*/_jsx(SentimentBadge,{sentiment:news.sentiment,children:getSentimentLabel(news.sentiment)})]})]},news.id)):!selectedDate&&!selectedDateRange?newsData.map(news=>/*#__PURE__*/_jsxs(NewsItem,{sentiment:news.sentiment,onClick:()=>handleNewsClick(news),ref:el=>newsRefs.current[news.id]=el,highlighted:selectedDate===news.date,children:[/*#__PURE__*/_jsxs(NewsContent,{children:[/*#__PURE__*/_jsx(NewsTitle,{children:news.title}),/*#__PURE__*/_jsx(NewsSource,{children:/*#__PURE__*/_jsx(\"span\",{children:news.source})})]}),/*#__PURE__*/_jsxs(NewsMeta,{children:[/*#__PURE__*/_jsx(NewsDate,{children:news.date}),/*#__PURE__*/_jsx(SentimentBadge,{sentiment:news.sentiment,children:getSentimentLabel(news.sentiment)})]})]},news.id)):null})]});};export default NewsFeed;","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxs","_jsxs","jsx","_jsx","NewsFeedContainer","div","NewsFeedHeader","Title","h3","NewsItemList","NewsItem","props","highlighted","NewsContent","NewsTitle","h4","NewsSource","NewsMeta","NewsDate","SentimentBadge","sentiment","NewsFeed","_ref","onNewsClick","symbol","dataSource","selectedDate","selectedDateRange","newsData","setNewsData","filteredNewsData","setFilteredNewsData","loading","setLoading","error","setError","newsRefs","fetchNewsData","endpoint","console","log","response","get","data","filterNewsData","err","date","dateRange","dataLength","length","filtered","filter","news","newsDateStr","split","startDate","endDate","displayEndDate","setTimeout","matchingNews","find","current","id","scrollIntoView","behavior","block","handleNewsClick","newsItem","getSentimentLabel","getNewsTitle","children","style","color","marginBottom","padding","textAlign","map","onClick","ref","el","title","source"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/NewsFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    if (props.sentiment > 0.3) return 'var(--positive-color)';\n    if (props.sentiment < -0.3) return 'var(--negative-color)';\n    return 'var(--neutral-color)';\n  }};\n  color: white;\n`;\n\nconst NewsFeed = ({ \n  onNewsClick, \n  symbol = 'GENERAL', \n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  \n  // Fetch news data from the API\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Use the correct API endpoint format from the backend\n        const endpoint = `http://localhost:8001/api/news?symbol=${symbol || 'GENERAL'}&days=30`;\n        console.log('Fetching news data from:', endpoint);\n        \n        const response = await axios.get(endpoint);\n        console.log('News data received:', response.data);\n        setNewsData(response.data);\n        \n        // Initialize filtered data with all news\n        filterNewsData(response.data, selectedDate, selectedDateRange);\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to load news data. Please try again later.');\n        setNewsData([]);\n        setFilteredNewsData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchNewsData();\n  }, [symbol, dataSource]);\n  \n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", { date, dateRange, dataLength: data.length });\n    \n    let filtered = [...data];\n    \n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      // For point selection, use exact date matching\n      filtered = data.filter(news => {\n        // Extract just the date part for comparison (no time)\n        const newsDateStr = news.date.split('T')[0];\n        return newsDateStr === date;\n      });\n      console.log(`Found ${filtered.length} news items for date ${date}`);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      const { startDate, endDate, displayEndDate } = dateRange;\n      \n      // Extract just the date part for comparison (no time)\n      // We want to include all news from startDate up to and including displayEndDate\n      // This is a string comparison which is more reliable than Date objects for this case\n      filtered = data.filter(news => {\n        const newsDateStr = news.date.split('T')[0];\n        \n        // Debug log for each news item\n        if (newsDateStr === '2025-04-06') {\n          console.log(`News from 2025-04-06 being checked`);\n          console.log(`- Start date: ${startDate}`);\n          console.log(`- Display end date: ${displayEndDate}`);\n          console.log(`- Is >= start: ${newsDateStr >= startDate}`);\n          console.log(`- Is <= display end: ${newsDateStr <= displayEndDate}`);\n        }\n        \n        // Simple string comparison - include if news date is between start and display end (inclusive)\n        return newsDateStr >= startDate && newsDateStr <= displayEndDate;\n      });\n      \n      console.log(`Filtering between ${startDate} and ${displayEndDate} (inclusive)`);\n      console.log(`Found ${filtered.length} news items in range`);\n    }\n    \n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n  \n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    \n    console.log(\"Selection changed, filtering news with:\", { selectedDate, selectedDateRange });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n    \n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({ \n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  \n  const handleNewsClick = (newsItem) => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  \n  const getSentimentLabel = (sentiment) => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n  \n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      // For display, use the original end date (before we adjusted it to the next day)\n      const displayEndDate = selectedDateRange.displayEndDate || selectedDateRange.endDate;\n      \n      return `Market News from ${selectedDateRange.startDate} to ${displayEndDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  \n  return (\n    <NewsFeedContainer>\n      <NewsFeedHeader>\n        <Title>{getNewsTitle()} {loading && '(Loading...)'}</Title>\n      </NewsFeedHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      {(selectedDate || selectedDateRange) && filteredNewsData.length === 0 && (\n        <div style={{ padding: '20px', textAlign: 'center', color: 'var(--text-secondary)' }}>\n          No news articles found for the selected {selectedDate ? 'date' : 'date range'}.\n        </div>\n      )}\n      \n      <NewsItemList>\n        {filteredNewsData.length > 0 ? (\n          filteredNewsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : !selectedDate && !selectedDateRange ? (\n          newsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : null}\n      </NewsItemList>\n    </NewsFeedContainer>\n  );\n};\n\nexport default NewsFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}