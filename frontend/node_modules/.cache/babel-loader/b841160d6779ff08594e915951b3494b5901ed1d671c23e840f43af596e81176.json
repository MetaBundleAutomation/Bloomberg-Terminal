{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n_c = NewsFeedContainer;\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = NewsFeedHeader;\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n_c4 = NewsItemList;\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c5 = NewsItem;\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n_c6 = NewsContent;\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n_c7 = NewsTitle;\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c8 = NewsSource;\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n_c9 = NewsMeta;\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c10 = NewsDate;\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n  if (props.sentiment > 0.3) return 'var(--positive-color)';\n  if (props.sentiment < -0.3) return 'var(--negative-color)';\n  return 'var(--neutral-color)';\n}};\n  color: white;\n`;\n\n// Mock data - this would come from your API\n_c11 = SentimentBadge;\nconst generateMockNewsData = (symbol = 'GENERAL') => {\n  const data = [];\n  const today = new Date();\n  const sources = ['Bloomberg', 'CNBC', 'Reuters', 'Wall Street Journal', 'Financial Times'];\n\n  // Generate news for the last 30 days\n  for (let i = 0; i < 30; i++) {\n    const date = new Date(today);\n    date.setDate(date.getDate() - i);\n    const dateStr = date.toISOString().split('T')[0];\n\n    // Generate 0-3 news items per day\n    const newsCount = Math.floor(Math.random() * 4);\n    for (let j = 0; j < newsCount; j++) {\n      const sentiment = Math.random() * 2 - 1; // -1 to 1\n\n      let title;\n      if (sentiment > 0.3) {\n        title = `${symbol} Gains on Positive Market Outlook`;\n      } else if (sentiment < -0.3) {\n        title = `${symbol} Drops Amid Market Concerns`;\n      } else {\n        title = `${symbol} Remains Stable as Markets Fluctuate`;\n      }\n\n      // Add some variety to the titles\n      if (j === 1) {\n        title = `Analysts Update Forecast for ${symbol}`;\n      } else if (j === 2) {\n        title = `New Developments Impact ${symbol} Trading`;\n      }\n      data.push({\n        id: `${dateStr}-${j}`,\n        title,\n        source: sources[Math.floor(Math.random() * sources.length)],\n        date: dateStr,\n        sentiment,\n        summary: `This is a mock summary for the news item about ${symbol} on ${dateStr}.`\n      });\n    }\n  }\n\n  // Sort by date (newest first)\n  return data.sort((a, b) => new Date(b.date) - new Date(a.date));\n};\nconst NewsFeed = ({\n  onNewsClick,\n  symbol = 'GENERAL',\n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n\n  // Fetch news data when symbol changes\n  useEffect(() => {\n    const fetchNews = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/news?symbol=${apiSymbol}`);\n        const data = response.data;\n        setNewsData(data);\n\n        // Initialize filtered data\n        filterNewsData(data, selectedDate, selectedDateRange);\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to fetch news from API. Using mock data instead.');\n\n        // Fallback to mock data if API fails\n        const mockData = generateMockNewsData(symbol);\n        setNewsData(mockData);\n\n        // Initialize filtered data\n        filterNewsData(mockData, selectedDate, selectedDateRange);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNews();\n  }, [symbol, dataSource]);\n\n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", {\n      date,\n      dateRange,\n      dataLength: data.length\n    });\n    let filtered = [...data];\n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      filtered = data.filter(news => news.date === date);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      const {\n        startDate,\n        endDate\n      } = dateRange;\n      filtered = data.filter(news => {\n        const newsDate = new Date(news.date);\n        return newsDate >= new Date(startDate) && newsDate <= new Date(endDate);\n      });\n    }\n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n\n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    console.log(\"Selection changed, filtering news with:\", {\n      selectedDate,\n      selectedDateRange\n    });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n\n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  const handleNewsClick = newsItem => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  const getSentimentLabel = sentiment => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n\n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      return `Market News from ${selectedDateRange.startDate} to ${selectedDateRange.endDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NewsFeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NewsFeedHeader, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: [getNewsTitle(), \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), (selectedDate || selectedDateRange) && filteredNewsData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: 'var(--text-secondary)'\n      },\n      children: [\"No news articles found for the selected \", selectedDate ? 'date' : 'date range', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewsItemList, {\n      children: filteredNewsData.length > 0 ? filteredNewsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this)) : !selectedDate && !selectedDateRange ? newsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"KHj9q+piZ5m81sxhJKCg3lr6/50=\");\n_c12 = NewsFeed;\nexport default NewsFeed;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"NewsFeedContainer\");\n$RefreshReg$(_c2, \"NewsFeedHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NewsItemList\");\n$RefreshReg$(_c5, \"NewsItem\");\n$RefreshReg$(_c6, \"NewsContent\");\n$RefreshReg$(_c7, \"NewsTitle\");\n$RefreshReg$(_c8, \"NewsSource\");\n$RefreshReg$(_c9, \"NewsMeta\");\n$RefreshReg$(_c10, \"NewsDate\");\n$RefreshReg$(_c11, \"SentimentBadge\");\n$RefreshReg$(_c12, \"NewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","NewsFeedContainer","div","_c","NewsFeedHeader","_c2","Title","h3","_c3","NewsItemList","_c4","NewsItem","props","highlighted","_c5","NewsContent","_c6","NewsTitle","h4","_c7","NewsSource","_c8","NewsMeta","_c9","NewsDate","_c10","SentimentBadge","sentiment","_c11","generateMockNewsData","symbol","data","today","Date","sources","i","date","setDate","getDate","dateStr","toISOString","split","newsCount","Math","floor","random","j","title","push","id","source","length","summary","sort","a","b","NewsFeed","onNewsClick","dataSource","selectedDate","selectedDateRange","_s","newsData","setNewsData","filteredNewsData","setFilteredNewsData","loading","setLoading","error","setError","newsRefs","fetchNews","apiSymbol","response","get","filterNewsData","err","console","mockData","dateRange","log","dataLength","filtered","filter","news","startDate","endDate","newsDate","setTimeout","matchingNews","find","current","scrollIntoView","behavior","block","handleNewsClick","newsItem","getSentimentLabel","getNewsTitle","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","padding","textAlign","map","onClick","ref","el","_c12","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/NewsFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    if (props.sentiment > 0.3) return 'var(--positive-color)';\n    if (props.sentiment < -0.3) return 'var(--negative-color)';\n    return 'var(--neutral-color)';\n  }};\n  color: white;\n`;\n\n// Mock data - this would come from your API\nconst generateMockNewsData = (symbol = 'GENERAL') => {\n  const data = [];\n  const today = new Date();\n  const sources = ['Bloomberg', 'CNBC', 'Reuters', 'Wall Street Journal', 'Financial Times'];\n  \n  // Generate news for the last 30 days\n  for (let i = 0; i < 30; i++) {\n    const date = new Date(today);\n    date.setDate(date.getDate() - i);\n    const dateStr = date.toISOString().split('T')[0];\n    \n    // Generate 0-3 news items per day\n    const newsCount = Math.floor(Math.random() * 4);\n    \n    for (let j = 0; j < newsCount; j++) {\n      const sentiment = (Math.random() * 2 - 1); // -1 to 1\n      \n      let title;\n      if (sentiment > 0.3) {\n        title = `${symbol} Gains on Positive Market Outlook`;\n      } else if (sentiment < -0.3) {\n        title = `${symbol} Drops Amid Market Concerns`;\n      } else {\n        title = `${symbol} Remains Stable as Markets Fluctuate`;\n      }\n      \n      // Add some variety to the titles\n      if (j === 1) {\n        title = `Analysts Update Forecast for ${symbol}`;\n      } else if (j === 2) {\n        title = `New Developments Impact ${symbol} Trading`;\n      }\n      \n      data.push({\n        id: `${dateStr}-${j}`,\n        title,\n        source: sources[Math.floor(Math.random() * sources.length)],\n        date: dateStr,\n        sentiment,\n        summary: `This is a mock summary for the news item about ${symbol} on ${dateStr}.`\n      });\n    }\n  }\n  \n  // Sort by date (newest first)\n  return data.sort((a, b) => new Date(b.date) - new Date(a.date));\n};\n\nconst NewsFeed = ({ \n  onNewsClick, \n  symbol = 'GENERAL', \n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  \n  // Fetch news data when symbol changes\n  useEffect(() => {\n    const fetchNews = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/news?symbol=${apiSymbol}`);\n        const data = response.data;\n        setNewsData(data);\n        \n        // Initialize filtered data\n        filterNewsData(data, selectedDate, selectedDateRange);\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to fetch news from API. Using mock data instead.');\n        \n        // Fallback to mock data if API fails\n        const mockData = generateMockNewsData(symbol);\n        setNewsData(mockData);\n        \n        // Initialize filtered data\n        filterNewsData(mockData, selectedDate, selectedDateRange);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchNews();\n  }, [symbol, dataSource]);\n  \n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", { date, dateRange, dataLength: data.length });\n    \n    let filtered = [...data];\n    \n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      filtered = data.filter(news => news.date === date);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      const { startDate, endDate } = dateRange;\n      filtered = data.filter(news => {\n        const newsDate = new Date(news.date);\n        return newsDate >= new Date(startDate) && newsDate <= new Date(endDate);\n      });\n    }\n    \n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n  \n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    \n    console.log(\"Selection changed, filtering news with:\", { selectedDate, selectedDateRange });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n    \n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({ \n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  \n  const handleNewsClick = (newsItem) => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  \n  const getSentimentLabel = (sentiment) => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n  \n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      return `Market News from ${selectedDateRange.startDate} to ${selectedDateRange.endDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  \n  return (\n    <NewsFeedContainer>\n      <NewsFeedHeader>\n        <Title>{getNewsTitle()} {loading && '(Loading...)'}</Title>\n      </NewsFeedHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      {(selectedDate || selectedDateRange) && filteredNewsData.length === 0 && (\n        <div style={{ padding: '20px', textAlign: 'center', color: 'var(--text-secondary)' }}>\n          No news articles found for the selected {selectedDate ? 'date' : 'date range'}.\n        </div>\n      )}\n      \n      <NewsItemList>\n        {filteredNewsData.length > 0 ? (\n          filteredNewsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : !selectedDate && !selectedDateRange ? (\n          newsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : null}\n      </NewsItemList>\n    </NewsFeedContainer>\n  );\n};\n\nexport default NewsFeed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,iBAAiB;AAUvB,MAAMG,cAAc,GAAGP,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,cAAc;AAOpB,MAAME,KAAK,GAAGT,MAAM,CAACU,EAAE;AACvB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,KAAK;AAMX,MAAMG,YAAY,GAAGZ,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GApBID,YAAY;AAsBlB,MAAME,QAAQ,GAAGd,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,sBAAsBU,KAAK,IAAIA,KAAK,CAACC,WAAW,GAAG,6BAA6B,GAAG,aAAa;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAfIH,QAAQ;AAiBd,MAAMI,WAAW,GAAGlB,MAAM,CAACK,GAAG;AAC9B;AACA;AACA,CAAC;AAACc,GAAA,GAHID,WAAW;AAKjB,MAAME,SAAS,GAAGpB,MAAM,CAACqB,EAAE;AAC3B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,SAAS;AAMf,MAAMG,UAAU,GAAGvB,MAAM,CAACK,GAAG;AAC7B;AACA;AACA,CAAC;AAACmB,GAAA,GAHID,UAAU;AAKhB,MAAME,QAAQ,GAAGzB,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GANID,QAAQ;AAQd,MAAME,QAAQ,GAAG3B,MAAM,CAACK,GAAG;AAC3B;AACA;AACA,CAAC;AAACuB,IAAA,GAHID,QAAQ;AAKd,MAAME,cAAc,GAAG7B,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA,sBAAsBU,KAAK,IAAI;EAC3B,IAAIA,KAAK,CAACe,SAAS,GAAG,GAAG,EAAE,OAAO,uBAAuB;EACzD,IAAIf,KAAK,CAACe,SAAS,GAAG,CAAC,GAAG,EAAE,OAAO,uBAAuB;EAC1D,OAAO,sBAAsB;AAC/B,CAAC;AACH;AACA,CAAC;;AAED;AAAAC,IAAA,GAbMF,cAAc;AAcpB,MAAMG,oBAAoB,GAAGA,CAACC,MAAM,GAAG,SAAS,KAAK;EACnD,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,OAAO,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,qBAAqB,EAAE,iBAAiB,CAAC;;EAE1F;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,IAAI,GAAG,IAAIH,IAAI,CAACD,KAAK,CAAC;IAC5BI,IAAI,CAACC,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;IAChC,MAAMI,OAAO,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEhD;IACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IAE/C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,EAAEI,CAAC,EAAE,EAAE;MAClC,MAAMnB,SAAS,GAAIgB,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC;;MAE3C,IAAIE,KAAK;MACT,IAAIpB,SAAS,GAAG,GAAG,EAAE;QACnBoB,KAAK,GAAG,GAAGjB,MAAM,mCAAmC;MACtD,CAAC,MAAM,IAAIH,SAAS,GAAG,CAAC,GAAG,EAAE;QAC3BoB,KAAK,GAAG,GAAGjB,MAAM,6BAA6B;MAChD,CAAC,MAAM;QACLiB,KAAK,GAAG,GAAGjB,MAAM,sCAAsC;MACzD;;MAEA;MACA,IAAIgB,CAAC,KAAK,CAAC,EAAE;QACXC,KAAK,GAAG,gCAAgCjB,MAAM,EAAE;MAClD,CAAC,MAAM,IAAIgB,CAAC,KAAK,CAAC,EAAE;QAClBC,KAAK,GAAG,2BAA2BjB,MAAM,UAAU;MACrD;MAEAC,IAAI,CAACiB,IAAI,CAAC;QACRC,EAAE,EAAE,GAAGV,OAAO,IAAIO,CAAC,EAAE;QACrBC,KAAK;QACLG,MAAM,EAAEhB,OAAO,CAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGX,OAAO,CAACiB,MAAM,CAAC,CAAC;QAC3Df,IAAI,EAAEG,OAAO;QACbZ,SAAS;QACTyB,OAAO,EAAE,kDAAkDtB,MAAM,OAAOS,OAAO;MACjF,CAAC,CAAC;IACJ;EACF;;EAEA;EACA,OAAOR,IAAI,CAACsB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAItB,IAAI,CAACsB,CAAC,CAACnB,IAAI,CAAC,GAAG,IAAIH,IAAI,CAACqB,CAAC,CAAClB,IAAI,CAAC,CAAC;AACjE,CAAC;AAED,MAAMoB,QAAQ,GAAGA,CAAC;EAChBC,WAAW;EACX3B,MAAM,GAAG,SAAS;EAClB4B,UAAU;EACVC,YAAY,GAAG,IAAI;EACnBC,iBAAiB,GAAG;AACtB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwE,OAAO,EAAEC,UAAU,CAAC,GAAGzE,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0E,KAAK,EAAEC,QAAQ,CAAC,GAAG3E,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM4E,QAAQ,GAAG1E,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE3B;EACAD,SAAS,CAAC,MAAM;IACd,MAAM4E,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BJ,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF;QACA,MAAMG,SAAS,GAAG1C,MAAM,IAAI,SAAS;QACrC,MAAM2C,QAAQ,GAAG,MAAM3E,KAAK,CAAC4E,GAAG,CAAC,yCAAyCF,SAAS,EAAE,CAAC;QACtF,MAAMzC,IAAI,GAAG0C,QAAQ,CAAC1C,IAAI;QAC1BgC,WAAW,CAAChC,IAAI,CAAC;;QAEjB;QACA4C,cAAc,CAAC5C,IAAI,EAAE4B,YAAY,EAAEC,iBAAiB,CAAC;MACvD,CAAC,CAAC,OAAOgB,GAAG,EAAE;QACZC,OAAO,CAACT,KAAK,CAAC,2BAA2B,EAAEQ,GAAG,CAAC;QAC/CP,QAAQ,CAAC,yDAAyD,CAAC;;QAEnE;QACA,MAAMS,QAAQ,GAAGjD,oBAAoB,CAACC,MAAM,CAAC;QAC7CiC,WAAW,CAACe,QAAQ,CAAC;;QAErB;QACAH,cAAc,CAACG,QAAQ,EAAEnB,YAAY,EAAEC,iBAAiB,CAAC;MAC3D,CAAC,SAAS;QACRO,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACzC,MAAM,EAAE4B,UAAU,CAAC,CAAC;;EAExB;EACA,MAAMiB,cAAc,GAAGA,CAAC5C,IAAI,EAAEK,IAAI,EAAE2C,SAAS,KAAK;IAChDF,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAE;MAAE5C,IAAI;MAAE2C,SAAS;MAAEE,UAAU,EAAElD,IAAI,CAACoB;IAAO,CAAC,CAAC;IAEjF,IAAI+B,QAAQ,GAAG,CAAC,GAAGnD,IAAI,CAAC;IAExB,IAAIK,IAAI,EAAE;MACRyC,OAAO,CAACG,GAAG,CAAC,8BAA8B,EAAE5C,IAAI,CAAC;MACjD8C,QAAQ,GAAGnD,IAAI,CAACoD,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAChD,IAAI,KAAKA,IAAI,CAAC;IACpD,CAAC,MAAM,IAAI2C,SAAS,EAAE;MACpBF,OAAO,CAACG,GAAG,CAAC,2BAA2B,EAAED,SAAS,CAAC;MACnD,MAAM;QAAEM,SAAS;QAAEC;MAAQ,CAAC,GAAGP,SAAS;MACxCG,QAAQ,GAAGnD,IAAI,CAACoD,MAAM,CAACC,IAAI,IAAI;QAC7B,MAAMG,QAAQ,GAAG,IAAItD,IAAI,CAACmD,IAAI,CAAChD,IAAI,CAAC;QACpC,OAAOmD,QAAQ,IAAI,IAAItD,IAAI,CAACoD,SAAS,CAAC,IAAIE,QAAQ,IAAI,IAAItD,IAAI,CAACqD,OAAO,CAAC;MACzE,CAAC,CAAC;IACJ;IAEAT,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAEE,QAAQ,CAAC/B,MAAM,CAAC;IACpDc,mBAAmB,CAACiB,QAAQ,CAAC;EAC/B,CAAC;;EAED;EACAvF,SAAS,CAAC,MAAM;IACd,IAAI,CAACmE,QAAQ,CAACX,MAAM,EAAE;IAEtB0B,OAAO,CAACG,GAAG,CAAC,yCAAyC,EAAE;MAAErB,YAAY;MAAEC;IAAkB,CAAC,CAAC;IAC3Fe,cAAc,CAACb,QAAQ,EAAEH,YAAY,EAAEC,iBAAiB,CAAC;;IAEzD;IACA,IAAID,YAAY,EAAE;MAChB6B,UAAU,CAAC,MAAM;QACf,MAAMC,YAAY,GAAG3B,QAAQ,CAAC4B,IAAI,CAACN,IAAI,IAAIA,IAAI,CAAChD,IAAI,KAAKuB,YAAY,CAAC;QACtE,IAAI8B,YAAY,IAAInB,QAAQ,CAACqB,OAAO,CAACF,YAAY,CAACxC,EAAE,CAAC,EAAE;UACrDqB,QAAQ,CAACqB,OAAO,CAACF,YAAY,CAACxC,EAAE,CAAC,CAAC2C,cAAc,CAAC;YAC/CC,QAAQ,EAAE,QAAQ;YAClBC,KAAK,EAAE;UACT,CAAC,CAAC;QACJ;MACF,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC,EAAE,CAAChC,QAAQ,EAAEH,YAAY,EAAEC,iBAAiB,CAAC,CAAC;EAE/C,MAAMmC,eAAe,GAAIC,QAAQ,IAAK;IACpC,IAAIvC,WAAW,EAAE;MACfA,WAAW,CAACuC,QAAQ,CAAC;IACvB;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAItE,SAAS,IAAK;IACvC,IAAIA,SAAS,GAAG,GAAG,EAAE,OAAO,UAAU;IACtC,IAAIA,SAAS,GAAG,CAAC,GAAG,EAAE,OAAO,UAAU;IACvC,OAAO,SAAS;EAClB,CAAC;;EAED;EACA,MAAMuE,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIvC,YAAY,EAAE;MAChB,OAAO,mBAAmBA,YAAY,EAAE;IAC1C,CAAC,MAAM,IAAIC,iBAAiB,EAAE;MAC5B,OAAO,oBAAoBA,iBAAiB,CAACyB,SAAS,OAAOzB,iBAAiB,CAAC0B,OAAO,EAAE;IAC1F,CAAC,MAAM;MACL,OAAO,eAAexD,MAAM,KAAK,SAAS,GAAG,OAAOA,MAAM,EAAE,GAAG,EAAE,EAAE;IACrE;EACF,CAAC;EAED,oBACE9B,OAAA,CAACC,iBAAiB;IAAAkG,QAAA,gBAChBnG,OAAA,CAACI,cAAc;MAAA+F,QAAA,eACbnG,OAAA,CAACM,KAAK;QAAA6F,QAAA,GAAED,YAAY,CAAC,CAAC,EAAC,GAAC,EAAChC,OAAO,IAAI,cAAc;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,EAEhBnC,KAAK,iBACJpE,OAAA;MAAKwG,KAAK,EAAE;QAAEC,KAAK,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAP,QAAA,EAAE/B;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACpE,EAEA,CAAC5C,YAAY,IAAIC,iBAAiB,KAAKI,gBAAgB,CAACb,MAAM,KAAK,CAAC,iBACnEnD,OAAA;MAAKwG,KAAK,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,SAAS,EAAE,QAAQ;QAAEH,KAAK,EAAE;MAAwB,CAAE;MAAAN,QAAA,GAAC,0CAC5C,EAACxC,YAAY,GAAG,MAAM,GAAG,YAAY,EAAC,GAChF;IAAA;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eAEDvG,OAAA,CAACS,YAAY;MAAA0F,QAAA,EACVnC,gBAAgB,CAACb,MAAM,GAAG,CAAC,GAC1Ba,gBAAgB,CAAC6C,GAAG,CAACzB,IAAI,iBACvBpF,OAAA,CAACW,QAAQ;QAEPgB,SAAS,EAAEyD,IAAI,CAACzD,SAAU;QAC1BmF,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACX,IAAI,CAAE;QACrC2B,GAAG,EAAEC,EAAE,IAAI1C,QAAQ,CAACqB,OAAO,CAACP,IAAI,CAACnC,EAAE,CAAC,GAAG+D,EAAG;QAC1CnG,WAAW,EAAE8C,YAAY,KAAKyB,IAAI,CAAChD,IAAK;QAAA+D,QAAA,gBAExCnG,OAAA,CAACe,WAAW;UAAAoF,QAAA,gBACVnG,OAAA,CAACiB,SAAS;YAAAkF,QAAA,EAAEf,IAAI,CAACrC;UAAK;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACnCvG,OAAA,CAACoB,UAAU;YAAA+E,QAAA,eACTnG,OAAA;cAAAmG,QAAA,EAAOf,IAAI,CAAClC;YAAM;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACdvG,OAAA,CAACsB,QAAQ;UAAA6E,QAAA,gBACPnG,OAAA,CAACwB,QAAQ;YAAA2E,QAAA,EAAEf,IAAI,CAAChD;UAAI;YAAAgE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAChCvG,OAAA,CAAC0B,cAAc;YAACC,SAAS,EAAEyD,IAAI,CAACzD,SAAU;YAAAwE,QAAA,EACvCF,iBAAiB,CAACb,IAAI,CAACzD,SAAS;UAAC;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA,GAjBNnB,IAAI,CAACnC,EAAE;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBJ,CACX,CAAC,GACA,CAAC5C,YAAY,IAAI,CAACC,iBAAiB,GACrCE,QAAQ,CAAC+C,GAAG,CAACzB,IAAI,iBACfpF,OAAA,CAACW,QAAQ;QAEPgB,SAAS,EAAEyD,IAAI,CAACzD,SAAU;QAC1BmF,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACX,IAAI,CAAE;QACrC2B,GAAG,EAAEC,EAAE,IAAI1C,QAAQ,CAACqB,OAAO,CAACP,IAAI,CAACnC,EAAE,CAAC,GAAG+D,EAAG;QAC1CnG,WAAW,EAAE8C,YAAY,KAAKyB,IAAI,CAAChD,IAAK;QAAA+D,QAAA,gBAExCnG,OAAA,CAACe,WAAW;UAAAoF,QAAA,gBACVnG,OAAA,CAACiB,SAAS;YAAAkF,QAAA,EAAEf,IAAI,CAACrC;UAAK;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACnCvG,OAAA,CAACoB,UAAU;YAAA+E,QAAA,eACTnG,OAAA;cAAAmG,QAAA,EAAOf,IAAI,CAAClC;YAAM;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACdvG,OAAA,CAACsB,QAAQ;UAAA6E,QAAA,gBACPnG,OAAA,CAACwB,QAAQ;YAAA2E,QAAA,EAAEf,IAAI,CAAChD;UAAI;YAAAgE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAChCvG,OAAA,CAAC0B,cAAc;YAACC,SAAS,EAAEyD,IAAI,CAACzD,SAAU;YAAAwE,QAAA,EACvCF,iBAAiB,CAACb,IAAI,CAACzD,SAAS;UAAC;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA,GAjBNnB,IAAI,CAACnC,EAAE;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBJ,CACX,CAAC,GACA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAExB,CAAC;AAAC1C,EAAA,CAnLIL,QAAQ;AAAAyD,IAAA,GAARzD,QAAQ;AAqLd,eAAeA,QAAQ;AAAC,IAAArD,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAqF,IAAA;AAAAC,YAAA,CAAA/G,EAAA;AAAA+G,YAAA,CAAA7G,GAAA;AAAA6G,YAAA,CAAA1G,GAAA;AAAA0G,YAAA,CAAAxG,GAAA;AAAAwG,YAAA,CAAApG,GAAA;AAAAoG,YAAA,CAAAlG,GAAA;AAAAkG,YAAA,CAAA/F,GAAA;AAAA+F,YAAA,CAAA7F,GAAA;AAAA6F,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAzF,IAAA;AAAAyF,YAAA,CAAAtF,IAAA;AAAAsF,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}