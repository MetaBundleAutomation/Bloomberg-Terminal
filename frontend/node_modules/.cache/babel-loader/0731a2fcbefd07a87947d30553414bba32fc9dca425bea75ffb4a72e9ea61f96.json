{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n_c = NewsFeedContainer;\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = NewsFeedHeader;\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n_c4 = NewsItemList;\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c5 = NewsItem;\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n_c6 = NewsContent;\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n_c7 = NewsTitle;\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c8 = NewsSource;\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n_c9 = NewsMeta;\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c10 = NewsDate;\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n  if (props.sentiment > 0.3) return 'var(--positive-color)';\n  if (props.sentiment < -0.3) return 'var(--negative-color)';\n  return 'var(--neutral-color)';\n}};\n  color: white;\n`;\n\n// Mock data - this would come from your API\n_c11 = SentimentBadge;\nconst generateMockNewsData = (symbol = 'GENERAL') => {\n  const data = [];\n  const today = new Date();\n  const sources = ['Bloomberg', 'CNBC', 'Reuters', 'Wall Street Journal', 'Financial Times'];\n\n  // Generate news for the last 30 days\n  for (let i = 0; i < 30; i++) {\n    const date = new Date(today);\n    date.setDate(date.getDate() - i);\n    const dateStr = date.toISOString().split('T')[0];\n\n    // Use a deterministic approach to generate consistent news counts\n    // This ensures the news counts match what's shown on the timeline\n    const newsCount = (i + date.getDate()) % 4; // 0-3 news items per day\n\n    for (let j = 0; j < newsCount; j++) {\n      const sentiment = (i + j) % 10 / 10 * 2 - 1; // -1 to 1\n\n      let title;\n      if (sentiment > 0.3) {\n        title = `${symbol} Gains on Positive Market Outlook`;\n      } else if (sentiment < -0.3) {\n        title = `${symbol} Drops Amid Market Concerns`;\n      } else {\n        title = `${symbol} Remains Stable as Markets Fluctuate`;\n      }\n\n      // Add some variety to the titles\n      if (j === 1) {\n        title = `Analysts Update Forecast for ${symbol}`;\n      } else if (j === 2) {\n        title = `New Developments Impact ${symbol} Trading`;\n      }\n      data.push({\n        id: `${dateStr}-${j}`,\n        title,\n        source: sources[j % sources.length],\n        date: dateStr,\n        sentiment,\n        summary: `This is a mock summary for the news item about ${symbol} on ${dateStr}.`\n      });\n    }\n  }\n\n  // Sort by date (newest first)\n  return data.sort((a, b) => new Date(b.date) - new Date(a.date));\n};\nconst NewsFeed = ({\n  onNewsClick,\n  symbol = 'GENERAL',\n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n\n  // Fetch news data from the API\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Use the dataSource to determine which API endpoint to use\n        const endpoint = dataSource === 'file' ? `http://localhost:8001/api/news/${symbol}` : `http://localhost:8001/api/news/${symbol}`;\n        const response = await axios.get(endpoint);\n        setNewsData(response.data);\n\n        // Initialize filtered data with all news\n        filterNewsData(response.data, selectedDate, selectedDateRange);\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to load news data. Please try again later.');\n        setNewsData([]);\n        setFilteredNewsData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNewsData();\n  }, [symbol, dataSource]);\n\n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", {\n      date,\n      dateRange,\n      dataLength: data.length\n    });\n    let filtered = [...data];\n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      filtered = data.filter(news => news.date === date);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      const {\n        startDate,\n        endDate\n      } = dateRange;\n\n      // Convert dates to Date objects for comparison\n      const startDateObj = new Date(startDate);\n      const endDateObj = new Date(endDate);\n\n      // Set hours to ensure we include the full days\n      startDateObj.setHours(0, 0, 0, 0);\n      filtered = data.filter(news => {\n        const newsDate = new Date(news.date);\n        newsDate.setHours(0, 0, 0, 0); // Normalize time to compare dates only\n        return newsDate >= startDateObj && newsDate < endDateObj;\n      });\n      console.log(`Filtering between ${startDateObj.toISOString()} and ${endDateObj.toISOString()}`);\n      console.log(`Found ${filtered.length} news items in range`);\n    }\n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n\n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    console.log(\"Selection changed, filtering news with:\", {\n      selectedDate,\n      selectedDateRange\n    });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n\n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  const handleNewsClick = newsItem => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  const getSentimentLabel = sentiment => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n\n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      // For display, use the original end date (before we adjusted it to the next day)\n      const displayEndDate = new Date(selectedDateRange.endDate);\n      displayEndDate.setDate(displayEndDate.getDate() - 1);\n      const formattedEndDate = displayEndDate.toISOString().split('T')[0];\n      return `Market News from ${selectedDateRange.startDate} to ${formattedEndDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NewsFeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NewsFeedHeader, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: [getNewsTitle(), \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), (selectedDate || selectedDateRange) && filteredNewsData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: 'var(--text-secondary)'\n      },\n      children: [\"No news articles found for the selected \", selectedDate ? 'date' : 'date range', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewsItemList, {\n      children: filteredNewsData.length > 0 ? filteredNewsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this)) : !selectedDate && !selectedDateRange ? newsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"KHj9q+piZ5m81sxhJKCg3lr6/50=\");\n_c12 = NewsFeed;\nexport default NewsFeed;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"NewsFeedContainer\");\n$RefreshReg$(_c2, \"NewsFeedHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NewsItemList\");\n$RefreshReg$(_c5, \"NewsItem\");\n$RefreshReg$(_c6, \"NewsContent\");\n$RefreshReg$(_c7, \"NewsTitle\");\n$RefreshReg$(_c8, \"NewsSource\");\n$RefreshReg$(_c9, \"NewsMeta\");\n$RefreshReg$(_c10, \"NewsDate\");\n$RefreshReg$(_c11, \"SentimentBadge\");\n$RefreshReg$(_c12, \"NewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","NewsFeedContainer","div","_c","NewsFeedHeader","_c2","Title","h3","_c3","NewsItemList","_c4","NewsItem","props","highlighted","_c5","NewsContent","_c6","NewsTitle","h4","_c7","NewsSource","_c8","NewsMeta","_c9","NewsDate","_c10","SentimentBadge","sentiment","_c11","generateMockNewsData","symbol","data","today","Date","sources","i","date","setDate","getDate","dateStr","toISOString","split","newsCount","j","title","push","id","source","length","summary","sort","a","b","NewsFeed","onNewsClick","dataSource","selectedDate","selectedDateRange","_s","newsData","setNewsData","filteredNewsData","setFilteredNewsData","loading","setLoading","error","setError","newsRefs","fetchNewsData","endpoint","response","get","filterNewsData","err","console","dateRange","log","dataLength","filtered","filter","news","startDate","endDate","startDateObj","endDateObj","setHours","newsDate","setTimeout","matchingNews","find","current","scrollIntoView","behavior","block","handleNewsClick","newsItem","getSentimentLabel","getNewsTitle","displayEndDate","formattedEndDate","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","padding","textAlign","map","onClick","ref","el","_c12","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/NewsFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    if (props.sentiment > 0.3) return 'var(--positive-color)';\n    if (props.sentiment < -0.3) return 'var(--negative-color)';\n    return 'var(--neutral-color)';\n  }};\n  color: white;\n`;\n\n// Mock data - this would come from your API\nconst generateMockNewsData = (symbol = 'GENERAL') => {\n  const data = [];\n  const today = new Date();\n  const sources = ['Bloomberg', 'CNBC', 'Reuters', 'Wall Street Journal', 'Financial Times'];\n  \n  // Generate news for the last 30 days\n  for (let i = 0; i < 30; i++) {\n    const date = new Date(today);\n    date.setDate(date.getDate() - i);\n    const dateStr = date.toISOString().split('T')[0];\n    \n    // Use a deterministic approach to generate consistent news counts\n    // This ensures the news counts match what's shown on the timeline\n    const newsCount = ((i + date.getDate()) % 4); // 0-3 news items per day\n    \n    for (let j = 0; j < newsCount; j++) {\n      const sentiment = ((i + j) % 10) / 10 * 2 - 1; // -1 to 1\n      \n      let title;\n      if (sentiment > 0.3) {\n        title = `${symbol} Gains on Positive Market Outlook`;\n      } else if (sentiment < -0.3) {\n        title = `${symbol} Drops Amid Market Concerns`;\n      } else {\n        title = `${symbol} Remains Stable as Markets Fluctuate`;\n      }\n      \n      // Add some variety to the titles\n      if (j === 1) {\n        title = `Analysts Update Forecast for ${symbol}`;\n      } else if (j === 2) {\n        title = `New Developments Impact ${symbol} Trading`;\n      }\n      \n      data.push({\n        id: `${dateStr}-${j}`,\n        title,\n        source: sources[j % sources.length],\n        date: dateStr,\n        sentiment,\n        summary: `This is a mock summary for the news item about ${symbol} on ${dateStr}.`\n      });\n    }\n  }\n  \n  // Sort by date (newest first)\n  return data.sort((a, b) => new Date(b.date) - new Date(a.date));\n};\n\nconst NewsFeed = ({ \n  onNewsClick, \n  symbol = 'GENERAL', \n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  \n  // Fetch news data from the API\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Use the dataSource to determine which API endpoint to use\n        const endpoint = dataSource === 'file' \n          ? `http://localhost:8001/api/news/${symbol}`\n          : `http://localhost:8001/api/news/${symbol}`;\n        \n        const response = await axios.get(endpoint);\n        setNewsData(response.data);\n        \n        // Initialize filtered data with all news\n        filterNewsData(response.data, selectedDate, selectedDateRange);\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to load news data. Please try again later.');\n        setNewsData([]);\n        setFilteredNewsData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchNewsData();\n  }, [symbol, dataSource]);\n  \n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", { date, dateRange, dataLength: data.length });\n    \n    let filtered = [...data];\n    \n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      filtered = data.filter(news => news.date === date);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      const { startDate, endDate } = dateRange;\n      \n      // Convert dates to Date objects for comparison\n      const startDateObj = new Date(startDate);\n      const endDateObj = new Date(endDate);\n      \n      // Set hours to ensure we include the full days\n      startDateObj.setHours(0, 0, 0, 0);\n      \n      filtered = data.filter(news => {\n        const newsDate = new Date(news.date);\n        newsDate.setHours(0, 0, 0, 0); // Normalize time to compare dates only\n        return newsDate >= startDateObj && newsDate < endDateObj;\n      });\n      \n      console.log(`Filtering between ${startDateObj.toISOString()} and ${endDateObj.toISOString()}`);\n      console.log(`Found ${filtered.length} news items in range`);\n    }\n    \n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n  \n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    \n    console.log(\"Selection changed, filtering news with:\", { selectedDate, selectedDateRange });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n    \n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({ \n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  \n  const handleNewsClick = (newsItem) => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  \n  const getSentimentLabel = (sentiment) => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n  \n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      // For display, use the original end date (before we adjusted it to the next day)\n      const displayEndDate = new Date(selectedDateRange.endDate);\n      displayEndDate.setDate(displayEndDate.getDate() - 1);\n      const formattedEndDate = displayEndDate.toISOString().split('T')[0];\n      \n      return `Market News from ${selectedDateRange.startDate} to ${formattedEndDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  \n  return (\n    <NewsFeedContainer>\n      <NewsFeedHeader>\n        <Title>{getNewsTitle()} {loading && '(Loading...)'}</Title>\n      </NewsFeedHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      {(selectedDate || selectedDateRange) && filteredNewsData.length === 0 && (\n        <div style={{ padding: '20px', textAlign: 'center', color: 'var(--text-secondary)' }}>\n          No news articles found for the selected {selectedDate ? 'date' : 'date range'}.\n        </div>\n      )}\n      \n      <NewsItemList>\n        {filteredNewsData.length > 0 ? (\n          filteredNewsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : !selectedDate && !selectedDateRange ? (\n          newsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : null}\n      </NewsItemList>\n    </NewsFeedContainer>\n  );\n};\n\nexport default NewsFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}