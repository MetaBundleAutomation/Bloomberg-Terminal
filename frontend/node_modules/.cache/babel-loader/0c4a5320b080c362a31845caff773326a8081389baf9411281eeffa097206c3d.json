{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n_c = NewsFeedContainer;\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = NewsFeedHeader;\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n_c4 = NewsItemList;\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c5 = NewsItem;\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n_c6 = NewsContent;\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n_c7 = NewsTitle;\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c8 = NewsSource;\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n_c9 = NewsMeta;\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c10 = NewsDate;\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n  if (props.sentiment > 0.3) return 'var(--positive-color)';\n  if (props.sentiment < -0.3) return 'var(--negative-color)';\n  return 'var(--neutral-color)';\n}};\n  color: white;\n`;\n_c11 = SentimentBadge;\nconst LoadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n`;\n_c12 = LoadingContainer;\nconst LoadingSpinner = styled.div`\n  border: 8px solid rgba(0, 0, 0, 0.1);\n  border-top: 8px solid var(--accent-color);\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: spin 2s linear infinite;\n  \n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n_c13 = LoadingSpinner;\nconst LoadingText = styled.div`\n  font-size: 16px;\n  color: var(--text-primary);\n  margin-top: 16px;\n`;\n_c14 = LoadingText;\nconst NewsFeed = ({\n  onNewsClick,\n  symbol = 'GENERAL',\n  dataSource = 'live',\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n\n  // Force remounting the component when date selection changes by using a keyed component\n  useEffect(() => {\n    console.log(`Date selection changed: Date=${selectedDate}, Range=${JSON.stringify(selectedDateRange)}`);\n\n    // Re-fetch news data whenever the date selection changes\n    fetchNewsData();\n  }, [selectedDate, selectedDateRange]);\n\n  // Fetch news data from the API\n  const fetchNewsData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let endpoint;\n\n      // Log dates for debugging\n      console.log('Fetch news with dates:', {\n        selectedDate: selectedDate,\n        selectedDateRange: selectedDateRange,\n        dateType: selectedDate ? typeof selectedDate : 'null',\n        rangeType: selectedDateRange ? 'object' : 'null'\n      });\n\n      // Special case: When a date point is clicked, the Timeline component\n      // actually creates a dateRange where start and end are the same day\n      if (selectedDateRange && selectedDateRange.startDate === selectedDateRange.endDate) {\n        // This is actually a point selection, use the date endpoint\n        const singleDate = selectedDateRange.startDate;\n\n        // Ensure date is in YYYY-MM-DD format\n        const formattedDate = typeof singleDate === 'string' ? singleDate : singleDate instanceof Date ? singleDate.toISOString().split('T')[0] : null;\n        if (!formattedDate) {\n          console.error('Invalid date format for single date:', singleDate);\n          throw new Error('Invalid date format');\n        }\n        endpoint = `http://localhost:8001/api/news/date?symbol=${symbol || 'GENERAL'}&date=${formattedDate}`;\n        console.log('Fetching single date (from range) news data:', endpoint);\n      }\n      // Regular point selection (unlikely to happen with current Timeline implementation)\n      else if (selectedDate) {\n        // Ensure date is in YYYY-MM-DD format\n        const formattedDate = typeof selectedDate === 'string' ? selectedDate : selectedDate instanceof Date ? selectedDate.toISOString().split('T')[0] : null;\n        if (!formattedDate) {\n          console.error('Invalid date format for selected date:', selectedDate);\n          throw new Error('Invalid date format');\n        }\n\n        // Use the specific date endpoint for point selection\n        endpoint = `http://localhost:8001/api/news/date?symbol=${symbol || 'GENERAL'}&date=${formattedDate}`;\n        console.log('Fetching single date news data from:', endpoint);\n      }\n      // Regular date range selection\n      else if (selectedDateRange) {\n        // Ensure dates are in YYYY-MM-DD format\n        const formattedStartDate = typeof selectedDateRange.startDate === 'string' ? selectedDateRange.startDate : selectedDateRange.startDate instanceof Date ? selectedDateRange.startDate.toISOString().split('T')[0] : null;\n        const formattedEndDate = selectedDateRange.displayEndDate || selectedDateRange.endDate;\n        const formattedDisplayEndDate = typeof formattedEndDate === 'string' ? formattedEndDate : formattedEndDate instanceof Date ? formattedEndDate.toISOString().split('T')[0] : null;\n        if (!formattedStartDate || !formattedDisplayEndDate) {\n          console.error('Invalid date format for date range:', selectedDateRange);\n          throw new Error('Invalid date range format');\n        }\n\n        // Use the date range specific endpoint\n        endpoint = `http://localhost:8001/api/news/date-range?symbol=${symbol || 'GENERAL'}&start_date=${formattedStartDate}&end_date=${formattedDisplayEndDate}`;\n        console.log('Fetching date range news data from:', endpoint);\n      }\n      // Default case - no date selection\n      else {\n        // Use the standard news endpoint\n        const days = dataSource === 'historical' ? 365 : 30;\n        endpoint = `http://localhost:8001/api/news?symbol=${symbol || 'GENERAL'}&days=${days}`;\n        console.log('Fetching general news data from:', endpoint);\n      }\n\n      // Clear existing data while loading\n      setNewsData([]);\n      setFilteredNewsData([]);\n      const response = await axios.get(endpoint);\n      console.log('News data received:', response.data.length, 'articles');\n\n      // Validate that we got actual articles\n      if (!Array.isArray(response.data) || response.data.length === 0) {\n        console.warn('No articles returned from API');\n      } else {\n        // Log the first article to see what dates we're getting\n        console.log('Sample article date:', response.data[0].date);\n      }\n      setNewsData(response.data);\n\n      // Since we're using specific endpoints, we can just use the raw results\n      setFilteredNewsData(response.data);\n    } catch (err) {\n      console.error('Error fetching news data:', err);\n      setError('Failed to load news data. Please try again later.');\n      setNewsData([]);\n      setFilteredNewsData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial data load \n  useEffect(() => {\n    // Only fetch if the symbol or data source changes, not date selections\n    // Date selection changes are handled by the dedicated effect above\n    fetchNewsData();\n  }, [symbol, dataSource]);\n\n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    console.log(\"Selection changed, filtering news with:\", {\n      selectedDate,\n      selectedDateRange\n    });\n    // No need to filter news data here, as we're using specific endpoints\n  }, [newsData, selectedDate, selectedDateRange]);\n  const handleNewsClick = newsItem => {\n    // Enhanced news item with all raw data for the popup\n    const enhancedNewsItem = {\n      ...newsItem,\n      // Add any additional formatting or data needed for the popup here\n      articleData: newsItem.raw_data ? Object.entries(newsItem.raw_data).filter(([key, value]) => typeof value !== 'object').map(([key, value]) => ({\n        key,\n        value: String(value)\n      })) : [],\n      rawDataJson: newsItem.raw_data ? JSON.stringify(newsItem.raw_data, null, 2) : '{}'\n    };\n\n    // Pass the enhanced news item to the Dashboard's handler\n    if (onNewsClick) {\n      onNewsClick(enhancedNewsItem);\n    }\n  };\n  const getSentimentLabel = sentiment => {\n    if (sentiment > 0.2) return 'Positive';\n    if (sentiment < -0.2) return 'Negative';\n    return 'Neutral';\n  };\n  const getSentimentClass = sentiment => {\n    if (sentiment > 0.2) return 'positive';\n    if (sentiment < -0.2) return 'negative';\n    return 'neutral';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(NewsFeedContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NewsFeedHeader, {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          children: \"News Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingText, {\n          children: \"Loading news for selected date...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(NewsFeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NewsFeedHeader, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"News Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this) : filteredNewsData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: 'var(--text-secondary)'\n      },\n      children: [\"No news articles found for the selected \", selectedDate ? 'date' : 'date range', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NewsItemList, {\n      children: filteredNewsData.length > 0 ? filteredNewsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this), news.display_date && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u2022 \", news.display_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }, this)) : !selectedDate && !selectedDateRange ? newsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 21\n            }, this), news.display_date && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u2022 \", news.display_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"c7DMyrYTpQrffWKGDz/B5GJ7FzE=\");\n_c15 = NewsFeed;\nexport default NewsFeed;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"NewsFeedContainer\");\n$RefreshReg$(_c2, \"NewsFeedHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NewsItemList\");\n$RefreshReg$(_c5, \"NewsItem\");\n$RefreshReg$(_c6, \"NewsContent\");\n$RefreshReg$(_c7, \"NewsTitle\");\n$RefreshReg$(_c8, \"NewsSource\");\n$RefreshReg$(_c9, \"NewsMeta\");\n$RefreshReg$(_c10, \"NewsDate\");\n$RefreshReg$(_c11, \"SentimentBadge\");\n$RefreshReg$(_c12, \"LoadingContainer\");\n$RefreshReg$(_c13, \"LoadingSpinner\");\n$RefreshReg$(_c14, \"LoadingText\");\n$RefreshReg$(_c15, \"NewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","NewsFeedContainer","div","_c","NewsFeedHeader","_c2","Title","h3","_c3","NewsItemList","_c4","NewsItem","props","highlighted","_c5","NewsContent","_c6","NewsTitle","h4","_c7","NewsSource","_c8","NewsMeta","_c9","NewsDate","_c10","SentimentBadge","sentiment","_c11","LoadingContainer","_c12","LoadingSpinner","_c13","LoadingText","_c14","NewsFeed","onNewsClick","symbol","dataSource","selectedDate","selectedDateRange","_s","newsData","setNewsData","filteredNewsData","setFilteredNewsData","loading","setLoading","error","setError","newsRefs","console","log","JSON","stringify","fetchNewsData","endpoint","dateType","rangeType","startDate","endDate","singleDate","formattedDate","Date","toISOString","split","Error","formattedStartDate","formattedEndDate","displayEndDate","formattedDisplayEndDate","days","response","get","data","length","Array","isArray","warn","date","err","handleNewsClick","newsItem","enhancedNewsItem","articleData","raw_data","Object","entries","filter","key","value","map","String","rawDataJson","getSentimentLabel","getSentimentClass","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","padding","textAlign","news","onClick","ref","el","current","id","title","source","display_date","_c15","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/NewsFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    if (props.sentiment > 0.3) return 'var(--positive-color)';\n    if (props.sentiment < -0.3) return 'var(--negative-color)';\n    return 'var(--neutral-color)';\n  }};\n  color: white;\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n`;\n\nconst LoadingSpinner = styled.div`\n  border: 8px solid rgba(0, 0, 0, 0.1);\n  border-top: 8px solid var(--accent-color);\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: spin 2s linear infinite;\n  \n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst LoadingText = styled.div`\n  font-size: 16px;\n  color: var(--text-primary);\n  margin-top: 16px;\n`;\n\nconst NewsFeed = ({ \n  onNewsClick, \n  symbol = 'GENERAL', \n  dataSource = 'live',\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  \n  // Force remounting the component when date selection changes by using a keyed component\n  useEffect(() => {\n    console.log(`Date selection changed: Date=${selectedDate}, Range=${JSON.stringify(selectedDateRange)}`);\n    \n    // Re-fetch news data whenever the date selection changes\n    fetchNewsData();\n  }, [selectedDate, selectedDateRange]);\n  \n  // Fetch news data from the API\n  const fetchNewsData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let endpoint;\n      \n      // Log dates for debugging\n      console.log('Fetch news with dates:', {\n        selectedDate: selectedDate,\n        selectedDateRange: selectedDateRange,\n        dateType: selectedDate ? typeof selectedDate : 'null',\n        rangeType: selectedDateRange ? 'object' : 'null'\n      });\n      \n      // Special case: When a date point is clicked, the Timeline component\n      // actually creates a dateRange where start and end are the same day\n      if (selectedDateRange && selectedDateRange.startDate === selectedDateRange.endDate) {\n        // This is actually a point selection, use the date endpoint\n        const singleDate = selectedDateRange.startDate;\n        \n        // Ensure date is in YYYY-MM-DD format\n        const formattedDate = typeof singleDate === 'string' ? singleDate : \n          (singleDate instanceof Date ? singleDate.toISOString().split('T')[0] : null);\n          \n        if (!formattedDate) {\n          console.error('Invalid date format for single date:', singleDate);\n          throw new Error('Invalid date format');\n        }\n          \n        endpoint = `http://localhost:8001/api/news/date?symbol=${symbol || 'GENERAL'}&date=${formattedDate}`;\n        console.log('Fetching single date (from range) news data:', endpoint);\n      }\n      // Regular point selection (unlikely to happen with current Timeline implementation)\n      else if (selectedDate) {\n        // Ensure date is in YYYY-MM-DD format\n        const formattedDate = typeof selectedDate === 'string' ? selectedDate : \n          (selectedDate instanceof Date ? selectedDate.toISOString().split('T')[0] : null);\n          \n        if (!formattedDate) {\n          console.error('Invalid date format for selected date:', selectedDate);\n          throw new Error('Invalid date format');\n        }\n        \n        // Use the specific date endpoint for point selection\n        endpoint = `http://localhost:8001/api/news/date?symbol=${symbol || 'GENERAL'}&date=${formattedDate}`;\n        console.log('Fetching single date news data from:', endpoint);\n      } \n      // Regular date range selection\n      else if (selectedDateRange) {\n        // Ensure dates are in YYYY-MM-DD format\n        const formattedStartDate = typeof selectedDateRange.startDate === 'string' ? selectedDateRange.startDate : \n          (selectedDateRange.startDate instanceof Date ? selectedDateRange.startDate.toISOString().split('T')[0] : null);\n          \n        const formattedEndDate = selectedDateRange.displayEndDate || selectedDateRange.endDate;\n        const formattedDisplayEndDate = typeof formattedEndDate === 'string' ? formattedEndDate : \n          (formattedEndDate instanceof Date ? formattedEndDate.toISOString().split('T')[0] : null);\n          \n        if (!formattedStartDate || !formattedDisplayEndDate) {\n          console.error('Invalid date format for date range:', selectedDateRange);\n          throw new Error('Invalid date range format');\n        }\n        \n        // Use the date range specific endpoint\n        endpoint = `http://localhost:8001/api/news/date-range?symbol=${symbol || 'GENERAL'}&start_date=${formattedStartDate}&end_date=${formattedDisplayEndDate}`;\n        console.log('Fetching date range news data from:', endpoint);\n      } \n      // Default case - no date selection\n      else {\n        // Use the standard news endpoint\n        const days = dataSource === 'historical' ? 365 : 30;\n        endpoint = `http://localhost:8001/api/news?symbol=${symbol || 'GENERAL'}&days=${days}`;\n        console.log('Fetching general news data from:', endpoint);\n      }\n      \n      // Clear existing data while loading\n      setNewsData([]);\n      setFilteredNewsData([]);\n      \n      const response = await axios.get(endpoint);\n      console.log('News data received:', response.data.length, 'articles');\n      \n      // Validate that we got actual articles\n      if (!Array.isArray(response.data) || response.data.length === 0) {\n        console.warn('No articles returned from API');\n      } else {\n        // Log the first article to see what dates we're getting\n        console.log('Sample article date:', response.data[0].date);\n      }\n      \n      setNewsData(response.data);\n      \n      // Since we're using specific endpoints, we can just use the raw results\n      setFilteredNewsData(response.data);\n    } catch (err) {\n      console.error('Error fetching news data:', err);\n      setError('Failed to load news data. Please try again later.');\n      setNewsData([]);\n      setFilteredNewsData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Initial data load \n  useEffect(() => {\n    // Only fetch if the symbol or data source changes, not date selections\n    // Date selection changes are handled by the dedicated effect above\n    fetchNewsData();\n  }, [symbol, dataSource]);\n  \n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    \n    console.log(\"Selection changed, filtering news with:\", { selectedDate, selectedDateRange });\n    // No need to filter news data here, as we're using specific endpoints\n  }, [newsData, selectedDate, selectedDateRange]);\n  \n  const handleNewsClick = (newsItem) => {\n    // Enhanced news item with all raw data for the popup\n    const enhancedNewsItem = {\n      ...newsItem,\n      // Add any additional formatting or data needed for the popup here\n      articleData: newsItem.raw_data ? Object.entries(newsItem.raw_data)\n        .filter(([key, value]) => typeof value !== 'object')\n        .map(([key, value]) => ({ key, value: String(value) }))\n        : [],\n      rawDataJson: newsItem.raw_data ? JSON.stringify(newsItem.raw_data, null, 2) : '{}'\n    };\n    \n    // Pass the enhanced news item to the Dashboard's handler\n    if (onNewsClick) {\n      onNewsClick(enhancedNewsItem);\n    }\n  };\n  \n  const getSentimentLabel = (sentiment) => {\n    if (sentiment > 0.2) return 'Positive';\n    if (sentiment < -0.2) return 'Negative';\n    return 'Neutral';\n  };\n  \n  const getSentimentClass = (sentiment) => {\n    if (sentiment > 0.2) return 'positive';\n    if (sentiment < -0.2) return 'negative';\n    return 'neutral';\n  };\n  \n  if (loading) {\n    return (\n      <NewsFeedContainer>\n        <NewsFeedHeader>\n          <Title>News Feed</Title>\n        </NewsFeedHeader>\n        <LoadingContainer>\n          <LoadingSpinner />\n          <LoadingText>Loading news for selected date...</LoadingText>\n        </LoadingContainer>\n      </NewsFeedContainer>\n    );\n  }\n  \n  return (\n    <NewsFeedContainer>\n      <NewsFeedHeader>\n        <Title>News Feed</Title>\n      </NewsFeedHeader>\n      \n      {error ? (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      ) : filteredNewsData.length === 0 ? (\n        <div style={{ padding: '20px', textAlign: 'center', color: 'var(--text-secondary)' }}>\n          No news articles found for the selected {selectedDate ? 'date' : 'date range'}.\n        </div>\n      ) : (\n        <NewsItemList>\n          {filteredNewsData.length > 0 ? (\n            filteredNewsData.map(news => (\n              <NewsItem \n                key={news.id} \n                sentiment={news.sentiment}\n                onClick={() => handleNewsClick(news)}\n                ref={el => newsRefs.current[news.id] = el}\n              >\n                <NewsContent>\n                  <NewsTitle>{news.title}</NewsTitle>\n                  <NewsSource>\n                    <span>{news.source}</span>\n                    {news.display_date && <span> • {news.display_date}</span>}\n                  </NewsSource>\n                </NewsContent>\n                <NewsMeta>\n                  <NewsDate>{news.date}</NewsDate>\n                  <SentimentBadge sentiment={news.sentiment}>\n                    {getSentimentLabel(news.sentiment)}\n                  </SentimentBadge>\n                </NewsMeta>\n              </NewsItem>\n            ))\n          ) : !selectedDate && !selectedDateRange ? (\n            newsData.map(news => (\n              <NewsItem \n                key={news.id} \n                sentiment={news.sentiment}\n                onClick={() => handleNewsClick(news)}\n                ref={el => newsRefs.current[news.id] = el}\n              >\n                <NewsContent>\n                  <NewsTitle>{news.title}</NewsTitle>\n                  <NewsSource>\n                    <span>{news.source}</span>\n                    {news.display_date && <span> • {news.display_date}</span>}\n                  </NewsSource>\n                </NewsContent>\n                <NewsMeta>\n                  <NewsDate>{news.date}</NewsDate>\n                  <SentimentBadge sentiment={news.sentiment}>\n                    {getSentimentLabel(news.sentiment)}\n                  </SentimentBadge>\n                </NewsMeta>\n              </NewsItem>\n            ))\n          ) : null}\n        </NewsItemList>\n      )}\n    </NewsFeedContainer>\n  );\n};\n\nexport default NewsFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}