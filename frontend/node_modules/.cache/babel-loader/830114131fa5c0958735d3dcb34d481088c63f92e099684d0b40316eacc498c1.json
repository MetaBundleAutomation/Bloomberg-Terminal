{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ResponsiveContainer, ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Scatter, ReferenceLine, ReferenceArea } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n_c = TimelineContainer;\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = TimelineHeader;\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-color);\n`;\n_c3 = Title;\nconst Controls = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n_c4 = Controls;\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n`;\n_c5 = Button;\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n`;\n_c6 = SelectionControls;\nconst SelectionButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c7 = SelectionButton;\nconst SelectionLabel = styled.span`\n  font-size: 14px;\n  margin-right: 8px;\n  color: var(--text-secondary);\n`;\n_c8 = SelectionLabel;\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 80px; /* Adjust based on your header height */\n  left: 16px;\n  right: 16px;\n  bottom: 16px;\n  pointer-events: none;\n  z-index: 10;\n`;\n\n// Mock data - this would come from your API\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n\n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  let basePrice = 100 + symbolSeed % 200; // Different starting price based on symbol\n  let trend = symbolSeed % 10 / 10; // Different trend direction based on symbol\n\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n\n    // Generate price movement influenced by the symbol and day\n    const dayInfluence = Math.sin(i * (symbolSeed % 5) / 10) * 5;\n    const randomFactor = Math.random() * 10 - 5;\n    const priceChange = (randomFactor + dayInfluence + trend) * (1 + symbolSeed % 5 / 10);\n    basePrice += priceChange;\n    const price = Math.max(50, basePrice); // Ensure price doesn't go too low\n    const volume = Math.random() * 1000000 * (1 + symbolSeed % 3 / 5);\n    const sentiment = Math.random() * 2 - 1; // -1 to 1\n\n    // Generate some news events randomly, but more likely on big price changes\n    const priceChangeThreshold = Math.abs(priceChange) > 3 ? 0.5 : 0.8;\n    const hasNews = Math.random() > priceChangeThreshold;\n    const newsCount = hasNews ? Math.floor(Math.random() * 3) + 1 : 0;\n    data.push({\n      date: date.toISOString().split('T')[0],\n      price,\n      volume,\n      sentiment,\n      newsCount,\n      news: hasNews ? {\n        id: `news-${symbol}-${i}`,\n        title: `${Math.abs(priceChange) > 3 ? 'Major' : 'Minor'} Movement in ${symbol}`,\n        sentiment: sentiment\n      } : null\n    });\n  }\n  return data;\n};\nconst Timeline = ({\n  dataSource,\n  symbol,\n  onDateSelect,\n  onDateRangeSelect\n}) => {\n  _s();\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(null);\n  const chartRef = useRef(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Get days based on selected time range\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n\n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/timeline?days=${days}&symbol=${apiSymbol}`);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to fetch data from API. Using mock data instead.');\n\n        // Fallback to mock data if API fails\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        setData(generateMockData(days, symbol || 'GENERAL'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [timeRange, dataSource, symbol]);\n\n  // Set up event listeners for drag selection\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = e => {\n      if (isDragging) {\n        e.preventDefault();\n        return false;\n      }\n    };\n    const handleMouseMove = e => {\n      if (!isDragging || !chartRef.current) return;\n\n      // Prevent text selection during drag\n      e.preventDefault();\n\n      // Get chart dimensions\n      const chartRect = chartRef.current.getBoundingClientRect();\n      const chartX = e.clientX - chartRect.left;\n\n      // Find the closest data point to the mouse position\n      if (chartRef.current.state && chartRef.current.state.xAxisMap && chartRef.current.state.xAxisMap.left) {\n        const xScale = chartRef.current.state.xAxisMap.left.scale;\n        const domain = xScale.domain();\n        const range = xScale.range();\n\n        // Calculate the position in the domain based on the mouse position\n        const domainPosition = (chartX - range[0]) / (range[1] - range[0]);\n        const dateIndex = Math.round(domainPosition * (domain.length - 1));\n        if (dateIndex >= 0 && dateIndex < domain.length) {\n          const hoverDate = domain[dateIndex];\n          setSelectionEnd(hoverDate);\n        }\n      }\n    };\n    const handleMouseUp = e => {\n      if (isDragging && selectionStart && selectionEnd) {\n        // Finalize the selection\n        const dateA = new Date(selectionStart);\n        const dateB = new Date(selectionEnd);\n        let startDate, endDate;\n        if (dateA < dateB) {\n          startDate = selectionStart;\n          endDate = selectionEnd;\n        } else {\n          startDate = selectionEnd;\n          endDate = selectionStart;\n        }\n        console.log(\"Finalizing selection:\", {\n          startDate,\n          endDate\n        });\n        if (onDateRangeSelect) {\n          onDateRangeSelect({\n            startDate,\n            endDate\n          });\n        }\n      } else if (isDragging && selectionStart) {\n        // If dragged very little, treat as a click\n        setSelectedDate(selectionStart);\n        setSelectionStart(null);\n        setSelectionEnd(null);\n        console.log(\"Treating drag as click:\", selectionStart);\n        if (onDateSelect) {\n          onDateSelect(selectionStart);\n        }\n      }\n      setIsDragging(false);\n      setDragStartX(null);\n    };\n\n    // Add event listeners\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [isDragging, selectionStart, selectionEnd, onDateSelect, onDateRangeSelect]);\n  const handleTimeRangeChange = range => {\n    setTimeRange(range);\n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  const handleChartClick = event => {\n    if (!event || !event.activeLabel) return;\n    const clickedDate = event.activeLabel;\n    console.log(\"Chart clicked:\", clickedDate, \"Mode:\", selectionMode);\n    if (selectionMode === 'point') {\n      // Simple point selection\n      setSelectedDate(clickedDate);\n      setSelectionStart(null);\n      setSelectionEnd(null);\n      if (onDateSelect) {\n        onDateSelect(clickedDate);\n      }\n      if (onDateRangeSelect) {\n        onDateRangeSelect(null);\n      }\n    } else if (selectionMode === 'range') {\n      // Start drag selection\n      setIsDragging(true);\n      setSelectionStart(clickedDate);\n      setSelectionEnd(null);\n      setSelectedDate(null);\n      if (onDateSelect) {\n        onDateSelect(null);\n      }\n    }\n  };\n  const handleSelectionModeChange = mode => {\n    setSelectionMode(mode);\n\n    // Reset selections when mode changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  const handleClearSelection = () => {\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n\n  // Get the correct start and end dates for the reference area\n  const getReferenceAreaCoordinates = () => {\n    if (!selectionStart || !selectionEnd) return null;\n    const dateA = new Date(selectionStart);\n    const dateB = new Date(selectionEnd);\n    if (dateA < dateB) {\n      return {\n        x1: selectionStart,\n        x2: selectionEnd\n      };\n    } else {\n      return {\n        x1: selectionEnd,\n        x2: selectionStart\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TimelineContainer, {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(TimelineHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Market Timeline \", symbol && `- ${symbol}`, \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1W',\n          onClick: () => handleTimeRangeChange('1W'),\n          children: \"1W\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1M',\n          onClick: () => handleTimeRangeChange('1M'),\n          children: \"1M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '3M',\n          onClick: () => handleTimeRangeChange('3M'),\n          children: \"3M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1Y',\n          onClick: () => handleTimeRangeChange('1Y'),\n          children: \"1Y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectionControls, {\n        children: [/*#__PURE__*/_jsxDEV(SelectionLabel, {\n          children: \"Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectionButton, {\n          active: selectionMode === 'point',\n          onClick: () => handleSelectionModeChange('point'),\n          children: \"Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectionButton, {\n          active: selectionMode === 'range',\n          onClick: () => handleSelectionModeChange('range'),\n          children: \"Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), (selectedDate || selectionStart) && /*#__PURE__*/_jsxDEV(SelectionButton, {\n          onClick: handleClearSelection,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 20\n        },\n        onClick: handleChartClick,\n        ref: chartRef,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"rgba(255,255,255,0.1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          scale: \"auto\",\n          tick: {\n            fill: 'var(--text-secondary)'\n          },\n          tickLine: {\n            stroke: 'var(--text-secondary)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\",\n          orientation: \"left\",\n          tick: {\n            fill: 'var(--text-secondary)'\n          },\n          tickLine: {\n            stroke: 'var(--text-secondary)'\n          },\n          label: {\n            value: 'Price ($)',\n            angle: -90,\n            position: 'insideLeft',\n            fill: 'var(--text-secondary)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\",\n          tick: {\n            fill: 'var(--text-secondary)'\n          },\n          tickLine: {\n            stroke: 'var(--text-secondary)'\n          },\n          label: {\n            value: 'Volume',\n            angle: 90,\n            position: 'insideRight',\n            fill: 'var(--text-secondary)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'var(--tooltip-background)',\n            borderColor: 'var(--border-color)',\n            color: 'var(--text-primary)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\",\n          wrapperStyle: {\n            paddingBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"volume\",\n          yAxisId: \"right\",\n          fill: \"rgba(100, 100, 255, 0.3)\",\n          name: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#8884d8\",\n          yAxisId: \"left\",\n          name: \"Price\",\n          dot: false,\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"sentiment\",\n          stroke: \"#82ca9d\",\n          yAxisId: \"left\",\n          name: \"Sentiment\",\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n          dataKey: \"newsCount\",\n          fill: \"#ff7300\",\n          yAxisId: \"left\",\n          name: \"News Events\",\n          shape: props => {\n            const {\n              cx,\n              cy\n            } = props;\n            return /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: cx,\n              cy: cy,\n              r: 5,\n              fill: \"#ff7300\",\n              stroke: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), selectedDate && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          x: selectedDate,\n          yAxisId: \"left\",\n          stroke: \"var(--accent-color)\",\n          strokeWidth: 2,\n          strokeDasharray: \"3 3\",\n          label: {\n            value: 'Selected',\n            position: 'insideTopRight',\n            fill: 'var(--accent-color)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this), selectionStart && selectionEnd && getReferenceAreaCoordinates() && /*#__PURE__*/_jsxDEV(ReferenceArea, {\n          ...getReferenceAreaCoordinates(),\n          yAxisId: \"left\",\n          stroke: \"var(--accent-color)\",\n          strokeOpacity: 0.3,\n          fill: \"var(--accent-color)\",\n          fillOpacity: 0.1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), selectionStart && isDragging && !selectionEnd && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          x: selectionStart,\n          yAxisId: \"left\",\n          stroke: \"var(--accent-color)\",\n          strokeWidth: 2,\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"c5cGlki2Sd54Qdl/F0ZioXBu3h4=\");\n_c9 = Timeline;\nexport default Timeline;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"TimelineContainer\");\n$RefreshReg$(_c2, \"TimelineHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"SelectionControls\");\n$RefreshReg$(_c7, \"SelectionButton\");\n$RefreshReg$(_c8, \"SelectionLabel\");\n$RefreshReg$(_c9, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","ResponsiveContainer","ComposedChart","Line","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Scatter","ReferenceLine","ReferenceArea","axios","jsxDEV","_jsxDEV","TimelineContainer","div","_c","TimelineHeader","_c2","Title","h3","_c3","Controls","_c4","Button","button","props","active","_c5","SelectionControls","_c6","SelectionButton","_c7","SelectionLabel","span","_c8","ChartOverlay","generateMockData","days","symbol","data","startDate","Date","setDate","getDate","symbolSeed","split","reduce","acc","char","charCodeAt","basePrice","trend","i","date","dayInfluence","Math","sin","randomFactor","random","priceChange","price","max","volume","sentiment","priceChangeThreshold","abs","hasNews","newsCount","floor","push","toISOString","news","id","title","Timeline","dataSource","onDateSelect","onDateRangeSelect","_s","timeRange","setTimeRange","setData","loading","setLoading","error","setError","selectedDate","setSelectedDate","selectionMode","setSelectionMode","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","isSelecting","setIsSelecting","isDragging","setIsDragging","dragStartX","setDragStartX","chartRef","containerRef","fetchData","apiSymbol","response","get","err","console","container","current","preventDefaultSelection","e","preventDefault","handleMouseMove","chartRect","getBoundingClientRect","chartX","clientX","left","state","xAxisMap","xScale","scale","domain","range","domainPosition","dateIndex","round","length","hoverDate","handleMouseUp","dateA","dateB","endDate","log","document","addEventListener","removeEventListener","handleTimeRangeChange","handleChartClick","event","activeLabel","clickedDate","handleSelectionModeChange","mode","handleClearSelection","getReferenceAreaCoordinates","x1","x2","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","marginBottom","width","height","margin","top","right","bottom","strokeDasharray","stroke","dataKey","tick","fill","tickLine","yAxisId","orientation","label","value","angle","position","contentStyle","backgroundColor","borderColor","verticalAlign","wrapperStyle","paddingBottom","name","type","dot","activeDot","r","shape","cx","cy","x","strokeWidth","strokeOpacity","fillOpacity","_c9","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { \n  ResponsiveContainer, \n  ComposedChart, \n  Line, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend,\n  Scatter,\n  ReferenceLine,\n  ReferenceArea\n} from 'recharts';\nimport axios from 'axios';\n\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-color);\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n`;\n\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n`;\n\nconst SelectionButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst SelectionLabel = styled.span`\n  font-size: 14px;\n  margin-right: 8px;\n  color: var(--text-secondary);\n`;\n\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 80px; /* Adjust based on your header height */\n  left: 16px;\n  right: 16px;\n  bottom: 16px;\n  pointer-events: none;\n  z-index: 10;\n`;\n\n// Mock data - this would come from your API\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n  \n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  \n  let basePrice = 100 + (symbolSeed % 200); // Different starting price based on symbol\n  let trend = (symbolSeed % 10) / 10; // Different trend direction based on symbol\n  \n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    \n    // Generate price movement influenced by the symbol and day\n    const dayInfluence = Math.sin(i * (symbolSeed % 5) / 10) * 5;\n    const randomFactor = Math.random() * 10 - 5;\n    const priceChange = (randomFactor + dayInfluence + trend) * (1 + (symbolSeed % 5) / 10);\n    \n    basePrice += priceChange;\n    \n    const price = Math.max(50, basePrice); // Ensure price doesn't go too low\n    const volume = Math.random() * 1000000 * (1 + (symbolSeed % 3) / 5);\n    const sentiment = Math.random() * 2 - 1; // -1 to 1\n    \n    // Generate some news events randomly, but more likely on big price changes\n    const priceChangeThreshold = Math.abs(priceChange) > 3 ? 0.5 : 0.8;\n    const hasNews = Math.random() > priceChangeThreshold;\n    const newsCount = hasNews ? Math.floor(Math.random() * 3) + 1 : 0;\n    \n    data.push({\n      date: date.toISOString().split('T')[0],\n      price,\n      volume,\n      sentiment,\n      newsCount,\n      news: hasNews ? {\n        id: `news-${symbol}-${i}`,\n        title: `${Math.abs(priceChange) > 3 ? 'Major' : 'Minor'} Movement in ${symbol}`,\n        sentiment: sentiment\n      } : null\n    });\n  }\n  \n  return data;\n};\n\nconst Timeline = ({ dataSource, symbol, onDateSelect, onDateRangeSelect }) => {\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(null);\n  const chartRef = useRef(null);\n  const containerRef = useRef(null);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Get days based on selected time range\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        \n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/timeline?days=${days}&symbol=${apiSymbol}`);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to fetch data from API. Using mock data instead.');\n        \n        // Fallback to mock data if API fails\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        setData(generateMockData(days, symbol || 'GENERAL'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [timeRange, dataSource, symbol]);\n  \n  // Set up event listeners for drag selection\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    \n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = (e) => {\n      if (isDragging) {\n        e.preventDefault();\n        return false;\n      }\n    };\n    \n    const handleMouseMove = (e) => {\n      if (!isDragging || !chartRef.current) return;\n      \n      // Prevent text selection during drag\n      e.preventDefault();\n      \n      // Get chart dimensions\n      const chartRect = chartRef.current.getBoundingClientRect();\n      const chartX = e.clientX - chartRect.left;\n      \n      // Find the closest data point to the mouse position\n      if (chartRef.current.state && chartRef.current.state.xAxisMap && chartRef.current.state.xAxisMap.left) {\n        const xScale = chartRef.current.state.xAxisMap.left.scale;\n        const domain = xScale.domain();\n        const range = xScale.range();\n        \n        // Calculate the position in the domain based on the mouse position\n        const domainPosition = (chartX - range[0]) / (range[1] - range[0]);\n        const dateIndex = Math.round(domainPosition * (domain.length - 1));\n        \n        if (dateIndex >= 0 && dateIndex < domain.length) {\n          const hoverDate = domain[dateIndex];\n          setSelectionEnd(hoverDate);\n        }\n      }\n    };\n    \n    const handleMouseUp = (e) => {\n      if (isDragging && selectionStart && selectionEnd) {\n        // Finalize the selection\n        const dateA = new Date(selectionStart);\n        const dateB = new Date(selectionEnd);\n        \n        let startDate, endDate;\n        \n        if (dateA < dateB) {\n          startDate = selectionStart;\n          endDate = selectionEnd;\n        } else {\n          startDate = selectionEnd;\n          endDate = selectionStart;\n        }\n        \n        console.log(\"Finalizing selection:\", { startDate, endDate });\n        \n        if (onDateRangeSelect) {\n          onDateRangeSelect({ startDate, endDate });\n        }\n      } else if (isDragging && selectionStart) {\n        // If dragged very little, treat as a click\n        setSelectedDate(selectionStart);\n        setSelectionStart(null);\n        setSelectionEnd(null);\n        \n        console.log(\"Treating drag as click:\", selectionStart);\n        \n        if (onDateSelect) {\n          onDateSelect(selectionStart);\n        }\n      }\n      \n      setIsDragging(false);\n      setDragStartX(null);\n    };\n    \n    // Add event listeners\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    \n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [isDragging, selectionStart, selectionEnd, onDateSelect, onDateRangeSelect]);\n  \n  const handleTimeRangeChange = (range) => {\n    setTimeRange(range);\n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  \n  const handleChartClick = (event) => {\n    if (!event || !event.activeLabel) return;\n    \n    const clickedDate = event.activeLabel;\n    console.log(\"Chart clicked:\", clickedDate, \"Mode:\", selectionMode);\n    \n    if (selectionMode === 'point') {\n      // Simple point selection\n      setSelectedDate(clickedDate);\n      setSelectionStart(null);\n      setSelectionEnd(null);\n      \n      if (onDateSelect) {\n        onDateSelect(clickedDate);\n      }\n      \n      if (onDateRangeSelect) {\n        onDateRangeSelect(null);\n      }\n    } else if (selectionMode === 'range') {\n      // Start drag selection\n      setIsDragging(true);\n      setSelectionStart(clickedDate);\n      setSelectionEnd(null);\n      setSelectedDate(null);\n      \n      if (onDateSelect) {\n        onDateSelect(null);\n      }\n    }\n  };\n  \n  const handleSelectionModeChange = (mode) => {\n    setSelectionMode(mode);\n    \n    // Reset selections when mode changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  \n  const handleClearSelection = () => {\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  \n  // Get the correct start and end dates for the reference area\n  const getReferenceAreaCoordinates = () => {\n    if (!selectionStart || !selectionEnd) return null;\n    \n    const dateA = new Date(selectionStart);\n    const dateB = new Date(selectionEnd);\n    \n    if (dateA < dateB) {\n      return { x1: selectionStart, x2: selectionEnd };\n    } else {\n      return { x1: selectionEnd, x2: selectionStart };\n    }\n  };\n  \n  return (\n    <TimelineContainer ref={containerRef}>\n      <TimelineHeader>\n        <Title>Market Timeline {symbol && `- ${symbol}`} {loading && '(Loading...)'}</Title>\n        <Controls>\n          <Button active={timeRange === '1W'} onClick={() => handleTimeRangeChange('1W')}>1W</Button>\n          <Button active={timeRange === '1M'} onClick={() => handleTimeRangeChange('1M')}>1M</Button>\n          <Button active={timeRange === '3M'} onClick={() => handleTimeRangeChange('3M')}>3M</Button>\n          <Button active={timeRange === '1Y'} onClick={() => handleTimeRangeChange('1Y')}>1Y</Button>\n        </Controls>\n        <SelectionControls>\n          <SelectionLabel>Selection:</SelectionLabel>\n          <SelectionButton \n            active={selectionMode === 'point'} \n            onClick={() => handleSelectionModeChange('point')}\n          >\n            Point\n          </SelectionButton>\n          <SelectionButton \n            active={selectionMode === 'range'} \n            onClick={() => handleSelectionModeChange('range')}\n          >\n            Range\n          </SelectionButton>\n          {(selectedDate || selectionStart) && (\n            <SelectionButton onClick={handleClearSelection}>\n              Clear\n            </SelectionButton>\n          )}\n        </SelectionControls>\n      </TimelineHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ComposedChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n          onClick={handleChartClick}\n          ref={chartRef}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\n          <XAxis \n            dataKey=\"date\" \n            scale=\"auto\" \n            tick={{ fill: 'var(--text-secondary)' }}\n            tickLine={{ stroke: 'var(--text-secondary)' }}\n          />\n          <YAxis \n            yAxisId=\"left\"\n            orientation=\"left\"\n            tick={{ fill: 'var(--text-secondary)' }}\n            tickLine={{ stroke: 'var(--text-secondary)' }}\n            label={{ \n              value: 'Price ($)', \n              angle: -90, \n              position: 'insideLeft',\n              fill: 'var(--text-secondary)'\n            }}\n          />\n          <YAxis \n            yAxisId=\"right\"\n            orientation=\"right\"\n            tick={{ fill: 'var(--text-secondary)' }}\n            tickLine={{ stroke: 'var(--text-secondary)' }}\n            label={{ \n              value: 'Volume', \n              angle: 90, \n              position: 'insideRight',\n              fill: 'var(--text-secondary)'\n            }}\n          />\n          <Tooltip \n            contentStyle={{ \n              backgroundColor: 'var(--tooltip-background)',\n              borderColor: 'var(--border-color)',\n              color: 'var(--text-primary)'\n            }}\n          />\n          <Legend \n            verticalAlign=\"top\" \n            wrapperStyle={{ paddingBottom: 10 }}\n          />\n          <Bar \n            dataKey=\"volume\" \n            yAxisId=\"right\" \n            fill=\"rgba(100, 100, 255, 0.3)\" \n            name=\"Volume\"\n          />\n          <Line \n            type=\"monotone\" \n            dataKey=\"price\" \n            stroke=\"#8884d8\" \n            yAxisId=\"left\" \n            name=\"Price\"\n            dot={false}\n            activeDot={{ r: 8 }}\n          />\n          <Line \n            type=\"monotone\" \n            dataKey=\"sentiment\" \n            stroke=\"#82ca9d\" \n            yAxisId=\"left\" \n            name=\"Sentiment\"\n            dot={false}\n          />\n          <Scatter \n            dataKey=\"newsCount\" \n            fill=\"#ff7300\" \n            yAxisId=\"left\" \n            name=\"News Events\"\n            shape={(props) => {\n              const { cx, cy } = props;\n              return (\n                <circle \n                  cx={cx} \n                  cy={cy} \n                  r={5} \n                  fill=\"#ff7300\" \n                  stroke=\"none\"\n                />\n              );\n            }}\n          />\n          \n          {/* Reference line for selected date */}\n          {selectedDate && (\n            <ReferenceLine \n              x={selectedDate} \n              yAxisId=\"left\"\n              stroke=\"var(--accent-color)\" \n              strokeWidth={2}\n              strokeDasharray=\"3 3\"\n              label={{ \n                value: 'Selected', \n                position: 'insideTopRight', \n                fill: 'var(--accent-color)'\n              }}\n            />\n          )}\n          \n          {/* Reference area for selected range */}\n          {selectionStart && selectionEnd && getReferenceAreaCoordinates() && (\n            <ReferenceArea \n              {...getReferenceAreaCoordinates()}\n              yAxisId=\"left\"\n              stroke=\"var(--accent-color)\"\n              strokeOpacity={0.3}\n              fill=\"var(--accent-color)\"\n              fillOpacity={0.1}\n            />\n          )}\n          \n          {/* Reference line for selection in progress */}\n          {selectionStart && isDragging && !selectionEnd && (\n            <ReferenceLine \n              x={selectionStart} \n              yAxisId=\"left\"\n              stroke=\"var(--accent-color)\" \n              strokeWidth={2}\n              strokeDasharray=\"3 3\"\n            />\n          )}\n        </ComposedChart>\n      </ResponsiveContainer>\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}