{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ResponsiveContainer, ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Scatter, ReferenceLine, ReferenceArea } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n_c = TimelineContainer;\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = TimelineHeader;\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-color);\n`;\n_c3 = Title;\nconst Controls = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n_c4 = Controls;\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n`;\n_c5 = Button;\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n`;\n_c6 = SelectionControls;\nconst SelectionButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c7 = SelectionButton;\nconst SelectionLabel = styled.span`\n  font-size: 14px;\n  margin-right: 8px;\n  color: var(--text-secondary);\n`;\n_c8 = SelectionLabel;\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: calc(100% - 60px); /* Subtract header height */\n  position: relative;\n`;\n\n// Mock data - this would come from your API\n_c9 = ChartContainer;\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n\n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  let basePrice = 100 + symbolSeed % 200; // Different starting price based on symbol\n  let trend = symbolSeed % 10 / 10; // Different trend direction based on symbol\n\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n\n    // Generate price movement influenced by the symbol and day\n    const dayInfluence = Math.sin(i * (symbolSeed % 5) / 10) * 5;\n    const randomFactor = Math.random() * 10 - 5;\n    const priceChange = (randomFactor + dayInfluence + trend) * (1 + symbolSeed % 5 / 10);\n    basePrice += priceChange;\n    const price = Math.max(50, basePrice); // Ensure price doesn't go too low\n    const volume = Math.random() * 1000000 * (1 + symbolSeed % 3 / 5);\n    const sentiment = Math.random() * 2 - 1; // -1 to 1\n\n    // Generate some news events randomly, but more likely on big price changes\n    const priceChangeThreshold = Math.abs(priceChange) > 3 ? 0.5 : 0.8;\n    const hasNews = Math.random() > priceChangeThreshold;\n    const newsCount = hasNews ? Math.floor(Math.random() * 3) + 1 : 0;\n    data.push({\n      date: date.toISOString().split('T')[0],\n      price,\n      volume,\n      sentiment,\n      newsCount,\n      news: hasNews ? {\n        id: `news-${symbol}-${i}`,\n        title: `${Math.abs(priceChange) > 3 ? 'Major' : 'Minor'} Movement in ${symbol}`,\n        sentiment: sentiment\n      } : null\n    });\n  }\n  return data;\n};\nconst Timeline = ({\n  dataSource,\n  symbol,\n  onDateSelect,\n  onDateRangeSelect\n}) => {\n  _s();\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(null);\n  const [selectionComplete, setSelectionComplete] = useState(false);\n  const [processingClick, setProcessingClick] = useState(false); // New state to track click processing\n  const chartRef = useRef(null);\n  const containerRef = useRef(null);\n  const chartContainerRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Get days based on selected time range\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n\n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/timeline?days=${days}&symbol=${apiSymbol}`);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to fetch data from API. Using mock data instead.');\n\n        // Fallback to mock data if API fails\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        setData(generateMockData(days, symbol || 'GENERAL'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [timeRange, dataSource, symbol]);\n\n  // Set up event listeners for drag selection\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = e => {\n      if (isDragging) {\n        e.preventDefault();\n        return false;\n      }\n    };\n    const handleMouseMove = e => {\n      // Only update during active dragging and before selection is complete\n      if (!isDragging || selectionComplete || !chartContainerRef.current) return;\n\n      // Prevent text selection during drag\n      e.preventDefault();\n      try {\n        // Get chart dimensions\n        const chartRect = chartContainerRef.current.getBoundingClientRect();\n        const chartX = e.clientX - chartRect.left;\n        const chartWidth = chartRect.width;\n\n        // Calculate position as percentage of chart width\n        const positionPercent = Math.max(0, Math.min(1, chartX / chartWidth));\n\n        // Find the closest data point to the mouse position\n        if (data && data.length > 0) {\n          const dateIndex = Math.floor(positionPercent * data.length);\n          const clampedIndex = Math.max(0, Math.min(data.length - 1, dateIndex));\n          const hoverDate = data[clampedIndex].date;\n          setSelectionEnd(hoverDate);\n        }\n      } catch (err) {\n        console.error(\"Error during drag selection:\", err);\n      }\n    };\n    const handleMouseUp = e => {\n      // Only process if we're in the middle of dragging\n      if (!isDragging) return;\n      if (selectionStart && !selectionComplete) {\n        // If we have a selection end point, finalize the selection\n        if (selectionEnd) {\n          // Finalize the selection\n          const dateA = new Date(selectionStart);\n          const dateB = new Date(selectionEnd);\n          let startDate, endDate;\n          if (dateA < dateB) {\n            startDate = selectionStart;\n            endDate = selectionEnd;\n          } else {\n            startDate = selectionEnd;\n            endDate = selectionStart;\n          }\n          console.log(\"Finalizing selection on mouse up:\", {\n            startDate,\n            endDate\n          });\n          if (onDateRangeSelect) {\n            onDateRangeSelect({\n              startDate,\n              endDate\n            });\n          }\n\n          // Mark selection as complete to prevent further updates\n          setSelectionComplete(true);\n        } else {\n          // If dragged very little and no end point, treat as a click\n          setSelectedDate(selectionStart);\n          setSelectionStart(null);\n          console.log(\"Treating drag as click:\", selectionStart);\n          if (onDateSelect) {\n            onDateSelect(selectionStart);\n          }\n        }\n      }\n\n      // Always stop dragging on mouse up\n      setIsDragging(false);\n      setDragStartX(null);\n    };\n\n    // Add event listeners\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [isDragging, selectionStart, selectionEnd, onDateSelect, onDateRangeSelect, data, selectionComplete]);\n  const handleTimeRangeChange = range => {\n    setTimeRange(range);\n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setSelectionComplete(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  const handleChartClick = event => {\n    if (!event || !event.activeLabel) return;\n\n    // Prevent multiple rapid clicks from being processed\n    if (processingClick) return;\n    setProcessingClick(true);\n    const clickedDate = event.activeLabel;\n    console.log(\"Chart clicked:\", clickedDate, \"Mode:\", selectionMode, \"isSelecting:\", isSelecting, \"selectionComplete:\", selectionComplete);\n    if (selectionMode === 'point') {\n      // Simple point selection\n      setSelectedDate(clickedDate);\n      setSelectionStart(null);\n      setSelectionEnd(null);\n      setSelectionComplete(false);\n      setIsSelecting(false);\n      if (onDateSelect) {\n        onDateSelect(clickedDate);\n      }\n      if (onDateRangeSelect) {\n        onDateRangeSelect(null);\n      }\n    } else if (selectionMode === 'range') {\n      // If we're already selecting (have a start point) and not complete\n      if (selectionStart && !selectionComplete) {\n        // This is the second click - set the end point\n        setSelectionEnd(clickedDate);\n        setSelectionComplete(true);\n        setIsDragging(false);\n\n        // Calculate the proper start and end dates\n        const dateA = new Date(selectionStart);\n        const dateB = new Date(clickedDate);\n        let startDate, endDate;\n        if (dateA < dateB) {\n          startDate = selectionStart;\n          endDate = clickedDate;\n        } else {\n          startDate = clickedDate;\n          endDate = selectionStart;\n        }\n        console.log(\"Finalizing selection on second click:\", {\n          startDate,\n          endDate\n        });\n        if (onDateRangeSelect) {\n          onDateRangeSelect({\n            startDate,\n            endDate\n          });\n        }\n      }\n      // If we have a complete selection or no selection, start a new one\n      else {\n        // Start a new selection\n        setSelectionStart(clickedDate);\n        setSelectionEnd(null);\n        setSelectedDate(null);\n        setSelectionComplete(false);\n        setIsDragging(true);\n        setIsSelecting(true);\n        console.log(\"Starting new selection:\", clickedDate);\n        if (onDateSelect) {\n          onDateSelect(null);\n        }\n        if (onDateRangeSelect) {\n          onDateRangeSelect(null);\n        }\n      }\n    }\n\n    // Reset the processing flag after a short delay to prevent multiple rapid clicks\n    setTimeout(() => {\n      setProcessingClick(false);\n    }, 100);\n  };\n  const handleSelectionModeChange = mode => {\n    setSelectionMode(mode);\n\n    // Reset selections when mode changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    setSelectionComplete(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  const handleClearSelection = () => {\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    setSelectionComplete(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n\n  // Get the correct start and end dates for the reference area\n  const getReferenceAreaCoordinates = () => {\n    if (!selectionStart || !selectionEnd) return null;\n    const dateA = new Date(selectionStart);\n    const dateB = new Date(selectionEnd);\n    if (dateA < dateB) {\n      return {\n        x1: selectionStart,\n        x2: selectionEnd\n      };\n    } else {\n      return {\n        x1: selectionEnd,\n        x2: selectionStart\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TimelineContainer, {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(TimelineHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Market Timeline \", symbol && `- ${symbol}`, \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1W',\n          onClick: () => handleTimeRangeChange('1W'),\n          children: \"1W\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1M',\n          onClick: () => handleTimeRangeChange('1M'),\n          children: \"1M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '3M',\n          onClick: () => handleTimeRangeChange('3M'),\n          children: \"3M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1Y',\n          onClick: () => handleTimeRangeChange('1Y'),\n          children: \"1Y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectionControls, {\n        children: [/*#__PURE__*/_jsxDEV(SelectionLabel, {\n          children: \"Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectionButton, {\n          active: selectionMode === 'point',\n          onClick: () => handleSelectionModeChange('point'),\n          children: \"Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectionButton, {\n          active: selectionMode === 'range',\n          onClick: () => handleSelectionModeChange('range'),\n          children: \"Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), (selectedDate || selectionStart) && /*#__PURE__*/_jsxDEV(SelectionButton, {\n          onClick: handleClearSelection,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n      ref: chartContainerRef,\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n          data: data,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          onClick: handleChartClick,\n          ref: chartRef,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"rgba(255,255,255,0.1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            scale: \"auto\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"left\",\n            orientation: \"left\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            },\n            label: {\n              value: 'Price ($)',\n              angle: -90,\n              position: 'insideLeft',\n              fill: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"right\",\n            orientation: \"right\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            },\n            label: {\n              value: 'Volume',\n              angle: 90,\n              position: 'insideRight',\n              fill: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: 'var(--tooltip-background)',\n              borderColor: 'var(--border-color)',\n              color: 'var(--text-primary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            wrapperStyle: {\n              paddingBottom: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"volume\",\n            yAxisId: \"right\",\n            fill: \"rgba(100, 100, 255, 0.3)\",\n            name: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#8884d8\",\n            yAxisId: \"left\",\n            name: \"Price\",\n            dot: false,\n            activeDot: {\n              r: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"sentiment\",\n            stroke: \"#82ca9d\",\n            yAxisId: \"left\",\n            name: \"Sentiment\",\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            dataKey: \"newsCount\",\n            fill: \"#ff7300\",\n            yAxisId: \"left\",\n            name: \"News Events\",\n            shape: props => {\n              const {\n                cx,\n                cy\n              } = props;\n              return /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: cx,\n                cy: cy,\n                r: 5,\n                fill: \"#ff7300\",\n                stroke: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), selectedDate && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n            x: selectedDate,\n            yAxisId: \"left\",\n            stroke: \"var(--accent-color)\",\n            strokeWidth: 2,\n            strokeDasharray: \"3 3\",\n            label: {\n              value: 'Selected',\n              position: 'insideTopRight',\n              fill: 'var(--accent-color)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), selectionStart && selectionEnd && getReferenceAreaCoordinates() && /*#__PURE__*/_jsxDEV(ReferenceArea, {\n            ...getReferenceAreaCoordinates(),\n            yAxisId: \"left\",\n            stroke: \"var(--accent-color)\",\n            strokeOpacity: 0.3,\n            fill: \"var(--accent-color)\",\n            fillOpacity: 0.1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this), selectionStart && isDragging && !selectionEnd && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n            x: selectionStart,\n            yAxisId: \"left\",\n            stroke: \"var(--accent-color)\",\n            strokeWidth: 2,\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"Bi+o42kox1/jG/rgxqhgkIbDVHY=\");\n_c10 = Timeline;\nexport default Timeline;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"TimelineContainer\");\n$RefreshReg$(_c2, \"TimelineHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"SelectionControls\");\n$RefreshReg$(_c7, \"SelectionButton\");\n$RefreshReg$(_c8, \"SelectionLabel\");\n$RefreshReg$(_c9, \"ChartContainer\");\n$RefreshReg$(_c10, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","ResponsiveContainer","ComposedChart","Line","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Scatter","ReferenceLine","ReferenceArea","axios","jsxDEV","_jsxDEV","TimelineContainer","div","_c","TimelineHeader","_c2","Title","h3","_c3","Controls","_c4","Button","button","props","active","_c5","SelectionControls","_c6","SelectionButton","_c7","SelectionLabel","span","_c8","ChartContainer","_c9","generateMockData","days","symbol","data","startDate","Date","setDate","getDate","symbolSeed","split","reduce","acc","char","charCodeAt","basePrice","trend","i","date","dayInfluence","Math","sin","randomFactor","random","priceChange","price","max","volume","sentiment","priceChangeThreshold","abs","hasNews","newsCount","floor","push","toISOString","news","id","title","Timeline","dataSource","onDateSelect","onDateRangeSelect","_s","timeRange","setTimeRange","setData","loading","setLoading","error","setError","selectedDate","setSelectedDate","selectionMode","setSelectionMode","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","isSelecting","setIsSelecting","isDragging","setIsDragging","dragStartX","setDragStartX","selectionComplete","setSelectionComplete","processingClick","setProcessingClick","chartRef","containerRef","chartContainerRef","fetchData","apiSymbol","response","get","err","console","container","current","preventDefaultSelection","e","preventDefault","handleMouseMove","chartRect","getBoundingClientRect","chartX","clientX","left","chartWidth","width","positionPercent","min","length","dateIndex","clampedIndex","hoverDate","handleMouseUp","dateA","dateB","endDate","log","document","addEventListener","removeEventListener","handleTimeRangeChange","range","handleChartClick","event","activeLabel","clickedDate","setTimeout","handleSelectionModeChange","mode","handleClearSelection","getReferenceAreaCoordinates","x1","x2","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","marginBottom","height","margin","top","right","bottom","strokeDasharray","stroke","dataKey","scale","tick","fill","tickLine","yAxisId","orientation","label","value","angle","position","contentStyle","backgroundColor","borderColor","verticalAlign","wrapperStyle","paddingBottom","name","type","dot","activeDot","r","shape","cx","cy","x","strokeWidth","strokeOpacity","fillOpacity","_c10","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { \n  ResponsiveContainer, \n  ComposedChart, \n  Line, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend,\n  Scatter,\n  ReferenceLine,\n  ReferenceArea\n} from 'recharts';\nimport axios from 'axios';\n\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-color);\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n`;\n\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n`;\n\nconst SelectionButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst SelectionLabel = styled.span`\n  font-size: 14px;\n  margin-right: 8px;\n  color: var(--text-secondary);\n`;\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: calc(100% - 60px); /* Subtract header height */\n  position: relative;\n`;\n\n// Mock data - this would come from your API\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n  \n  // Seed for pseudo-random but consistent data for each symbol\n  const symbolSeed = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  \n  let basePrice = 100 + (symbolSeed % 200); // Different starting price based on symbol\n  let trend = (symbolSeed % 10) / 10; // Different trend direction based on symbol\n  \n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    \n    // Generate price movement influenced by the symbol and day\n    const dayInfluence = Math.sin(i * (symbolSeed % 5) / 10) * 5;\n    const randomFactor = Math.random() * 10 - 5;\n    const priceChange = (randomFactor + dayInfluence + trend) * (1 + (symbolSeed % 5) / 10);\n    \n    basePrice += priceChange;\n    \n    const price = Math.max(50, basePrice); // Ensure price doesn't go too low\n    const volume = Math.random() * 1000000 * (1 + (symbolSeed % 3) / 5);\n    const sentiment = Math.random() * 2 - 1; // -1 to 1\n    \n    // Generate some news events randomly, but more likely on big price changes\n    const priceChangeThreshold = Math.abs(priceChange) > 3 ? 0.5 : 0.8;\n    const hasNews = Math.random() > priceChangeThreshold;\n    const newsCount = hasNews ? Math.floor(Math.random() * 3) + 1 : 0;\n    \n    data.push({\n      date: date.toISOString().split('T')[0],\n      price,\n      volume,\n      sentiment,\n      newsCount,\n      news: hasNews ? {\n        id: `news-${symbol}-${i}`,\n        title: `${Math.abs(priceChange) > 3 ? 'Major' : 'Minor'} Movement in ${symbol}`,\n        sentiment: sentiment\n      } : null\n    });\n  }\n  \n  return data;\n};\n\nconst Timeline = ({ dataSource, symbol, onDateSelect, onDateRangeSelect }) => {\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(null);\n  const [selectionComplete, setSelectionComplete] = useState(false);\n  const [processingClick, setProcessingClick] = useState(false); // New state to track click processing\n  const chartRef = useRef(null);\n  const containerRef = useRef(null);\n  const chartContainerRef = useRef(null);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Get days based on selected time range\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        \n        // Try to fetch from API first\n        const apiSymbol = symbol || 'GENERAL';\n        const response = await axios.get(`http://localhost:8001/api/timeline?days=${days}&symbol=${apiSymbol}`);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to fetch data from API. Using mock data instead.');\n        \n        // Fallback to mock data if API fails\n        const days = timeRange === '1W' ? 7 : timeRange === '1M' ? 30 : timeRange === '3M' ? 90 : 365;\n        setData(generateMockData(days, symbol || 'GENERAL'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [timeRange, dataSource, symbol]);\n  \n  // Set up event listeners for drag selection\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    \n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = (e) => {\n      if (isDragging) {\n        e.preventDefault();\n        return false;\n      }\n    };\n    \n    const handleMouseMove = (e) => {\n      // Only update during active dragging and before selection is complete\n      if (!isDragging || selectionComplete || !chartContainerRef.current) return;\n      \n      // Prevent text selection during drag\n      e.preventDefault();\n      \n      try {\n        // Get chart dimensions\n        const chartRect = chartContainerRef.current.getBoundingClientRect();\n        const chartX = e.clientX - chartRect.left;\n        const chartWidth = chartRect.width;\n        \n        // Calculate position as percentage of chart width\n        const positionPercent = Math.max(0, Math.min(1, chartX / chartWidth));\n        \n        // Find the closest data point to the mouse position\n        if (data && data.length > 0) {\n          const dateIndex = Math.floor(positionPercent * data.length);\n          const clampedIndex = Math.max(0, Math.min(data.length - 1, dateIndex));\n          const hoverDate = data[clampedIndex].date;\n          setSelectionEnd(hoverDate);\n        }\n      } catch (err) {\n        console.error(\"Error during drag selection:\", err);\n      }\n    };\n    \n    const handleMouseUp = (e) => {\n      // Only process if we're in the middle of dragging\n      if (!isDragging) return;\n      \n      if (selectionStart && !selectionComplete) {\n        // If we have a selection end point, finalize the selection\n        if (selectionEnd) {\n          // Finalize the selection\n          const dateA = new Date(selectionStart);\n          const dateB = new Date(selectionEnd);\n          \n          let startDate, endDate;\n          \n          if (dateA < dateB) {\n            startDate = selectionStart;\n            endDate = selectionEnd;\n          } else {\n            startDate = selectionEnd;\n            endDate = selectionStart;\n          }\n          \n          console.log(\"Finalizing selection on mouse up:\", { startDate, endDate });\n          \n          if (onDateRangeSelect) {\n            onDateRangeSelect({ startDate, endDate });\n          }\n          \n          // Mark selection as complete to prevent further updates\n          setSelectionComplete(true);\n        } else {\n          // If dragged very little and no end point, treat as a click\n          setSelectedDate(selectionStart);\n          setSelectionStart(null);\n          \n          console.log(\"Treating drag as click:\", selectionStart);\n          \n          if (onDateSelect) {\n            onDateSelect(selectionStart);\n          }\n        }\n      }\n      \n      // Always stop dragging on mouse up\n      setIsDragging(false);\n      setDragStartX(null);\n    };\n    \n    // Add event listeners\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    \n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [isDragging, selectionStart, selectionEnd, onDateSelect, onDateRangeSelect, data, selectionComplete]);\n  \n  const handleTimeRangeChange = (range) => {\n    setTimeRange(range);\n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setSelectionComplete(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  \n  const handleChartClick = (event) => {\n    if (!event || !event.activeLabel) return;\n    \n    // Prevent multiple rapid clicks from being processed\n    if (processingClick) return;\n    setProcessingClick(true);\n    \n    const clickedDate = event.activeLabel;\n    console.log(\"Chart clicked:\", clickedDate, \"Mode:\", selectionMode, \"isSelecting:\", isSelecting, \"selectionComplete:\", selectionComplete);\n    \n    if (selectionMode === 'point') {\n      // Simple point selection\n      setSelectedDate(clickedDate);\n      setSelectionStart(null);\n      setSelectionEnd(null);\n      setSelectionComplete(false);\n      setIsSelecting(false);\n      \n      if (onDateSelect) {\n        onDateSelect(clickedDate);\n      }\n      \n      if (onDateRangeSelect) {\n        onDateRangeSelect(null);\n      }\n    } else if (selectionMode === 'range') {\n      // If we're already selecting (have a start point) and not complete\n      if (selectionStart && !selectionComplete) {\n        // This is the second click - set the end point\n        setSelectionEnd(clickedDate);\n        setSelectionComplete(true);\n        setIsDragging(false);\n        \n        // Calculate the proper start and end dates\n        const dateA = new Date(selectionStart);\n        const dateB = new Date(clickedDate);\n        \n        let startDate, endDate;\n        \n        if (dateA < dateB) {\n          startDate = selectionStart;\n          endDate = clickedDate;\n        } else {\n          startDate = clickedDate;\n          endDate = selectionStart;\n        }\n        \n        console.log(\"Finalizing selection on second click:\", { startDate, endDate });\n        \n        if (onDateRangeSelect) {\n          onDateRangeSelect({ startDate, endDate });\n        }\n      } \n      // If we have a complete selection or no selection, start a new one\n      else {\n        // Start a new selection\n        setSelectionStart(clickedDate);\n        setSelectionEnd(null);\n        setSelectedDate(null);\n        setSelectionComplete(false);\n        setIsDragging(true);\n        setIsSelecting(true);\n        \n        console.log(\"Starting new selection:\", clickedDate);\n        \n        if (onDateSelect) {\n          onDateSelect(null);\n        }\n        \n        if (onDateRangeSelect) {\n          onDateRangeSelect(null);\n        }\n      }\n    }\n    \n    // Reset the processing flag after a short delay to prevent multiple rapid clicks\n    setTimeout(() => {\n      setProcessingClick(false);\n    }, 100);\n  };\n  \n  const handleSelectionModeChange = (mode) => {\n    setSelectionMode(mode);\n    \n    // Reset selections when mode changes\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    setSelectionComplete(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  \n  const handleClearSelection = () => {\n    setSelectedDate(null);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setIsSelecting(false);\n    setSelectionComplete(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  };\n  \n  // Get the correct start and end dates for the reference area\n  const getReferenceAreaCoordinates = () => {\n    if (!selectionStart || !selectionEnd) return null;\n    \n    const dateA = new Date(selectionStart);\n    const dateB = new Date(selectionEnd);\n    \n    if (dateA < dateB) {\n      return { x1: selectionStart, x2: selectionEnd };\n    } else {\n      return { x1: selectionEnd, x2: selectionStart };\n    }\n  };\n  \n  return (\n    <TimelineContainer ref={containerRef}>\n      <TimelineHeader>\n        <Title>Market Timeline {symbol && `- ${symbol}`} {loading && '(Loading...)'}</Title>\n        <Controls>\n          <Button active={timeRange === '1W'} onClick={() => handleTimeRangeChange('1W')}>1W</Button>\n          <Button active={timeRange === '1M'} onClick={() => handleTimeRangeChange('1M')}>1M</Button>\n          <Button active={timeRange === '3M'} onClick={() => handleTimeRangeChange('3M')}>3M</Button>\n          <Button active={timeRange === '1Y'} onClick={() => handleTimeRangeChange('1Y')}>1Y</Button>\n        </Controls>\n        <SelectionControls>\n          <SelectionLabel>Selection:</SelectionLabel>\n          <SelectionButton \n            active={selectionMode === 'point'} \n            onClick={() => handleSelectionModeChange('point')}\n          >\n            Point\n          </SelectionButton>\n          <SelectionButton \n            active={selectionMode === 'range'} \n            onClick={() => handleSelectionModeChange('range')}\n          >\n            Range\n          </SelectionButton>\n          {(selectedDate || selectionStart) && (\n            <SelectionButton onClick={handleClearSelection}>\n              Clear\n            </SelectionButton>\n          )}\n        </SelectionControls>\n      </TimelineHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      <ChartContainer ref={chartContainerRef}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ComposedChart\n            data={data}\n            margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n            onClick={handleChartClick}\n            ref={chartRef}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\n            <XAxis \n              dataKey=\"date\" \n              scale=\"auto\" \n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n            />\n            <YAxis \n              yAxisId=\"left\"\n              orientation=\"left\"\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Price ($)', \n                angle: -90, \n                position: 'insideLeft',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <YAxis \n              yAxisId=\"right\"\n              orientation=\"right\"\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Volume', \n                angle: 90, \n                position: 'insideRight',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <Tooltip \n              contentStyle={{ \n                backgroundColor: 'var(--tooltip-background)',\n                borderColor: 'var(--border-color)',\n                color: 'var(--text-primary)'\n              }}\n            />\n            <Legend \n              verticalAlign=\"top\" \n              wrapperStyle={{ paddingBottom: 10 }}\n            />\n            <Bar \n              dataKey=\"volume\" \n              yAxisId=\"right\" \n              fill=\"rgba(100, 100, 255, 0.3)\" \n              name=\"Volume\"\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"price\" \n              stroke=\"#8884d8\" \n              yAxisId=\"left\" \n              name=\"Price\"\n              dot={false}\n              activeDot={{ r: 8 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"sentiment\" \n              stroke=\"#82ca9d\" \n              yAxisId=\"left\" \n              name=\"Sentiment\"\n              dot={false}\n            />\n            <Scatter \n              dataKey=\"newsCount\" \n              fill=\"#ff7300\" \n              yAxisId=\"left\" \n              name=\"News Events\"\n              shape={(props) => {\n                const { cx, cy } = props;\n                return (\n                  <circle \n                    cx={cx} \n                    cy={cy} \n                    r={5} \n                    fill=\"#ff7300\" \n                    stroke=\"none\"\n                  />\n                );\n              }}\n            />\n            \n            {/* Reference line for selected date */}\n            {selectedDate && (\n              <ReferenceLine \n                x={selectedDate} \n                yAxisId=\"left\"\n                stroke=\"var(--accent-color)\" \n                strokeWidth={2}\n                strokeDasharray=\"3 3\"\n                label={{ \n                  value: 'Selected', \n                  position: 'insideTopRight', \n                  fill: 'var(--accent-color)'\n                }}\n              />\n            )}\n            \n            {/* Reference area for selected range */}\n            {selectionStart && selectionEnd && getReferenceAreaCoordinates() && (\n              <ReferenceArea \n                {...getReferenceAreaCoordinates()}\n                yAxisId=\"left\"\n                stroke=\"var(--accent-color)\"\n                strokeOpacity={0.3}\n                fill=\"var(--accent-color)\"\n                fillOpacity={0.1}\n              />\n            )}\n            \n            {/* Reference line for selection in progress */}\n            {selectionStart && isDragging && !selectionEnd && (\n              <ReferenceLine \n                x={selectionStart} \n                yAxisId=\"left\"\n                stroke=\"var(--accent-color)\" \n                strokeWidth={2}\n                strokeDasharray=\"3 3\"\n              />\n            )}\n          </ComposedChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}