{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\NewsFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n_c = NewsFeedContainer;\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = NewsFeedHeader;\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n_c4 = NewsItemList;\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c5 = NewsItem;\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n_c6 = NewsContent;\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n_c7 = NewsTitle;\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c8 = NewsSource;\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n_c9 = NewsMeta;\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n_c10 = NewsDate;\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n  if (props.sentiment > 0.3) return 'var(--positive-color)';\n  if (props.sentiment < -0.3) return 'var(--negative-color)';\n  return 'var(--neutral-color)';\n}};\n  color: white;\n`;\n_c11 = SentimentBadge;\nconst NewsFeed = ({\n  onNewsClick,\n  symbol = 'GENERAL',\n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n\n  // Fetch news data from the API\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Use the correct API endpoint format from the backend\n        const endpoint = `http://localhost:8001/api/news?symbol=${symbol || 'GENERAL'}&days=30`;\n        console.log('Fetching news data from:', endpoint);\n        const response = await axios.get(endpoint);\n        console.log('News data received:', response.data);\n        setNewsData(response.data);\n\n        // Initialize filtered data with all news\n        filterNewsData(response.data, selectedDate, selectedDateRange);\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to load news data. Please try again later.');\n        setNewsData([]);\n        setFilteredNewsData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNewsData();\n  }, [symbol, dataSource]);\n\n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", {\n      date,\n      dateRange,\n      dataLength: data.length\n    });\n    let filtered = [...data];\n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      filtered = data.filter(news => news.date === date);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      const {\n        startDate,\n        endDate\n      } = dateRange;\n\n      // Convert dates to Date objects for comparison\n      const startDateObj = new Date(startDate);\n      const endDateObj = new Date(endDate);\n\n      // Set hours to ensure we include the full days\n      startDateObj.setHours(0, 0, 0, 0);\n      filtered = data.filter(news => {\n        const newsDate = new Date(news.date);\n        newsDate.setHours(0, 0, 0, 0); // Normalize time to compare dates only\n        return newsDate >= startDateObj && newsDate < endDateObj;\n      });\n      console.log(`Filtering between ${startDateObj.toISOString()} and ${endDateObj.toISOString()}`);\n      console.log(`Found ${filtered.length} news items in range`);\n    }\n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n\n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    console.log(\"Selection changed, filtering news with:\", {\n      selectedDate,\n      selectedDateRange\n    });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n\n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  const handleNewsClick = newsItem => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  const getSentimentLabel = sentiment => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n\n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      // For display, use the original end date (before we adjusted it to the next day)\n      const displayEndDate = new Date(selectedDateRange.endDate);\n      displayEndDate.setDate(displayEndDate.getDate() - 1);\n      const formattedEndDate = displayEndDate.toISOString().split('T')[0];\n      return `Market News from ${selectedDateRange.startDate} to ${formattedEndDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NewsFeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NewsFeedHeader, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: [getNewsTitle(), \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), (selectedDate || selectedDateRange) && filteredNewsData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: 'var(--text-secondary)'\n      },\n      children: [\"No news articles found for the selected \", selectedDate ? 'date' : 'date range', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewsItemList, {\n      children: filteredNewsData.length > 0 ? filteredNewsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this)) : !selectedDate && !selectedDateRange ? newsData.map(news => /*#__PURE__*/_jsxDEV(NewsItem, {\n        sentiment: news.sentiment,\n        onClick: () => handleNewsClick(news),\n        ref: el => newsRefs.current[news.id] = el,\n        highlighted: selectedDate === news.date,\n        children: [/*#__PURE__*/_jsxDEV(NewsContent, {\n          children: [/*#__PURE__*/_jsxDEV(NewsTitle, {\n            children: news.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NewsSource, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: news.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NewsMeta, {\n          children: [/*#__PURE__*/_jsxDEV(NewsDate, {\n            children: news.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentimentBadge, {\n            sentiment: news.sentiment,\n            children: getSentimentLabel(news.sentiment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFeed, \"KHj9q+piZ5m81sxhJKCg3lr6/50=\");\n_c12 = NewsFeed;\nexport default NewsFeed;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"NewsFeedContainer\");\n$RefreshReg$(_c2, \"NewsFeedHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NewsItemList\");\n$RefreshReg$(_c5, \"NewsItem\");\n$RefreshReg$(_c6, \"NewsContent\");\n$RefreshReg$(_c7, \"NewsTitle\");\n$RefreshReg$(_c8, \"NewsSource\");\n$RefreshReg$(_c9, \"NewsMeta\");\n$RefreshReg$(_c10, \"NewsDate\");\n$RefreshReg$(_c11, \"SentimentBadge\");\n$RefreshReg$(_c12, \"NewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","NewsFeedContainer","div","_c","NewsFeedHeader","_c2","Title","h3","_c3","NewsItemList","_c4","NewsItem","props","highlighted","_c5","NewsContent","_c6","NewsTitle","h4","_c7","NewsSource","_c8","NewsMeta","_c9","NewsDate","_c10","SentimentBadge","sentiment","_c11","NewsFeed","onNewsClick","symbol","dataSource","selectedDate","selectedDateRange","_s","newsData","setNewsData","filteredNewsData","setFilteredNewsData","loading","setLoading","error","setError","newsRefs","fetchNewsData","endpoint","console","log","response","get","data","filterNewsData","err","date","dateRange","dataLength","length","filtered","filter","news","startDate","endDate","startDateObj","Date","endDateObj","setHours","newsDate","toISOString","setTimeout","matchingNews","find","current","id","scrollIntoView","behavior","block","handleNewsClick","newsItem","getSentimentLabel","getNewsTitle","displayEndDate","setDate","getDate","formattedEndDate","split","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","padding","textAlign","map","onClick","ref","el","title","source","_c12","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/NewsFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst NewsFeedContainer = styled.div`\n  width: 100%;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nconst NewsFeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  color: var(--text-primary);\n`;\n\nconst NewsItemList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-background);\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: var(--border-color);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background-color: var(--accent-color);\n  }\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n  cursor: pointer;\n  background-color: ${props => props.highlighted ? 'var(--highlight-background)' : 'transparent'};\n  \n  &:hover {\n    background-color: var(--hover-background);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst NewsContent = styled.div`\n  flex: 1;\n  padding-right: 16px;\n`;\n\nconst NewsTitle = styled.h4`\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  color: var(--text-primary);\n`;\n\nconst NewsSource = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst NewsMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  min-width: 100px;\n`;\n\nconst NewsDate = styled.div`\n  font-size: 12px;\n  color: var(--text-secondary);\n`;\n\nconst SentimentBadge = styled.div`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    if (props.sentiment > 0.3) return 'var(--positive-color)';\n    if (props.sentiment < -0.3) return 'var(--negative-color)';\n    return 'var(--neutral-color)';\n  }};\n  color: white;\n`;\n\nconst NewsFeed = ({ \n  onNewsClick, \n  symbol = 'GENERAL', \n  dataSource,\n  selectedDate = null,\n  selectedDateRange = null\n}) => {\n  const [newsData, setNewsData] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const newsRefs = useRef({});\n  \n  // Fetch news data from the API\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Use the correct API endpoint format from the backend\n        const endpoint = `http://localhost:8001/api/news?symbol=${symbol || 'GENERAL'}&days=30`;\n        console.log('Fetching news data from:', endpoint);\n        \n        const response = await axios.get(endpoint);\n        console.log('News data received:', response.data);\n        setNewsData(response.data);\n        \n        // Initialize filtered data with all news\n        filterNewsData(response.data, selectedDate, selectedDateRange);\n      } catch (err) {\n        console.error('Error fetching news data:', err);\n        setError('Failed to load news data. Please try again later.');\n        setNewsData([]);\n        setFilteredNewsData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchNewsData();\n  }, [symbol, dataSource]);\n  \n  // Helper function to filter news data\n  const filterNewsData = (data, date, dateRange) => {\n    console.log(\"Filtering news data:\", { date, dateRange, dataLength: data.length });\n    \n    let filtered = [...data];\n    \n    if (date) {\n      console.log(\"Filtering for specific date:\", date);\n      filtered = data.filter(news => news.date === date);\n    } else if (dateRange) {\n      console.log(\"Filtering for date range:\", dateRange);\n      const { startDate, endDate } = dateRange;\n      \n      // Convert dates to Date objects for comparison\n      const startDateObj = new Date(startDate);\n      const endDateObj = new Date(endDate);\n      \n      // Set hours to ensure we include the full days\n      startDateObj.setHours(0, 0, 0, 0);\n      \n      filtered = data.filter(news => {\n        const newsDate = new Date(news.date);\n        newsDate.setHours(0, 0, 0, 0); // Normalize time to compare dates only\n        return newsDate >= startDateObj && newsDate < endDateObj;\n      });\n      \n      console.log(`Filtering between ${startDateObj.toISOString()} and ${endDateObj.toISOString()}`);\n      console.log(`Found ${filtered.length} news items in range`);\n    }\n    \n    console.log(\"Filtered news count:\", filtered.length);\n    setFilteredNewsData(filtered);\n  };\n  \n  // Filter news based on selected date/range\n  useEffect(() => {\n    if (!newsData.length) return;\n    \n    console.log(\"Selection changed, filtering news with:\", { selectedDate, selectedDateRange });\n    filterNewsData(newsData, selectedDate, selectedDateRange);\n    \n    // Scroll to the first news item that matches the selected date\n    if (selectedDate) {\n      setTimeout(() => {\n        const matchingNews = newsData.find(news => news.date === selectedDate);\n        if (matchingNews && newsRefs.current[matchingNews.id]) {\n          newsRefs.current[matchingNews.id].scrollIntoView({ \n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n    }\n  }, [newsData, selectedDate, selectedDateRange]);\n  \n  const handleNewsClick = (newsItem) => {\n    if (onNewsClick) {\n      onNewsClick(newsItem);\n    }\n  };\n  \n  const getSentimentLabel = (sentiment) => {\n    if (sentiment > 0.3) return 'Positive';\n    if (sentiment < -0.3) return 'Negative';\n    return 'Neutral';\n  };\n  \n  // Get title based on current selection\n  const getNewsTitle = () => {\n    if (selectedDate) {\n      return `Market News for ${selectedDate}`;\n    } else if (selectedDateRange) {\n      // For display, use the original end date (before we adjusted it to the next day)\n      const displayEndDate = new Date(selectedDateRange.endDate);\n      displayEndDate.setDate(displayEndDate.getDate() - 1);\n      const formattedEndDate = displayEndDate.toISOString().split('T')[0];\n      \n      return `Market News from ${selectedDateRange.startDate} to ${formattedEndDate}`;\n    } else {\n      return `Market News ${symbol !== 'GENERAL' ? `for ${symbol}` : ''}`;\n    }\n  };\n  \n  return (\n    <NewsFeedContainer>\n      <NewsFeedHeader>\n        <Title>{getNewsTitle()} {loading && '(Loading...)'}</Title>\n      </NewsFeedHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      {(selectedDate || selectedDateRange) && filteredNewsData.length === 0 && (\n        <div style={{ padding: '20px', textAlign: 'center', color: 'var(--text-secondary)' }}>\n          No news articles found for the selected {selectedDate ? 'date' : 'date range'}.\n        </div>\n      )}\n      \n      <NewsItemList>\n        {filteredNewsData.length > 0 ? (\n          filteredNewsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : !selectedDate && !selectedDateRange ? (\n          newsData.map(news => (\n            <NewsItem \n              key={news.id} \n              sentiment={news.sentiment}\n              onClick={() => handleNewsClick(news)}\n              ref={el => newsRefs.current[news.id] = el}\n              highlighted={selectedDate === news.date}\n            >\n              <NewsContent>\n                <NewsTitle>{news.title}</NewsTitle>\n                <NewsSource>\n                  <span>{news.source}</span>\n                </NewsSource>\n              </NewsContent>\n              <NewsMeta>\n                <NewsDate>{news.date}</NewsDate>\n                <SentimentBadge sentiment={news.sentiment}>\n                  {getSentimentLabel(news.sentiment)}\n                </SentimentBadge>\n              </NewsMeta>\n            </NewsItem>\n          ))\n        ) : null}\n      </NewsItemList>\n    </NewsFeedContainer>\n  );\n};\n\nexport default NewsFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}