{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\MetaBundle Server\\\\Bloomberg-Terminal\\\\frontend\\\\src\\\\components\\\\Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { ResponsiveContainer, ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Scatter, ReferenceLine, ReferenceArea } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n_c = TimelineContainer;\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c2 = TimelineHeader;\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-primary);\n`;\n_c3 = Title;\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c4 = Controls;\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c5 = Button;\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c6 = SelectionControls;\nconst SelectionModeButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c7 = SelectionModeButton;\nconst ClearButton = styled.button`\n  background-color: var(--button-background);\n  color: var(--button-text);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: var(--button-hover-background);\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n_c8 = ClearButton;\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n`;\n_c9 = ChartContainer;\nconst SelectionInfo = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n  color: var(--text-secondary);\n`;\n\n// Mock data - this would come from your API\n_c10 = SelectionInfo;\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n  let price = symbol === 'AAPL' ? 180 : symbol === 'MSFT' ? 320 : symbol === 'GOOGL' ? 130 : 100;\n  let volume = 1000000;\n\n  // Generate news data first to get consistent news counts\n  const newsItems = [];\n  const newsCountByDate = {};\n\n  // Generate news for each day (0-3 items per day)\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    const dateStr = date.toISOString().split('T')[0];\n\n    // Use a deterministic approach to generate consistent news counts\n    // This ensures the timeline indicators match the actual filtered news\n    const newsCount = (i + date.getDate()) % 4; // 0-3 news items per day\n    newsCountByDate[dateStr] = newsCount;\n    for (let j = 0; j < newsCount; j++) {\n      const sentiment = (i + j) % 10 / 10 * 2 - 1; // -1 to 1\n\n      newsItems.push({\n        id: `${dateStr}-${j}`,\n        date: dateStr,\n        sentiment,\n        title: `News item ${j + 1} for ${dateStr}`,\n        source: ['Bloomberg', 'CNBC', 'Reuters'][j % 3]\n      });\n    }\n  }\n\n  // Now generate the timeline data with the news counts\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    const dateStr = date.toISOString().split('T')[0];\n\n    // Generate some random price movements\n    const priceChange = (Math.random() - 0.5) * 5;\n    price += priceChange;\n\n    // Generate some random volume\n    const volumeChange = (Math.random() - 0.5) * 200000;\n    volume = Math.max(500000, volume + volumeChange);\n\n    // Get the news count for this date\n    const newsCount = newsCountByDate[dateStr] || 0;\n\n    // Calculate average sentiment for news on this date\n    let sentiment = 0;\n    const newsForDate = newsItems.filter(item => item.date === dateStr);\n    if (newsForDate.length > 0) {\n      sentiment = newsForDate.reduce((sum, item) => sum + item.sentiment, 0) / newsForDate.length;\n    } else {\n      sentiment = (Math.random() * 2 - 1) * 0.5; // Random sentiment if no news\n    }\n    data.push({\n      date: dateStr,\n      price,\n      volume,\n      sentiment,\n      newsCount\n    });\n  }\n  return data;\n};\nconst Timeline = ({\n  dataSource,\n  symbol,\n  onDateSelect,\n  onDateRangeSelect\n}) => {\n  _s();\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Selection state\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [rangeStart, setRangeStart] = useState(null);\n  const [rangeEnd, setRangeEnd] = useState(null);\n  const [rangeSelectionInProgress, setRangeSelectionInProgress] = useState(false);\n\n  // Refs\n  const chartRef = useRef(null);\n  const chartContainerRef = useRef(null);\n\n  // Fetch data\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        let result;\n        if (dataSource === 'api') {\n          const response = await axios.get(`http://localhost:8001/api/timeline?symbol=${symbol}&days=30`);\n          result = response.data;\n        } else {\n          // Use mock data for now\n          result = generateMockData(30, symbol);\n        }\n        setData(result);\n      } catch (err) {\n        console.error(\"Failed to fetch timeline data:\", err);\n        setError(\"Failed to load timeline data. Please try again later.\");\n        setData(generateMockData(30, symbol)); // Fallback to mock data\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [dataSource, timeRange, symbol]);\n\n  // Handle point selection\n  const handlePointSelection = useCallback(date => {\n    console.log('Point selection:', date);\n    setSelectedDate(date);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n\n    // Instead of calling onDateSelect, create a date range that covers the full day\n    // This ensures both point and range selections use the same filtering mechanism\n    if (onDateRangeSelect) {\n      // Create a range that covers the entire day (from the selected date to the next day)\n      const startDate = date;\n\n      // Calculate the next day by parsing the date and adding one day\n      const currentDate = new Date(date);\n      const nextDate = new Date(currentDate);\n      nextDate.setDate(nextDate.getDate() + 1);\n      const endDate = nextDate.toISOString().split('T')[0];\n      console.log(`Converting point selection to range: ${startDate} to ${endDate}`);\n      onDateRangeSelect({\n        startDate,\n        endDate\n      });\n    }\n\n    // Still call onDateSelect for other UI updates\n    if (onDateSelect) {\n      onDateSelect(date);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle first click of range selection\n  const handleRangeStart = useCallback(date => {\n    console.log('Range selection start:', date);\n    setSelectedDate(null);\n    setRangeStart(date);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(true);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle second click of range selection\n  const handleRangeEnd = useCallback(date => {\n    console.log('Range selection end:', date);\n\n    // Determine the correct start and end dates\n    const start = new Date(rangeStart);\n    const end = new Date(date);\n    let startDate, endDate;\n    if (start <= end) {\n      startDate = rangeStart;\n      endDate = date;\n    } else {\n      startDate = date;\n      endDate = rangeStart;\n    }\n    setRangeEnd(date);\n    setRangeSelectionInProgress(false);\n    if (onDateRangeSelect) {\n      // For consistency with point selection, ensure we're using the full days\n      // Start date should be 00:00 of that day (which is the default for date strings)\n      // End date should be the next day at 00:00 to include the entire end date\n      const endDateObj = new Date(endDate);\n      const nextDay = new Date(endDateObj);\n      nextDay.setDate(nextDay.getDate() + 1);\n      const adjustedEndDate = nextDay.toISOString().split('T')[0];\n      console.log(`Range selection adjusted: ${startDate} to ${adjustedEndDate}`);\n      onDateRangeSelect({\n        startDate,\n        endDate: adjustedEndDate\n      });\n    }\n  }, [rangeStart, onDateRangeSelect]);\n\n  // Handle mouse move during range selection\n  const handleMouseMove = useCallback(e => {\n    if (!rangeSelectionInProgress || !chartContainerRef.current) return;\n    try {\n      // Get chart dimensions\n      const chartRect = chartContainerRef.current.getBoundingClientRect();\n      const chartX = e.clientX - chartRect.left;\n      const chartWidth = chartRect.width;\n\n      // Calculate position as percentage of chart width\n      const positionPercent = Math.max(0, Math.min(1, chartX / chartWidth));\n\n      // Find the closest data point to the mouse position\n      if (data && data.length > 0) {\n        const dateIndex = Math.floor(positionPercent * data.length);\n        const clampedIndex = Math.max(0, Math.min(data.length - 1, dateIndex));\n        const hoverDate = data[clampedIndex].date;\n        setRangeEnd(hoverDate);\n      }\n    } catch (err) {\n      console.error(\"Error during range selection:\", err);\n    }\n  }, [rangeSelectionInProgress, data]);\n\n  // Set up event listeners for mouse move\n  useEffect(() => {\n    if (!rangeSelectionInProgress) return;\n\n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = e => {\n      e.preventDefault();\n      return false;\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [rangeSelectionInProgress, handleMouseMove]);\n\n  // Handle chart click\n  const handleChartClick = useCallback(event => {\n    if (!event || !event.activeLabel) return;\n    const clickedDate = event.activeLabel;\n    console.log('Chart clicked:', clickedDate, 'Mode:', selectionMode, 'In progress:', rangeSelectionInProgress);\n    if (selectionMode === 'point') {\n      handlePointSelection(clickedDate);\n    } else if (selectionMode === 'range') {\n      if (rangeSelectionInProgress) {\n        handleRangeEnd(clickedDate);\n      } else {\n        handleRangeStart(clickedDate);\n      }\n    }\n  }, [selectionMode, rangeSelectionInProgress, handlePointSelection, handleRangeStart, handleRangeEnd]);\n\n  // Handle selection mode change\n  const handleSelectionModeChange = useCallback(mode => {\n    setSelectionMode(mode);\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle clear selection\n  const handleClearSelection = useCallback(() => {\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Handle time range change\n  const handleTimeRangeChange = useCallback(range => {\n    setTimeRange(range);\n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n\n  // Get reference area coordinates for visualization\n  const getReferenceAreaCoordinates = useCallback(() => {\n    if (!rangeStart || !rangeEnd) return null;\n    const dateA = new Date(rangeStart);\n    const dateB = new Date(rangeEnd);\n    if (dateA <= dateB) {\n      return {\n        x1: rangeStart,\n        x2: rangeEnd\n      };\n    } else {\n      return {\n        x1: rangeEnd,\n        x2: rangeStart\n      };\n    }\n  }, [rangeStart, rangeEnd]);\n  return /*#__PURE__*/_jsxDEV(TimelineContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TimelineHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Market Timeline \", symbol && `- ${symbol}`, \" \", loading && '(Loading...)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1W',\n          onClick: () => handleTimeRangeChange('1W'),\n          children: \"1W\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1M',\n          onClick: () => handleTimeRangeChange('1M'),\n          children: \"1M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '3M',\n          onClick: () => handleTimeRangeChange('3M'),\n          children: \"3M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: timeRange === '1Y',\n          onClick: () => handleTimeRangeChange('1Y'),\n          children: \"1Y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectionControls, {\n          children: [/*#__PURE__*/_jsxDEV(SelectionModeButton, {\n            active: selectionMode === 'point',\n            onClick: () => handleSelectionModeChange('point'),\n            children: \"Point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectionModeButton, {\n            active: selectionMode === 'range',\n            onClick: () => handleSelectionModeChange('range'),\n            children: \"Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n            onClick: handleClearSelection,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n      ref: chartContainerRef,\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n          data: data,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          onClick: handleChartClick,\n          ref: chartRef,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"rgba(255,255,255,0.1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            scale: \"auto\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"left\",\n            orientation: \"left\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            },\n            label: {\n              value: 'Price ($)',\n              angle: -90,\n              position: 'insideLeft',\n              fill: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"right\",\n            orientation: \"right\",\n            tick: {\n              fill: 'var(--text-secondary)'\n            },\n            tickLine: {\n              stroke: 'var(--text-secondary)'\n            },\n            label: {\n              value: 'Volume',\n              angle: 90,\n              position: 'insideRight',\n              fill: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: 'var(--tooltip-background)',\n              borderColor: 'var(--border-color)',\n              color: 'var(--text-primary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            wrapperStyle: {\n              color: 'var(--text-secondary)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"volume\",\n            fill: \"rgba(100, 100, 255, 0.3)\",\n            name: \"Volume\",\n            yAxisId: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#8884d8\",\n            name: \"Price\",\n            strokeWidth: 2,\n            dot: false,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"sentiment\",\n            stroke: \"#82ca9d\",\n            name: \"Sentiment\",\n            strokeWidth: 2,\n            dot: false,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            dataKey: \"newsCount\",\n            fill: \"#ff7300\",\n            name: \"News Events\",\n            yAxisId: \"left\",\n            shape: props => {\n              const {\n                cx,\n                cy\n              } = props;\n              return props.payload.newsCount > 0 ? /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: cx,\n                cy: cy,\n                r: 4,\n                fill: \"#ff7300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 19\n              }, this) : null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), selectedDate && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n            x: selectedDate,\n            stroke: \"#ff7300\",\n            strokeWidth: 2,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), rangeStart && rangeEnd && getReferenceAreaCoordinates() && /*#__PURE__*/_jsxDEV(ReferenceArea, {\n            ...getReferenceAreaCoordinates(),\n            fill: \"#ff7300\",\n            fillOpacity: 0.3,\n            stroke: \"#ff7300\",\n            strokeWidth: 1,\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectionInfo, {\n      children: [selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this), rangeStart && rangeEnd && getReferenceAreaCoordinates() && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected Range: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: getReferenceAreaCoordinates().x1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 29\n        }, this), \" to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: getReferenceAreaCoordinates().x2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"SCjC2RjiTaPotPbvcYecIljwukI=\");\n_c11 = Timeline;\nexport default Timeline;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"TimelineContainer\");\n$RefreshReg$(_c2, \"TimelineHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"SelectionControls\");\n$RefreshReg$(_c7, \"SelectionModeButton\");\n$RefreshReg$(_c8, \"ClearButton\");\n$RefreshReg$(_c9, \"ChartContainer\");\n$RefreshReg$(_c10, \"SelectionInfo\");\n$RefreshReg$(_c11, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","styled","ResponsiveContainer","ComposedChart","Line","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Scatter","ReferenceLine","ReferenceArea","axios","jsxDEV","_jsxDEV","TimelineContainer","div","_c","TimelineHeader","_c2","Title","h3","_c3","Controls","_c4","Button","button","props","active","_c5","SelectionControls","_c6","SelectionModeButton","_c7","ClearButton","_c8","ChartContainer","_c9","SelectionInfo","_c10","generateMockData","days","symbol","data","startDate","Date","setDate","getDate","price","volume","newsItems","newsCountByDate","i","date","dateStr","toISOString","split","newsCount","j","sentiment","push","id","title","source","priceChange","Math","random","volumeChange","max","newsForDate","filter","item","length","reduce","sum","Timeline","dataSource","onDateSelect","onDateRangeSelect","_s","timeRange","setTimeRange","setData","loading","setLoading","error","setError","selectionMode","setSelectionMode","selectedDate","setSelectedDate","rangeStart","setRangeStart","rangeEnd","setRangeEnd","rangeSelectionInProgress","setRangeSelectionInProgress","chartRef","chartContainerRef","fetchData","result","response","get","err","console","handlePointSelection","log","currentDate","nextDate","endDate","handleRangeStart","handleRangeEnd","start","end","endDateObj","nextDay","adjustedEndDate","handleMouseMove","e","current","chartRect","getBoundingClientRect","chartX","clientX","left","chartWidth","width","positionPercent","min","dateIndex","floor","clampedIndex","hoverDate","preventDefaultSelection","preventDefault","document","addEventListener","removeEventListener","handleChartClick","event","activeLabel","clickedDate","handleSelectionModeChange","mode","handleClearSelection","handleTimeRangeChange","range","getReferenceAreaCoordinates","dateA","dateB","x1","x2","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","marginBottom","ref","height","margin","top","right","bottom","strokeDasharray","stroke","dataKey","scale","tick","fill","tickLine","yAxisId","orientation","label","value","angle","position","contentStyle","backgroundColor","borderColor","wrapperStyle","name","type","strokeWidth","dot","shape","cx","cy","payload","r","x","fillOpacity","_c11","$RefreshReg$"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { \n  ResponsiveContainer, \n  ComposedChart, \n  Line, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend,\n  Scatter,\n  ReferenceLine,\n  ReferenceArea\n} from 'recharts';\nimport axios from 'axios';\n\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-primary);\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SelectionModeButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst ClearButton = styled.button`\n  background-color: var(--button-background);\n  color: var(--button-text);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: var(--button-hover-background);\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n`;\n\nconst SelectionInfo = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n  color: var(--text-secondary);\n`;\n\n// Mock data - this would come from your API\nconst generateMockData = (days = 30, symbol = 'GENERAL') => {\n  const data = [];\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n  \n  let price = symbol === 'AAPL' ? 180 : symbol === 'MSFT' ? 320 : symbol === 'GOOGL' ? 130 : 100;\n  let volume = 1000000;\n  \n  // Generate news data first to get consistent news counts\n  const newsItems = [];\n  const newsCountByDate = {};\n  \n  // Generate news for each day (0-3 items per day)\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    const dateStr = date.toISOString().split('T')[0];\n    \n    // Use a deterministic approach to generate consistent news counts\n    // This ensures the timeline indicators match the actual filtered news\n    const newsCount = ((i + date.getDate()) % 4); // 0-3 news items per day\n    newsCountByDate[dateStr] = newsCount;\n    \n    for (let j = 0; j < newsCount; j++) {\n      const sentiment = ((i + j) % 10) / 10 * 2 - 1; // -1 to 1\n      \n      newsItems.push({\n        id: `${dateStr}-${j}`,\n        date: dateStr,\n        sentiment,\n        title: `News item ${j+1} for ${dateStr}`,\n        source: ['Bloomberg', 'CNBC', 'Reuters'][j % 3]\n      });\n    }\n  }\n  \n  // Now generate the timeline data with the news counts\n  for (let i = 0; i < days; i++) {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    const dateStr = date.toISOString().split('T')[0];\n    \n    // Generate some random price movements\n    const priceChange = (Math.random() - 0.5) * 5;\n    price += priceChange;\n    \n    // Generate some random volume\n    const volumeChange = (Math.random() - 0.5) * 200000;\n    volume = Math.max(500000, volume + volumeChange);\n    \n    // Get the news count for this date\n    const newsCount = newsCountByDate[dateStr] || 0;\n    \n    // Calculate average sentiment for news on this date\n    let sentiment = 0;\n    const newsForDate = newsItems.filter(item => item.date === dateStr);\n    if (newsForDate.length > 0) {\n      sentiment = newsForDate.reduce((sum, item) => sum + item.sentiment, 0) / newsForDate.length;\n    } else {\n      sentiment = (Math.random() * 2 - 1) * 0.5; // Random sentiment if no news\n    }\n    \n    data.push({\n      date: dateStr,\n      price,\n      volume,\n      sentiment,\n      newsCount\n    });\n  }\n  \n  return data;\n};\n\nconst Timeline = ({ dataSource, symbol, onDateSelect, onDateRangeSelect }) => {\n  const [timeRange, setTimeRange] = useState('1M');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Selection state\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [rangeStart, setRangeStart] = useState(null);\n  const [rangeEnd, setRangeEnd] = useState(null);\n  const [rangeSelectionInProgress, setRangeSelectionInProgress] = useState(false);\n  \n  // Refs\n  const chartRef = useRef(null);\n  const chartContainerRef = useRef(null);\n  \n  // Fetch data\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        let result;\n        if (dataSource === 'api') {\n          const response = await axios.get(`http://localhost:8001/api/timeline?symbol=${symbol}&days=30`);\n          result = response.data;\n        } else {\n          // Use mock data for now\n          result = generateMockData(30, symbol);\n        }\n        \n        setData(result);\n      } catch (err) {\n        console.error(\"Failed to fetch timeline data:\", err);\n        setError(\"Failed to load timeline data. Please try again later.\");\n        setData(generateMockData(30, symbol)); // Fallback to mock data\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [dataSource, timeRange, symbol]);\n  \n  // Handle point selection\n  const handlePointSelection = useCallback((date) => {\n    console.log('Point selection:', date);\n    setSelectedDate(date);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    // Instead of calling onDateSelect, create a date range that covers the full day\n    // This ensures both point and range selections use the same filtering mechanism\n    if (onDateRangeSelect) {\n      // Create a range that covers the entire day (from the selected date to the next day)\n      const startDate = date;\n      \n      // Calculate the next day by parsing the date and adding one day\n      const currentDate = new Date(date);\n      const nextDate = new Date(currentDate);\n      nextDate.setDate(nextDate.getDate() + 1);\n      const endDate = nextDate.toISOString().split('T')[0];\n      \n      console.log(`Converting point selection to range: ${startDate} to ${endDate}`);\n      onDateRangeSelect({ startDate, endDate });\n    }\n    \n    // Still call onDateSelect for other UI updates\n    if (onDateSelect) {\n      onDateSelect(date);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle first click of range selection\n  const handleRangeStart = useCallback((date) => {\n    console.log('Range selection start:', date);\n    setSelectedDate(null);\n    setRangeStart(date);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(true);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle second click of range selection\n  const handleRangeEnd = useCallback((date) => {\n    console.log('Range selection end:', date);\n    \n    // Determine the correct start and end dates\n    const start = new Date(rangeStart);\n    const end = new Date(date);\n    \n    let startDate, endDate;\n    \n    if (start <= end) {\n      startDate = rangeStart;\n      endDate = date;\n    } else {\n      startDate = date;\n      endDate = rangeStart;\n    }\n    \n    setRangeEnd(date);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateRangeSelect) {\n      // For consistency with point selection, ensure we're using the full days\n      // Start date should be 00:00 of that day (which is the default for date strings)\n      // End date should be the next day at 00:00 to include the entire end date\n      const endDateObj = new Date(endDate);\n      const nextDay = new Date(endDateObj);\n      nextDay.setDate(nextDay.getDate() + 1);\n      const adjustedEndDate = nextDay.toISOString().split('T')[0];\n      \n      console.log(`Range selection adjusted: ${startDate} to ${adjustedEndDate}`);\n      onDateRangeSelect({ startDate, endDate: adjustedEndDate });\n    }\n  }, [rangeStart, onDateRangeSelect]);\n  \n  // Handle mouse move during range selection\n  const handleMouseMove = useCallback((e) => {\n    if (!rangeSelectionInProgress || !chartContainerRef.current) return;\n    \n    try {\n      // Get chart dimensions\n      const chartRect = chartContainerRef.current.getBoundingClientRect();\n      const chartX = e.clientX - chartRect.left;\n      const chartWidth = chartRect.width;\n      \n      // Calculate position as percentage of chart width\n      const positionPercent = Math.max(0, Math.min(1, chartX / chartWidth));\n      \n      // Find the closest data point to the mouse position\n      if (data && data.length > 0) {\n        const dateIndex = Math.floor(positionPercent * data.length);\n        const clampedIndex = Math.max(0, Math.min(data.length - 1, dateIndex));\n        const hoverDate = data[clampedIndex].date;\n        setRangeEnd(hoverDate);\n      }\n    } catch (err) {\n      console.error(\"Error during range selection:\", err);\n    }\n  }, [rangeSelectionInProgress, data]);\n  \n  // Set up event listeners for mouse move\n  useEffect(() => {\n    if (!rangeSelectionInProgress) return;\n    \n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = (e) => {\n      e.preventDefault();\n      return false;\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    \n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [rangeSelectionInProgress, handleMouseMove]);\n  \n  // Handle chart click\n  const handleChartClick = useCallback((event) => {\n    if (!event || !event.activeLabel) return;\n    \n    const clickedDate = event.activeLabel;\n    console.log('Chart clicked:', clickedDate, 'Mode:', selectionMode, 'In progress:', rangeSelectionInProgress);\n    \n    if (selectionMode === 'point') {\n      handlePointSelection(clickedDate);\n    } else if (selectionMode === 'range') {\n      if (rangeSelectionInProgress) {\n        handleRangeEnd(clickedDate);\n      } else {\n        handleRangeStart(clickedDate);\n      }\n    }\n  }, [selectionMode, rangeSelectionInProgress, handlePointSelection, handleRangeStart, handleRangeEnd]);\n  \n  // Handle selection mode change\n  const handleSelectionModeChange = useCallback((mode) => {\n    setSelectionMode(mode);\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle clear selection\n  const handleClearSelection = useCallback(() => {\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle time range change\n  const handleTimeRangeChange = useCallback((range) => {\n    setTimeRange(range);\n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Get reference area coordinates for visualization\n  const getReferenceAreaCoordinates = useCallback(() => {\n    if (!rangeStart || !rangeEnd) return null;\n    \n    const dateA = new Date(rangeStart);\n    const dateB = new Date(rangeEnd);\n    \n    if (dateA <= dateB) {\n      return { x1: rangeStart, x2: rangeEnd };\n    } else {\n      return { x1: rangeEnd, x2: rangeStart };\n    }\n  }, [rangeStart, rangeEnd]);\n  \n  return (\n    <TimelineContainer>\n      <TimelineHeader>\n        <Title>Market Timeline {symbol && `- ${symbol}`} {loading && '(Loading...)'}</Title>\n        <Controls>\n          <Button active={timeRange === '1W'} onClick={() => handleTimeRangeChange('1W')}>1W</Button>\n          <Button active={timeRange === '1M'} onClick={() => handleTimeRangeChange('1M')}>1M</Button>\n          <Button active={timeRange === '3M'} onClick={() => handleTimeRangeChange('3M')}>3M</Button>\n          <Button active={timeRange === '1Y'} onClick={() => handleTimeRangeChange('1Y')}>1Y</Button>\n          <SelectionControls>\n            <SelectionModeButton \n              active={selectionMode === 'point'} \n              onClick={() => handleSelectionModeChange('point')}\n            >\n              Point\n            </SelectionModeButton>\n            <SelectionModeButton \n              active={selectionMode === 'range'} \n              onClick={() => handleSelectionModeChange('range')}\n            >\n              Range\n            </SelectionModeButton>\n            <ClearButton onClick={handleClearSelection}>\n              Clear\n            </ClearButton>\n          </SelectionControls>\n        </Controls>\n      </TimelineHeader>\n      \n      {error && (\n        <div style={{ color: 'orange', marginBottom: '10px' }}>{error}</div>\n      )}\n      \n      <ChartContainer ref={chartContainerRef}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ComposedChart\n            data={data}\n            margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n            onClick={handleChartClick}\n            ref={chartRef}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\n            <XAxis \n              dataKey=\"date\" \n              scale=\"auto\" \n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n            />\n            <YAxis \n              yAxisId=\"left\"\n              orientation=\"left\"\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Price ($)', \n                angle: -90, \n                position: 'insideLeft',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <YAxis \n              yAxisId=\"right\"\n              orientation=\"right\"\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Volume', \n                angle: 90, \n                position: 'insideRight',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <Tooltip \n              contentStyle={{ \n                backgroundColor: 'var(--tooltip-background)',\n                borderColor: 'var(--border-color)',\n                color: 'var(--text-primary)'\n              }}\n            />\n            <Legend \n              wrapperStyle={{ \n                color: 'var(--text-secondary)'\n              }} \n            />\n            <Bar \n              dataKey=\"volume\" \n              fill=\"rgba(100, 100, 255, 0.3)\" \n              name=\"Volume\"\n              yAxisId=\"right\" \n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"price\" \n              stroke=\"#8884d8\" \n              name=\"Price\"\n              strokeWidth={2}\n              dot={false}\n              yAxisId=\"left\" \n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"sentiment\" \n              stroke=\"#82ca9d\" \n              name=\"Sentiment\"\n              strokeWidth={2}\n              dot={false}\n              yAxisId=\"left\" \n            />\n            <Scatter \n              dataKey=\"newsCount\" \n              fill=\"#ff7300\" \n              name=\"News Events\"\n              yAxisId=\"left\"\n              shape={(props) => {\n                const { cx, cy } = props;\n                return props.payload.newsCount > 0 ? (\n                  <circle cx={cx} cy={cy} r={4} fill=\"#ff7300\" />\n                ) : null;\n              }}\n            />\n            \n            {/* Point selection indicator */}\n            {selectedDate && (\n              <ReferenceLine \n                x={selectedDate} \n                stroke=\"#ff7300\" \n                strokeWidth={2}\n                yAxisId=\"left\"\n              />\n            )}\n            \n            {/* Range selection indicator */}\n            {rangeStart && rangeEnd && getReferenceAreaCoordinates() && (\n              <ReferenceArea \n                {...getReferenceAreaCoordinates()} \n                fill=\"#ff7300\" \n                fillOpacity={0.3} \n                stroke=\"#ff7300\"\n                strokeWidth={1}\n                yAxisId=\"left\"\n              />\n            )}\n          </ComposedChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n      \n      <SelectionInfo>\n        {selectedDate && (\n          <div>Selected Date: <strong>{selectedDate}</strong></div>\n        )}\n        {rangeStart && rangeEnd && getReferenceAreaCoordinates() && (\n          <div>\n            Selected Range: <strong>{getReferenceAreaCoordinates().x1}</strong> to <strong>{getReferenceAreaCoordinates().x2}</strong>\n          </div>\n        )}\n      </SelectionInfo>\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}