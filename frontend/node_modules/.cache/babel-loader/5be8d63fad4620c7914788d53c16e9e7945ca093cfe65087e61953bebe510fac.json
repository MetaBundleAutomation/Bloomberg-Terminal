{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import styled from'styled-components';import{ResponsiveContainer,ComposedChart,Line,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,Scatter,ReferenceLine,ReferenceArea}from'recharts';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TimelineContainer=styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;const TimelineHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;const Title=styled.h3`\n  margin: 0;\n  color: var(--text-primary);\n`;const Controls=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;const Button=styled.button`\n  background-color: ${props=>props.active?'var(--primary-color)':'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props=>props.active?'var(--primary-color)':'#444'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;const SelectionControls=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;const SelectionModeButton=styled.button`\n  background-color: ${props=>props.active?'var(--accent-color)':'var(--button-background)'};\n  color: ${props=>props.active?'var(--button-text-active)':'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props=>props.active?'var(--accent-color)':'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;const ClearButton=styled.button`\n  background-color: var(--button-background);\n  color: var(--button-text);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: var(--button-hover-background);\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;const ChartContainer=styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n`;const SelectionInfo=styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n  color: var(--text-secondary);\n`;const Timeline=_ref=>{let{dataSource,symbol,onDateSelect,onDateRangeSelect}=_ref;const[data,setData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[selectedDate,setSelectedDate]=useState(null);const[selectionMode,setSelectionMode]=useState('point');// 'point' or 'range'\nconst[rangeStart,setRangeStart]=useState(null);const[rangeEnd,setRangeEnd]=useState(null);const[rangeSelectionInProgress,setRangeSelectionInProgress]=useState(false);const[hoveredDate,setHoveredDate]=useState(null);const[timeRange,setTimeRange]=useState('1M');// Default to 1 month\nconst chartRef=useRef(null);// Fetch data from the API\nuseEffect(()=>{const fetchData=async()=>{setLoading(true);setError(null);try{// Calculate days based on timeRange\nlet days=30;// Default to 1 month\nswitch(timeRange){case'1W':days=7;break;case'1M':days=30;break;case'3M':days=90;break;case'1Y':days=365;break;default:days=30;}// Use the correct API endpoint format from the backend\nconst endpoint=`http://localhost:8001/api/timeline?symbol=${symbol||'GENERAL'}&days=${days}`;console.log('Fetching timeline data from:',endpoint);const response=await axios.get(endpoint);console.log('Timeline data received:',response.data);setData(response.data);}catch(err){console.error('Error fetching timeline data:',err);setError('Failed to load timeline data. Please try again later.');// Fallback to empty array\nsetData([]);}finally{setLoading(false);}};fetchData();},[dataSource,symbol,timeRange]);// Handle time range change\nconst handleTimeRangeChange=useCallback(range=>{setTimeRange(range);// Reset selections when time range changes\nsetSelectedDate(null);setRangeStart(null);setRangeEnd(null);setRangeSelectionInProgress(false);if(onDateSelect){onDateSelect(null);}if(onDateRangeSelect){onDateRangeSelect(null);}},[onDateSelect,onDateRangeSelect]);// Handle point selection\nconst handlePointSelection=useCallback(date=>{console.log('Point selection:',date);setSelectedDate(date);setRangeStart(null);setRangeEnd(null);setRangeSelectionInProgress(false);// For point selection, we'll use the same date for both filtering and display\nif(onDateRangeSelect){// Create a range that covers just the selected date\nconst startDate=date;const endDate=date;console.log(`Point selection as range: ${startDate} to ${endDate}`);onDateRangeSelect({startDate,endDate,displayEndDate:endDate});}// Still call onDateSelect for other UI updates\nif(onDateSelect){onDateSelect(date);}},[onDateSelect,onDateRangeSelect]);// Handle first click of range selection\nconst handleRangeStart=useCallback(date=>{console.log('Range selection start:',date);setSelectedDate(null);setRangeStart(date);setRangeEnd(null);setRangeSelectionInProgress(true);if(onDateSelect){onDateSelect(null);}if(onDateRangeSelect){onDateRangeSelect(null);}},[onDateSelect,onDateRangeSelect]);// Handle second click of range selection\nconst handleRangeEnd=useCallback(date=>{console.log('Range selection end:',date);// Determine the correct start and end dates\nconst start=new Date(rangeStart);const end=new Date(date);let startDate,endDate;if(start<=end){startDate=rangeStart;endDate=date;}else{startDate=date;endDate=rangeStart;}setRangeEnd(date);setRangeSelectionInProgress(false);if(onDateRangeSelect){// For display purposes, we use the selected end date\nconst displayEndDate=endDate;// For API filtering, we need to include the full end date\n// We no longer add a day to the end date, as we'll use string comparison in the NewsFeed component\nconsole.log(`Range selection: ${startDate} to ${displayEndDate}`);onDateRangeSelect({startDate,endDate:displayEndDate,// Now using the same date for both\ndisplayEndDate});}},[rangeStart,onDateRangeSelect]);// Handle mouse move during range selection\nconst handleMouseMove=useCallback(e=>{if(!rangeSelectionInProgress||!chartRef.current)return;try{// Get chart dimensions\nconst chartRect=chartRef.current.getBoundingClientRect();const chartX=e.clientX-chartRect.left;const chartWidth=chartRect.width;// Calculate position as percentage of chart width\nif(chartWidth>0){const positionPercent=Math.max(0,Math.min(1,chartX/chartWidth));const dateIndex=Math.floor(positionPercent*data.length);const clampedIndex=Math.max(0,Math.min(data.length-1,dateIndex));const hoverDate=data[clampedIndex].date;setHoveredDate(hoverDate);}}catch(err){console.error(\"Error during range selection:\",err);}},[data,rangeSelectionInProgress]);// Set up event listeners for mouse move\nuseEffect(()=>{if(!rangeSelectionInProgress)return;// Prevent default browser text selection during drag\nconst preventDefaultSelection=e=>{e.preventDefault();return false;};document.addEventListener('mousemove',handleMouseMove);document.addEventListener('selectstart',preventDefaultSelection);return()=>{document.removeEventListener('mousemove',handleMouseMove);document.removeEventListener('selectstart',preventDefaultSelection);};},[rangeSelectionInProgress,handleMouseMove]);// Handle chart click\nconst handleChartClick=useCallback(event=>{if(!event||!event.activeLabel)return;const clickedDate=event.activeLabel;console.log('Chart clicked:',clickedDate,'Mode:',selectionMode,'In progress:',rangeSelectionInProgress);if(selectionMode==='point'){handlePointSelection(clickedDate);}else if(selectionMode==='range'){if(rangeSelectionInProgress){handleRangeEnd(clickedDate);}else{handleRangeStart(clickedDate);}}},[selectionMode,rangeSelectionInProgress,handlePointSelection,handleRangeStart,handleRangeEnd]);// Handle selection mode change\nconst handleSelectionModeChange=useCallback(mode=>{setSelectionMode(mode);setSelectedDate(null);setRangeStart(null);setRangeEnd(null);setRangeSelectionInProgress(false);if(onDateSelect){onDateSelect(null);}if(onDateRangeSelect){onDateRangeSelect(null);}},[onDateSelect,onDateRangeSelect]);// Handle clear selection\nconst handleClearSelection=useCallback(()=>{setSelectedDate(null);setRangeStart(null);setRangeEnd(null);setRangeSelectionInProgress(false);if(onDateSelect){onDateSelect(null);}if(onDateRangeSelect){onDateRangeSelect(null);}},[onDateSelect,onDateRangeSelect]);// Get reference area coordinates for visualization\nconst getReferenceAreaCoordinates=useCallback(()=>{if(!rangeStart||!rangeEnd)return null;const dateA=new Date(rangeStart);const dateB=new Date(rangeEnd);if(dateA<=dateB){return{x1:rangeStart,x2:rangeEnd};}else{return{x1:rangeEnd,x2:rangeStart};}},[rangeStart,rangeEnd]);// Get temporary reference area during selection\nconst getTemporaryReferenceArea=useCallback(()=>{if(!rangeSelectionInProgress||!rangeStart||!hoveredDate)return null;const dateA=new Date(rangeStart);const dateB=new Date(hoveredDate);if(dateA<=dateB){return{x1:rangeStart,x2:hoveredDate};}else{return{x1:hoveredDate,x2:rangeStart};}},[rangeSelectionInProgress,rangeStart,hoveredDate]);// Render loading state\nif(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading timeline data...\"});}// Render error state\nif(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(TimelineContainer,{children:[/*#__PURE__*/_jsxs(TimelineHeader,{children:[/*#__PURE__*/_jsxs(Title,{children:[\"Market Timeline \",symbol&&`- ${symbol}`]}),/*#__PURE__*/_jsxs(Controls,{children:[/*#__PURE__*/_jsx(Button,{active:timeRange==='1W',onClick:()=>handleTimeRangeChange('1W'),children:\"1W\"}),/*#__PURE__*/_jsx(Button,{active:timeRange==='1M',onClick:()=>handleTimeRangeChange('1M'),children:\"1M\"}),/*#__PURE__*/_jsx(Button,{active:timeRange==='3M',onClick:()=>handleTimeRangeChange('3M'),children:\"3M\"}),/*#__PURE__*/_jsx(Button,{active:timeRange==='1Y',onClick:()=>handleTimeRangeChange('1Y'),children:\"1Y\"}),/*#__PURE__*/_jsxs(SelectionControls,{children:[/*#__PURE__*/_jsx(SelectionModeButton,{active:selectionMode==='point',onClick:()=>handleSelectionModeChange('point'),children:\"Point\"}),/*#__PURE__*/_jsx(SelectionModeButton,{active:selectionMode==='range',onClick:()=>handleSelectionModeChange('range'),children:\"Range\"}),/*#__PURE__*/_jsx(ClearButton,{onClick:handleClearSelection,children:\"Clear\"})]})]})]}),/*#__PURE__*/_jsx(ChartContainer,{ref:chartRef,children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(ComposedChart,{data:data,margin:{top:10,right:30,left:20,bottom:5},onClick:handleChartClick,onMouseMove:e=>{if(rangeSelectionInProgress){handleMouseMove(e.nativeEvent);}},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"rgba(255,255,255,0.1)\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",tick:{fill:'var(--text-secondary)'},tickLine:{stroke:'var(--text-secondary)'}}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"left\",domain:['auto','auto'],tick:{fill:'var(--text-secondary)'},tickLine:{stroke:'var(--text-secondary)'},label:{value:'Price / Sentiment',angle:-90,position:'insideLeft',fill:'var(--text-secondary)'}}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"right\",orientation:\"right\",tick:{fill:'var(--text-secondary)'},tickLine:{stroke:'var(--text-secondary)'},label:{value:'Volume',angle:90,position:'insideRight',fill:'var(--text-secondary)'}}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'var(--tooltip-background)',borderColor:'var(--border-color)',color:'var(--text-primary)'}}),/*#__PURE__*/_jsx(Legend,{wrapperStyle:{color:'var(--text-secondary)'}}),/*#__PURE__*/_jsx(Bar,{dataKey:\"volume\",fill:\"rgba(100, 100, 255, 0.3)\",name:\"Volume\",yAxisId:\"right\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"price\",stroke:\"#8884d8\",name:\"Price\",strokeWidth:2,dot:false,yAxisId:\"left\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"sentiment\",stroke:\"#82ca9d\",name:\"Sentiment\",strokeWidth:2,dot:false,yAxisId:\"left\"}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"newsCount\",fill:\"#ff7300\",name:\"News Events\",yAxisId:\"left\",shape:props=>{const{cx,cy}=props;return props.payload.newsCount>0?/*#__PURE__*/_jsx(\"circle\",{cx:cx,cy:cy,r:4,fill:\"#ff7300\"}):null;}}),selectedDate&&/*#__PURE__*/_jsx(ReferenceLine,{x:selectedDate,stroke:\"#ff7300\",strokeWidth:2,yAxisId:\"left\"}),rangeSelectionInProgress&&rangeStart&&/*#__PURE__*/_jsx(ReferenceLine,{x:rangeStart,stroke:\"#ff7300\",strokeWidth:2,strokeDasharray:\"5 5\",yAxisId:\"left\"}),rangeSelectionInProgress&&rangeStart&&hoveredDate&&getTemporaryReferenceArea()&&/*#__PURE__*/_jsx(ReferenceArea,{...getTemporaryReferenceArea(),fill:\"#ff7300\",fillOpacity:0.2,stroke:\"#ff7300\",strokeWidth:1,strokeDasharray:\"3 3\",yAxisId:\"left\"}),rangeStart&&rangeEnd&&!rangeSelectionInProgress&&getReferenceAreaCoordinates()&&/*#__PURE__*/_jsx(ReferenceArea,{...getReferenceAreaCoordinates(),fill:\"#ff7300\",fillOpacity:0.3,stroke:\"#ff7300\",strokeWidth:1,yAxisId:\"left\"})]})})}),/*#__PURE__*/_jsxs(SelectionInfo,{children:[selectedDate&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Selected Date: \",/*#__PURE__*/_jsx(\"strong\",{children:selectedDate})]}),rangeStart&&rangeEnd&&getReferenceAreaCoordinates()&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Selected Range: \",/*#__PURE__*/_jsx(\"strong\",{children:getReferenceAreaCoordinates().x1}),\" to \",/*#__PURE__*/_jsx(\"strong\",{children:getReferenceAreaCoordinates().x2})]})]})]});};export default Timeline;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","styled","ResponsiveContainer","ComposedChart","Line","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Scatter","ReferenceLine","ReferenceArea","axios","jsx","_jsx","jsxs","_jsxs","TimelineContainer","div","TimelineHeader","Title","h3","Controls","Button","button","props","active","SelectionControls","SelectionModeButton","ClearButton","ChartContainer","SelectionInfo","Timeline","_ref","dataSource","symbol","onDateSelect","onDateRangeSelect","data","setData","loading","setLoading","error","setError","selectedDate","setSelectedDate","selectionMode","setSelectionMode","rangeStart","setRangeStart","rangeEnd","setRangeEnd","rangeSelectionInProgress","setRangeSelectionInProgress","hoveredDate","setHoveredDate","timeRange","setTimeRange","chartRef","fetchData","days","endpoint","console","log","response","get","err","handleTimeRangeChange","range","handlePointSelection","date","startDate","endDate","displayEndDate","handleRangeStart","handleRangeEnd","start","Date","end","handleMouseMove","e","current","chartRect","getBoundingClientRect","chartX","clientX","left","chartWidth","width","positionPercent","Math","max","min","dateIndex","floor","length","clampedIndex","hoverDate","preventDefaultSelection","preventDefault","document","addEventListener","removeEventListener","handleChartClick","event","activeLabel","clickedDate","handleSelectionModeChange","mode","handleClearSelection","getReferenceAreaCoordinates","dateA","dateB","x1","x2","getTemporaryReferenceArea","children","onClick","ref","height","margin","top","right","bottom","onMouseMove","nativeEvent","strokeDasharray","stroke","dataKey","tick","fill","tickLine","yAxisId","domain","label","value","angle","position","orientation","contentStyle","backgroundColor","borderColor","color","wrapperStyle","name","type","strokeWidth","dot","shape","cx","cy","payload","newsCount","r","x","fillOpacity"],"sources":["C:/Repos/MetaBundle Server/Bloomberg-Terminal/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { \n  ResponsiveContainer, \n  ComposedChart, \n  Line, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend,\n  Scatter,\n  ReferenceLine,\n  ReferenceArea\n} from 'recharts';\nimport axios from 'axios';\n\nconst TimelineContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  margin: 0 0 20px 0;\n  background-color: var(--card-background);\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  user-select: none; /* Prevent text selection */\n`;\n\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  color: var(--text-primary);\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--card-background)'};\n  color: var(--text-color);\n  border: 1px solid var(--border-color);\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : '#444'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst SelectionControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SelectionModeButton = styled.button`\n  background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-background)'};\n  color: ${props => props.active ? 'var(--button-text-active)' : 'var(--button-text)'};\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.active ? 'var(--accent-color)' : 'var(--button-hover-background)'};\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst ClearButton = styled.button`\n  background-color: var(--button-background);\n  color: var(--button-text);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 4px 8px;\n  margin-right: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: var(--button-hover-background);\n  }\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--focus-color);\n  }\n`;\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n`;\n\nconst SelectionInfo = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n  color: var(--text-secondary);\n`;\n\nconst Timeline = ({ dataSource, symbol, onDateSelect, onDateRangeSelect }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectionMode, setSelectionMode] = useState('point'); // 'point' or 'range'\n  const [rangeStart, setRangeStart] = useState(null);\n  const [rangeEnd, setRangeEnd] = useState(null);\n  const [rangeSelectionInProgress, setRangeSelectionInProgress] = useState(false);\n  const [hoveredDate, setHoveredDate] = useState(null);\n  const [timeRange, setTimeRange] = useState('1M'); // Default to 1 month\n  const chartRef = useRef(null);\n  \n  // Fetch data from the API\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Calculate days based on timeRange\n        let days = 30; // Default to 1 month\n        \n        switch (timeRange) {\n          case '1W':\n            days = 7;\n            break;\n          case '1M':\n            days = 30;\n            break;\n          case '3M':\n            days = 90;\n            break;\n          case '1Y':\n            days = 365;\n            break;\n          default:\n            days = 30;\n        }\n        \n        // Use the correct API endpoint format from the backend\n        const endpoint = `http://localhost:8001/api/timeline?symbol=${symbol || 'GENERAL'}&days=${days}`;\n        console.log('Fetching timeline data from:', endpoint);\n        \n        const response = await axios.get(endpoint);\n        console.log('Timeline data received:', response.data);\n        setData(response.data);\n      } catch (err) {\n        console.error('Error fetching timeline data:', err);\n        setError('Failed to load timeline data. Please try again later.');\n        \n        // Fallback to empty array\n        setData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [dataSource, symbol, timeRange]);\n  \n  // Handle time range change\n  const handleTimeRangeChange = useCallback((range) => {\n    setTimeRange(range);\n    \n    // Reset selections when time range changes\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle point selection\n  const handlePointSelection = useCallback((date) => {\n    console.log('Point selection:', date);\n    setSelectedDate(date);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    // For point selection, we'll use the same date for both filtering and display\n    if (onDateRangeSelect) {\n      // Create a range that covers just the selected date\n      const startDate = date;\n      const endDate = date;\n      \n      console.log(`Point selection as range: ${startDate} to ${endDate}`);\n      onDateRangeSelect({ \n        startDate, \n        endDate,\n        displayEndDate: endDate\n      });\n    }\n    \n    // Still call onDateSelect for other UI updates\n    if (onDateSelect) {\n      onDateSelect(date);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle first click of range selection\n  const handleRangeStart = useCallback((date) => {\n    console.log('Range selection start:', date);\n    setSelectedDate(null);\n    setRangeStart(date);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(true);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle second click of range selection\n  const handleRangeEnd = useCallback((date) => {\n    console.log('Range selection end:', date);\n    \n    // Determine the correct start and end dates\n    const start = new Date(rangeStart);\n    const end = new Date(date);\n    \n    let startDate, endDate;\n    \n    if (start <= end) {\n      startDate = rangeStart;\n      endDate = date;\n    } else {\n      startDate = date;\n      endDate = rangeStart;\n    }\n    \n    setRangeEnd(date);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateRangeSelect) {\n      // For display purposes, we use the selected end date\n      const displayEndDate = endDate;\n      \n      // For API filtering, we need to include the full end date\n      // We no longer add a day to the end date, as we'll use string comparison in the NewsFeed component\n      \n      console.log(`Range selection: ${startDate} to ${displayEndDate}`);\n      onDateRangeSelect({ \n        startDate, \n        endDate: displayEndDate,  // Now using the same date for both\n        displayEndDate \n      });\n    }\n  }, [rangeStart, onDateRangeSelect]);\n  \n  // Handle mouse move during range selection\n  const handleMouseMove = useCallback((e) => {\n    if (!rangeSelectionInProgress || !chartRef.current) return;\n    \n    try {\n      // Get chart dimensions\n      const chartRect = chartRef.current.getBoundingClientRect();\n      const chartX = e.clientX - chartRect.left;\n      const chartWidth = chartRect.width;\n      \n      // Calculate position as percentage of chart width\n      if (chartWidth > 0) {\n        const positionPercent = Math.max(0, Math.min(1, chartX / chartWidth));\n        const dateIndex = Math.floor(positionPercent * data.length);\n        const clampedIndex = Math.max(0, Math.min(data.length - 1, dateIndex));\n        const hoverDate = data[clampedIndex].date;\n        setHoveredDate(hoverDate);\n      }\n    } catch (err) {\n      console.error(\"Error during range selection:\", err);\n    }\n  }, [data, rangeSelectionInProgress]);\n  \n  // Set up event listeners for mouse move\n  useEffect(() => {\n    if (!rangeSelectionInProgress) return;\n    \n    // Prevent default browser text selection during drag\n    const preventDefaultSelection = (e) => {\n      e.preventDefault();\n      return false;\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('selectstart', preventDefaultSelection);\n    \n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('selectstart', preventDefaultSelection);\n    };\n  }, [rangeSelectionInProgress, handleMouseMove]);\n  \n  // Handle chart click\n  const handleChartClick = useCallback((event) => {\n    if (!event || !event.activeLabel) return;\n    \n    const clickedDate = event.activeLabel;\n    console.log('Chart clicked:', clickedDate, 'Mode:', selectionMode, 'In progress:', rangeSelectionInProgress);\n    \n    if (selectionMode === 'point') {\n      handlePointSelection(clickedDate);\n    } else if (selectionMode === 'range') {\n      if (rangeSelectionInProgress) {\n        handleRangeEnd(clickedDate);\n      } else {\n        handleRangeStart(clickedDate);\n      }\n    }\n  }, [selectionMode, rangeSelectionInProgress, handlePointSelection, handleRangeStart, handleRangeEnd]);\n  \n  // Handle selection mode change\n  const handleSelectionModeChange = useCallback((mode) => {\n    setSelectionMode(mode);\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Handle clear selection\n  const handleClearSelection = useCallback(() => {\n    setSelectedDate(null);\n    setRangeStart(null);\n    setRangeEnd(null);\n    setRangeSelectionInProgress(false);\n    \n    if (onDateSelect) {\n      onDateSelect(null);\n    }\n    \n    if (onDateRangeSelect) {\n      onDateRangeSelect(null);\n    }\n  }, [onDateSelect, onDateRangeSelect]);\n  \n  // Get reference area coordinates for visualization\n  const getReferenceAreaCoordinates = useCallback(() => {\n    if (!rangeStart || !rangeEnd) return null;\n    \n    const dateA = new Date(rangeStart);\n    const dateB = new Date(rangeEnd);\n    \n    if (dateA <= dateB) {\n      return { x1: rangeStart, x2: rangeEnd };\n    } else {\n      return { x1: rangeEnd, x2: rangeStart };\n    }\n  }, [rangeStart, rangeEnd]);\n  \n  // Get temporary reference area during selection\n  const getTemporaryReferenceArea = useCallback(() => {\n    if (!rangeSelectionInProgress || !rangeStart || !hoveredDate) return null;\n    \n    const dateA = new Date(rangeStart);\n    const dateB = new Date(hoveredDate);\n    \n    if (dateA <= dateB) {\n      return { x1: rangeStart, x2: hoveredDate };\n    } else {\n      return { x1: hoveredDate, x2: rangeStart };\n    }\n  }, [rangeSelectionInProgress, rangeStart, hoveredDate]);\n  \n  // Render loading state\n  if (loading) {\n    return <div>Loading timeline data...</div>;\n  }\n  \n  // Render error state\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n  \n  return (\n    <TimelineContainer>\n      <TimelineHeader>\n        <Title>Market Timeline {symbol && `- ${symbol}`}</Title>\n        <Controls>\n          <Button \n            active={timeRange === '1W'} \n            onClick={() => handleTimeRangeChange('1W')}\n          >\n            1W\n          </Button>\n          <Button \n            active={timeRange === '1M'} \n            onClick={() => handleTimeRangeChange('1M')}\n          >\n            1M\n          </Button>\n          <Button \n            active={timeRange === '3M'} \n            onClick={() => handleTimeRangeChange('3M')}\n          >\n            3M\n          </Button>\n          <Button \n            active={timeRange === '1Y'} \n            onClick={() => handleTimeRangeChange('1Y')}\n          >\n            1Y\n          </Button>\n          <SelectionControls>\n            <SelectionModeButton \n              active={selectionMode === 'point'} \n              onClick={() => handleSelectionModeChange('point')}\n            >\n              Point\n            </SelectionModeButton>\n            <SelectionModeButton \n              active={selectionMode === 'range'} \n              onClick={() => handleSelectionModeChange('range')}\n            >\n              Range\n            </SelectionModeButton>\n            <ClearButton onClick={handleClearSelection}>\n              Clear\n            </ClearButton>\n          </SelectionControls>\n        </Controls>\n      </TimelineHeader>\n      \n      <ChartContainer ref={chartRef}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ComposedChart\n            data={data}\n            margin={{ top: 10, right: 30, left: 20, bottom: 5 }}\n            onClick={handleChartClick}\n            onMouseMove={(e) => {\n              if (rangeSelectionInProgress) {\n                handleMouseMove(e.nativeEvent);\n              }\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\n            <XAxis \n              dataKey=\"date\" \n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n            />\n            <YAxis \n              yAxisId=\"left\"\n              domain={['auto', 'auto']}\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Price / Sentiment', \n                angle: -90, \n                position: 'insideLeft',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <YAxis \n              yAxisId=\"right\"\n              orientation=\"right\"\n              tick={{ fill: 'var(--text-secondary)' }}\n              tickLine={{ stroke: 'var(--text-secondary)' }}\n              label={{ \n                value: 'Volume', \n                angle: 90, \n                position: 'insideRight',\n                fill: 'var(--text-secondary)'\n              }}\n            />\n            <Tooltip \n              contentStyle={{ \n                backgroundColor: 'var(--tooltip-background)',\n                borderColor: 'var(--border-color)',\n                color: 'var(--text-primary)'\n              }}\n            />\n            <Legend \n              wrapperStyle={{ \n                color: 'var(--text-secondary)'\n              }} \n            />\n            <Bar \n              dataKey=\"volume\" \n              fill=\"rgba(100, 100, 255, 0.3)\" \n              name=\"Volume\"\n              yAxisId=\"right\" \n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"price\" \n              stroke=\"#8884d8\" \n              name=\"Price\"\n              strokeWidth={2}\n              dot={false}\n              yAxisId=\"left\" \n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"sentiment\" \n              stroke=\"#82ca9d\" \n              name=\"Sentiment\"\n              strokeWidth={2}\n              dot={false}\n              yAxisId=\"left\" \n            />\n            <Scatter \n              dataKey=\"newsCount\" \n              fill=\"#ff7300\" \n              name=\"News Events\"\n              yAxisId=\"left\"\n              shape={(props) => {\n                const { cx, cy } = props;\n                return props.payload.newsCount > 0 ? (\n                  <circle cx={cx} cy={cy} r={4} fill=\"#ff7300\" />\n                ) : null;\n              }}\n            />\n            \n            {/* Point selection indicator */}\n            {selectedDate && (\n              <ReferenceLine \n                x={selectedDate} \n                stroke=\"#ff7300\" \n                strokeWidth={2}\n                yAxisId=\"left\"\n              />\n            )}\n            \n            {/* Range selection first point indicator */}\n            {rangeSelectionInProgress && rangeStart && (\n              <ReferenceLine \n                x={rangeStart} \n                stroke=\"#ff7300\" \n                strokeWidth={2}\n                strokeDasharray=\"5 5\"\n                yAxisId=\"left\"\n              />\n            )}\n            \n            {/* Range selection in progress indicator */}\n            {rangeSelectionInProgress && rangeStart && hoveredDate && getTemporaryReferenceArea() && (\n              <ReferenceArea \n                {...getTemporaryReferenceArea()}\n                fill=\"#ff7300\" \n                fillOpacity={0.2} \n                stroke=\"#ff7300\"\n                strokeWidth={1}\n                strokeDasharray=\"3 3\"\n                yAxisId=\"left\"\n              />\n            )}\n            \n            {/* Final range selection indicator */}\n            {rangeStart && rangeEnd && !rangeSelectionInProgress && getReferenceAreaCoordinates() && (\n              <ReferenceArea \n                {...getReferenceAreaCoordinates()}\n                fill=\"#ff7300\" \n                fillOpacity={0.3} \n                stroke=\"#ff7300\"\n                strokeWidth={1}\n                yAxisId=\"left\"\n              />\n            )}\n          </ComposedChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n      \n      <SelectionInfo>\n        {selectedDate && (\n          <div>Selected Date: <strong>{selectedDate}</strong></div>\n        )}\n        {rangeStart && rangeEnd && getReferenceAreaCoordinates() && (\n          <div>\n            Selected Range: <strong>{getReferenceAreaCoordinates().x1}</strong> to <strong>{getReferenceAreaCoordinates().x2}</strong>\n          </div>\n        )}\n      </SelectionInfo>\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}